#export vars "totStick"


void main() {
// variabili comuni
string cod;
int ansId;
question qst;
string cmd;
string qtext;
string opt;
string label;
string labelCheck;
int r1;
int r2;
int qid;
int baseQid;
string img;
string nam;
int count;
string comp;
string link;
boolean sel;
boolean selb;
boolean selCheck;
string cpt;
int preQid;
int n;
int reCod;
int selintCheck;

int countQ1sel=0;
int countQ6Col;
int countQ6Row;
int reQ1sel;

int countDevice=0;

system.setProperty("env", "stylesheet:mod.css");
system.setProperty("env", "scripts:mod.js");
string autotest=system.getProperty("test");
int panel=(int)system.getProperty("pan");
string uid = system.getProperty("sysUID");
if (autotest=="1" || uid=="GUEST" || uid=="null") {
system.setProperty("env", "debug:true");  system.setProperty("env", "browser:variables");}
string err;
string selCod;
int Nran;
int idx;
boolean valid;

if (autotest=="1") {system.setProperty("env", "scripts:modtest.js");}
string allinea;   


//variabili progetto
int cod0 = 99;
int cod1 = 99;
int cod2 = 99;
int cod3 = 99;
int cod4 = 99;
int cod5 = 99;
int cod6 = 99;
int cod7 = 99;
int cod8 = 99;
int cod9 = 99;
int cod10 = 99;
int cod11 = 99;

string s12Cod;

boolean selS101_1;
boolean selS101_2;
boolean selS101_3;
boolean selS101_4;
boolean selS101_5;
boolean selS101_6;
boolean selS101_7;

boolean selS10_1;
boolean selS10_2;
boolean selS10_3;
boolean selS10_4;
boolean selS10_5;
boolean selS10_6;
boolean selS10_7;

int countS10;
boolean sel1_2 = false;
boolean sel1_456 = false;

boolean freq1 = false; // Per Q0A
boolean freq2 = false; // Per Q0B
boolean freq3 = false; // Per Q0C
boolean freq4 = false; // Per Q0D
string valControl;


boolean selq4_1;
boolean selq4_2;
boolean selq4_3;
boolean selq4_4;
boolean selq4_5;
boolean selq4_6;
boolean selq4_7;
boolean selq4_8;
boolean selq4_9;
boolean selq4_10;
boolean selq4_11;

int countSku;

boolean selQ5_1;
boolean selQ5_2;
boolean selQ5_3;
boolean selQ5_4;
boolean selQ5_5;
boolean selQ5_6;
boolean selQ5_7;
boolean selQ5_8;
boolean selQ5_9;
boolean selQ5_10;
boolean selQ5_11;
boolean selQ5_12;

int blocS10Count;
int blocQ3Count;
int selCodeQ3;
int blocQ5Count;

int countRiduci;
int countSostituisci;

int countQ1mop;
int countQ1bismop;
int reCodQ1mop;

int ansQ8a;
int ansQ8b;
int ansQ8c;
int ansQ8g;
int ansQ8k;
int reCodB;
int reCodC;

int totStick;

int countQ29;
int countGlo;
int countIq;
int countLil;
int countPul;
int countPlo;
int countOm;

boolean hasLucSwitch30;
boolean hasNeoSwitch30;
boolean hasVeoSwitch30;
boolean hasFiiSwitch30;
boolean hasHeeSwitch30;
boolean hasTerSwitch30;
boolean hasLevSwitch30;
boolean hasDelSwitch30;
boolean hasCamSwitch30;
boolean hasIdsSwitch30;
boolean hasIseSwitch30;
boolean hasLucSwitch90;
boolean hasNeoSwitch90;
boolean hasVeoSwitch90;
boolean hasFiiSwitch90;
boolean hasHeeSwitch90;
boolean hasTerSwitch90;
boolean hasLevSwitch90;
boolean hasDelSwitch90;
boolean hasCamSwitch90;
boolean hasIdsSwitch90;
boolean hasIseSwitch90;

boolean hasTotSwitch30;
boolean hasTotSwitch90;


int validCount;

allinea="<script>$(window).load(function() {alignChoiceOptions(3);});</script>";
string scriptzoom="<script type='text/javascript' src='https://www.primisoft.com/fields/script/jquery.fancybox.js?v=2.1.5'></script><script type='text/javascript''> $(document).ready(function() { $('.fancybox').fancybox();});</script>";

string sync="<script>$(window).load(function() {setupRowCheckboxSync();});</script>";

//variabile mobile
string deviceType = system.getProperty("user_agent:deviceType");
string ss1 = deviceType.trim();
system.setProperty("device",ss1);
boolean live=true;



vector skubrands1 = new vector { "Benson&Hedges Blue 100'S", "Benson&Hedges Blue Dure Da 20", "Benson&Hedges Blue Morbide Da 20", "Benson & Hedges Gold", "Benson&Hedges Red 100'S", "Benson&Hedges Red Dure Da 20", "Benson&Hedges Red Morbide Da 20", "Benson&Hedges Blue Super Slim", "Benson&Hedges Yellow Super Slim", "Benson&Hedges White 100'S", "Benson&Hedges White Dure Da 20", "Benson&Hedges Yellow 100'S", "Benson&Hedges Yellow Dure Da 20", "Camel Activate (Freshness) Dure Da 20", "Camel Activate Connect Blue (No Caps) Dure Da 20", "Camel Blue Dure Da 20 100'S", "Camel Blue Dure Da 20", "Camel Blue Morbide Da 20", "Camel Compact Blue Dure Da 20", "Camel Essential Blue Dure Da 20", "Camel Filter 100'S Dure Da 20", "Camel Filter Dure Da 20", "Camel Filter Morbide Da 20", "Camel Orange Dure Da 20", "Camel Senso Gold 20", "Camel Silver Dure Da 20", "Camel White Dure Da 20", "Chesterfield Blu 100s", "Chesterfield Blu Dure Da 20", "Chesterfield Blu Morbide Da 20", "Chesterfield Tuned Blue Da 20", "Chesterfield Rosse 100s", "Chesterfield Rosse Dure Da 20", "Chesterfield Rosse Morbide Da 20", "Chesterfield Remix Da 20", "Chesterfield Silver Dure Da 20", "Lucky Strike Amber Dure Da 20", "Lucky Strike Compact Demi Da 20", "Lucky Strike Eclipse Dure Da 20", "Lucky Strike Red Dure Da 20", "Lucky Strike Red Morbide Da 20", "Lucky Strike Red 100s", "Lucky Strike Silver Bay Dure Da 20", "Marlboro Advance Touch Dure Da 20", "Marlboro Blue Line", "Marlboro Crafted Gold 100'S", "Marlboro Crafted Gold Dure Da 20", "Marlboro Crafted Red 100'S", "Marlboro Crafted Red Dure Da 20", "Marlboro Gold 100s", "Marlboro Gold Dure Da 20", "Marlboro Gold Morbide Da 20", "Marlboro Gold Line", "Marlboro Gold Pocket Pack Dure Da 20", "Marlboro Gold Touch Dure Da 20", "Marlboro Mix Da 20", "Marlboro Pocket Red Pack Morbide Da 20", "Marlboro Prime Dure Da 20", "Marlboro 100s Dure", "Marlboro Rosse Dure Da 20", "Marlboro Morbide Da 20", "Marlboro Red Touch Dure Da 20", "Marlboro Silver Dure Da 20", "Merit Bianca Dure Da 20", "Merit Blu 100s", "Merit Blu Dure Da 20", "Merit Bay Dure Da 20", "Merit Gialla 100s", "Merit Gialla Dure Da 20", "Merit Gialla Morbide Da 20", "Merit Uno Dure Da 20", "Ms/Dunhill Bianche (Extra Light) Dure Da 20", "Ms/Dunhill Bionde 100s", "Ms/Dunhill Bionde F Dure Da 20", "Ms/Dunhill Bionde F Morbide Da 20", "Ms/Dunhill Chiare (Leggere) Dure Da 20", "Ms/Dunhill Rosse Dure Da 20", "Ms/Dunhill Rosse Morbide Da 20", "Dunhill Club Bianca", "Dunhill Club Gold", "Dunhill International Da 20", "Dunhill Ssl Blue 20", "Dunhill Ssl Red 20", "Dunhill Ssl Gold 20", "Philip Morris Azure 100s", "Philip Morris Azure Dure Da 20", "Philip Morris Blue 100s", "Philip Morris Blue Dure Da 20", "Philip Morris Blue Morbide Da 20", "Philip Morris Filter Kings", "Philip Morris One Da 20 Premium", "Philip Morris Red 100s", "Philip Morris Red Dure Da 20", "Philip Morris Red Morbide Da 20", "Philip Morris Ssl Beige", "Philip Morris Ssl Blue", "Winston Blue 100s", "Winston Blue Dure Da 20", "Winston Blue Morbide Da 20", "Winston Blue Super Line", "Winston Caster 100s*20pz", "Winston Caster*Ast20", "Winston Classic Red 100'S", "Winston Classic Red Dure", "Winston Classic Red Morbide", "Winston Compact Demi Da 20", "Winston Expand Dure Da 20", "Winston Silver Dure Da 20 100'S", "Winston Silver Dure Da 20", "Winston Silver Super Line", "Winston White Dure Da 20", "Winston White Super Line", "Winston Xstyle Blue Dure Da 20", "Winston Xstyle White Dure Da 20","ROTHMANS Special Blue", "Rothmans of London D-Series Select dure da 20", "ROTHMANS of London Essence Blue dure da 20", "ROTHMANS of London EssenceBlue morbide da 20", "ROTHMANS of London Essence  Red 100S 20s", "ROTHMANS of London Essence Red dure da 20", "ROTHMANS of London EssenceRed morbide da 20", "ROTHMANS of London Essence  Silver dure da 20", "ROTHMANS of London Essence Silver morbide da 20", "Rothmans Slim  Sensora Super Slims da 20", "ROTHMANS of London Superslim  Blue Tube dure da 20", "ROTHMANS of London Superslim Silver Tube dure da 20", "ROTHMANS of London Superslim White Tube dure da 20", "Rothmans of London Surround dure", "ROTHMANS of London Tube Blue 100S 20s", "ROTHMANS of London Tube Blue dure da 20", "ROTHMANS of London Tube Silver 100S 20s", "ROTHMANS of London Tube Silver dure da 20", "ROTHMANS of London Tube White dure da 20", "ROTHMANS of London Tube White 100S da 20" };
vector skubrandsOriginal1 = new vector { "Benson&Hedges Blue 100'S", "Benson&Hedges Blue Dure Da 20", "Benson&Hedges Blue Morbide Da 20", "Benson & Hedges Gold", "Benson&Hedges Red 100'S", "Benson&Hedges Red Dure Da 20", "Benson&Hedges Red Morbide Da 20", "Benson&Hedges Blue Super Slim", "Benson&Hedges Yellow Super Slim", "Benson&Hedges White 100'S", "Benson&Hedges White Dure Da 20", "Benson&Hedges Yellow 100'S", "Benson&Hedges Yellow Dure Da 20", "Camel Activate (Freshness) Dure Da 20", "Camel Activate Connect Blue (No Caps) Dure Da 20", "Camel Blue Dure Da 20 100'S", "Camel Blue Dure Da 20", "Camel Blue Morbide Da 20", "Camel Compact Blue Dure Da 20", "Camel Essential Blue Dure Da 20", "Camel Filter 100'S Dure Da 20", "Camel Filter Dure Da 20", "Camel Filter Morbide Da 20", "Camel Orange Dure Da 20", "Camel Senso Gold 20", "Camel Silver Dure Da 20", "Camel White Dure Da 20", "Chesterfield Blu 100s", "Chesterfield Blu Dure Da 20", "Chesterfield Blu Morbide Da 20", "Chesterfield Tuned Blue Da 20", "Chesterfield Rosse 100s", "Chesterfield Rosse Dure Da 20", "Chesterfield Rosse Morbide Da 20", "Chesterfield Remix Da 20", "Chesterfield Silver Dure Da 20", "Lucky Strike Amber Dure Da 20", "Lucky Strike Compact Demi Da 20", "Lucky Strike Eclipse Dure Da 20", "Lucky Strike Red Dure Da 20", "Lucky Strike Red Morbide Da 20", "Lucky Strike Red 100s", "Lucky Strike Silver Bay Dure Da 20", "Marlboro Advance Touch Dure Da 20", "Marlboro Blue Line", "Marlboro Crafted Gold 100'S", "Marlboro Crafted Gold Dure Da 20", "Marlboro Crafted Red 100'S", "Marlboro Crafted Red Dure Da 20", "Marlboro Gold 100s", "Marlboro Gold Dure Da 20", "Marlboro Gold Morbide Da 20", "Marlboro Gold Line", "Marlboro Gold Pocket Pack Dure Da 20", "Marlboro Gold Touch Dure Da 20", "Marlboro Mix Da 20", "Marlboro Pocket Red Pack Morbide Da 20", "Marlboro Prime Dure Da 20", "Marlboro 100s Dure", "Marlboro Rosse Dure Da 20", "Marlboro Morbide Da 20", "Marlboro Red Touch Dure Da 20", "Marlboro Silver Dure Da 20", "Merit Bianca Dure Da 20", "Merit Blu 100s", "Merit Blu Dure Da 20", "Merit Bay Dure Da 20", "Merit Gialla 100s", "Merit Gialla Dure Da 20", "Merit Gialla Morbide Da 20", "Merit Uno Dure Da 20", "Ms/Dunhill Bianche (Extra Light) Dure Da 20", "Ms/Dunhill Bionde 100s", "Ms/Dunhill Bionde F Dure Da 20", "Ms/Dunhill Bionde F Morbide Da 20", "Ms/Dunhill Chiare (Leggere) Dure Da 20", "Ms/Dunhill Rosse Dure Da 20", "Ms/Dunhill Rosse Morbide Da 20", "Dunhill Club Bianca", "Dunhill Club Gold", "Dunhill International Da 20", "Dunhill Ssl Blue 20", "Dunhill Ssl Red 20", "Dunhill Ssl Gold 20", "Philip Morris Azure 100s", "Philip Morris Azure Dure Da 20", "Philip Morris Blue 100s", "Philip Morris Blue Dure Da 20", "Philip Morris Blue Morbide Da 20", "Philip Morris Filter Kings", "Philip Morris One Da 20 Premium", "Philip Morris Red 100s", "Philip Morris Red Dure Da 20", "Philip Morris Red Morbide Da 20", "Philip Morris Ssl Beige", "Philip Morris Ssl Blue", "Winston Blue 100s", "Winston Blue Dure Da 20", "Winston Blue Morbide Da 20", "Winston Blue Super Line", "Winston Caster 100s*20pz", "Winston Caster*Ast20", "Winston Classic Red 100'S", "Winston Classic Red Dure", "Winston Classic Red Morbide", "Winston Compact Demi Da 20", "Winston Expand Dure Da 20", "Winston Silver Dure Da 20 100'S", "Winston Silver Dure Da 20", "Winston Silver Super Line", "Winston White Dure Da 20", "Winston White Super Line", "Winston Xstyle Blue Dure Da 20", "Winston Xstyle White Dure Da 20", "ROTHMANS Special Blue", "Rothmans of London D-Series Select dure da 20", "ROTHMANS of London Essence Blue dure da 20", "ROTHMANS of London EssenceBlue morbide da 20", "ROTHMANS of London Essence  Red 100S 20s", "ROTHMANS of London Essence Red dure da 20", "ROTHMANS of London EssenceRed morbide da 20", "ROTHMANS of London Essence  Silver dure da 20", "ROTHMANS of London Essence Silver morbide da 20", "Rothmans Slim  Sensora Super Slims da 20", "ROTHMANS of London Superslim  Blue Tube dure da 20", "ROTHMANS of London Superslim Silver Tube dure da 20", "ROTHMANS of London Superslim White Tube dure da 20", "Rothmans of London Surround dure", "ROTHMANS of London Tube Blue 100S 20s", "ROTHMANS of London Tube Blue dure da 20", "ROTHMANS of London Tube Silver 100S 20s", "ROTHMANS of London Tube Silver dure da 20", "ROTHMANS of London Tube White dure da 20", "ROTHMANS of London Tube White 100S da 20", "#shaltra Marca Di Sigarette Tradizionali#sf" };





// Q10: CHOICE
qst = new question("choice", 10);
qst.setProperty("text", "Lei è");
qst.setProperty("code", "S1");
qst.setProperty("show_rand", false);
vector q10_opts = new vector {
"Uomo",
"Donna"
};
qst.setProperty("options", q10_opts);
send qst;

// Q20: CONCEPT
qst = new question("open", 20);
qst.setProperty("text", "Indichi la sua età:");
qst.setProperty("code", "S2");
qst.setProperty("view", "numeric");
qst.setProperty("validation_rule", "^[1-9]|[1-9][0-9]$");
qst.setProperty("validation_error", "Indicare un numero compreso tra 1 e 99");
send qst;

int eta=(int)system.getProperty("ans20");
 
if(eta<18 && autotest !="1") { reCod=0; return 4;}
if(eta>=18 && eta<=29) { reCod=1;}
if(eta>=30 && eta<=44) { reCod=2;}
if(eta>=45 && eta<=65) { reCod=3;}
if(eta>65 && autotest !="1") { reCod=4;}

qst = new question("choice", 22);
qst.setProperty("text", "Recage");
qst.setProperty("code", "s3");
vector q22_opts = new vector {
"Meno di 19",
"19-29",
"30-44",
"45-65",
"+ di 65"
};
qst.setProperty("options", q22_opts);
qst.setProperty("default_answer","{ 'selection': ["+reCod+"]}");
qst.setProperty("hidden", true);
send qst;

qst = new question("choice", 7);
qst.setProperty("text", "In che provincia vive?  ");
qst.setProperty("code", "qc");
vector q7_opts = new vector { "Agrigento", "Alessandria", "Ancona", "Arezzo", "Ascoli Piceno", "Asti", "Avellino", "Bari", "Barletta-Andria-Trani", "Belluno", "Benevento", "Bergamo", "Biella", "Bologna", "Bolzano/Bozen", "Brescia", "Brindisi", "Cagliari", "Caltanissetta", "Campobasso", "Caserta", "Catania", "Catanzaro", "Chieti", "Como", "Cosenza", "Cremona", "Crotone", "Cuneo", "Enna", "Fermo", "Ferrara", "Firenze", "Foggia", "Forlì-Cesena", "Frosinone", "Genova", "Gorizia", "Grosseto", "Imperia", "Isernia", "La Spezia", "L'Aquila", "Latina", "Lecce", "Lecco", "Livorno", "Lodi", "Lucca", "Macerata", "Mantova", "Massa-Carrara", "Matera", "Messina", "Milano", "Modena", "Monza e della Brianza", "Napoli", "Novara", "Nuoro", "Oristano", "Padova", "Palermo", "Parma", "Pavia", "Perugia", "Pesaro e Urbino", "Pescara", "Piacenza", "Pisa", "Pistoia", "Pordenone", "Potenza", "Prato", "Ragusa", "Ravenna", "Reggio Calabria", "Reggio nell'Emilia", "Rieti", "Rimini", "Roma", "Rovigo", "Salerno", "Sassari", "Savona", "Siena", "Siracusa", "Sondrio", "Sud Sardegna", "Taranto", "Teramo", "Terni", "Torino", "Trapani", "Trento", "Treviso", "Trieste", "Udine", "Valle d'Aosta/Vallée d'Aoste", "Varese", "Venezia", "Verbano-Cusio-Ossola", "Vercelli", "Verona", "Vibo Valentia", "Vicenza", "Viterbo" }; 
qst.setProperty("options", q7_opts); 
if (autotest!="1") { qst.setProperty("view", "menu"); }
send qst; 

int prv=system.getProperty("ans7");

vector comuniBase = new vector {"Agrigento", "Alessandria della Rocca", "Aragona", "Bivona", "Burgio", "Calamonaci", "Caltabellotta", "Camastra", "Cammarata", "Campobello di Licata", "Canicattì", "Casteltermini", "Castrofilippo", "Cattolica Eraclea", "Cianciana", "Comitini", "Favara", "Grotte", "Joppolo Giancaxio", "Lampedusa e Linosa", "Licata", "Lucca Sicula", "Menfi", "Montallegro", "Montevago", "Naro", "Palma di Montechiaro", "Porto Empedocle", "Racalmuto", "Raffadali", "Ravanusa", "Realmonte", "Ribera", "Sambuca di Sicilia", "San Biagio Platani", "San Giovanni Gemini", "Santa Elisabetta", "Santa Margherita di Belice", "Sant'Angelo Muxaro", "Santo Stefano Quisquina", "Sciacca", "Siculiana", "Villafranca Sicula", "Acqui Terme", "Albera Ligure", "Alessandria", "Alfiano Natta", "Alice Bel Colle", "Altavilla Monferrato", "Alzano Scrivia", "Arquata Scrivia", "Avolasca", "Balzola", "Basaluzzo", "Bassignana", "Belforte Monferrato", "Bergamasco", "Berzano di Tortona", "Bistagno", "Borghetto di Borbera", "Borgoratto Alessandrino", "Borgo San Martino", "Bosco Marengo", "Bosio", "Bozzole", "Brignano-Frascata", "Cabella Ligure", "Camagna Monferrato", "Camino", "Cantalupo Ligure", "Capriata d'Orba", "Carbonara Scrivia", "Carentino", "Carezzano", "Carpeneto", "Carrega Ligure", "Carrosio", "Cartosio", "Casal Cermelli", "Casaleggio Boiro", "Casale Monferrato", "Casalnoceto", "Casasco", "Cassine", "Cassinelle", "Castellania Coppi", "Castellar Guidobono", "Castellazzo Bormida", "Castelletto d'Erro", "Castelletto d'Orba", "Castelletto Merli", "Castelletto Monferrato", "Castelnuovo Bormida", "Castelnuovo Scrivia", "Castelspina", "Cavatore", "Cella Monte", "Cereseto", "Cerreto Grue", "Cerrina Monferrato", "Coniolo", "Conzano", "Costa Vescovato", "Cremolino", "Denice", "Dernice", "Fabbrica Curone", "Felizzano", "Fraconalto", "Francavilla Bisio", "Frascaro", "Frassinello Monferrato", "Frassineto Po", "Fresonara", "Frugarolo", "Fubine Monferrato", "Gabiano", "Gamalero", "Garbagna", "Gavi", "Giarole", "Gremiasco", "Grognardo", "Grondona", "Guazzora", "Isola Sant'Antonio", "Lerma", "Malvicino", "Masio", "Melazzo", "Merana", "Mirabello Monferrato", "Molare", "Molino dei Torti", "Mombello Monferrato", "Momperone", "Moncestino", "Mongiardino Ligure", "Monleale", "Montacuto", "Montaldeo", "Montaldo Bormida", "Montecastello", "Montechiaro d'Acqui", "Montegioco", "Montemarzino", "Morano sul Po", "Morbello", "Mornese", "Morsasco", "Murisengo", "Novi Ligure", "Occimiano", "Odalengo Grande", "Odalengo Piccolo", "Olivola", "Orsara Bormida", "Ottiglio", "Ovada", "Oviglio", "Ozzano Monferrato", "Paderna", "Pareto", "Parodi Ligure", "Pasturana", "Pecetto di Valenza", "Pietra Marazzi", "Pomaro Monferrato", "Pontecurone", "Pontestura", "Ponti", "Ponzano Monferrato", "Ponzone", "Pozzol Groppo", "Pozzolo Formigaro", "Prasco", "Predosa", "Quargnento", "Quattordio", "Ricaldone", "Rivalta Bormida", "Rivarone", "Roccaforte Ligure", "Rocca Grimalda", "Rocchetta Ligure", "Rosignano Monferrato", "Sala Monferrato", "Sale", "San Cristoforo", "San Giorgio Monferrato", "San Salvatore Monferrato", "San Sebastiano Curone", "Sant'Agata Fossili", "Sardigliano", "Sarezzano", "Serralunga di Crea", "Serravalle Scrivia", "Sezzadio", "Silvano d'Orba", "Solero", "Solonghello", "Spigno Monferrato", "Spineto Scrivia", "Stazzano", "Strevi", "Tagliolo Monferrato", "Tassarolo", "Terruggia", "Terzo", "Ticineto", "Tortona", "Treville", "Trisobbio", "Valenza", "Valmacca", "Vignale Monferrato", "Vignole Borbera", "Viguzzolo", "Villadeati", "Villalvernia", "Villamiroglio", "Villanova Monferrato", "Villaromagnano", "Visone", "Volpedo", "Volpeglino", "Voltaggio", "Cassano Spinola", "Alluvioni Piovera", "Lu e Cuccaro Monferrato", "Agugliano", "Ancona", "Arcevia", "Barbara", "Belvedere Ostrense", "Camerano", "Camerata Picena", "Castelbellino", "Castelfidardo", "Castelleone di Suasa", "Castelplanio", "Cerreto d'Esi", "Chiaravalle", "Corinaldo", "Cupramontana", "Fabriano", "Falconara Marittima", "Filottrano", "Genga", "Jesi", "Loreto", "Maiolati Spontini", "Mergo", "Monsano", "Montecarotto", "Montemarciano", "Monte Roberto", "Monte San Vito", "Morro d'Alba", "Numana", "Offagna", "Osimo", "Ostra", "Ostra Vetere", "Poggio San Marcello", "Polverigi", "Rosora", "San Marcello", "San Paolo di Jesi", "Santa Maria Nuova", "Sassoferrato", "Senigallia", "Serra de' Conti", "Serra San Quirico", "Sirolo", "Staffolo", "Trecastelli", "Anghiari", "Arezzo", "Badia Tedalda", "Bibbiena", "Bucine", "Capolona", "Caprese Michelangelo", "Castel Focognano", "Castel San Niccolò", "Castiglion Fibocchi", "Castiglion Fiorentino", "Cavriglia", "Chitignano", "Chiusi della Verna", "Civitella in Val di Chiana", "Cortona", "Foiano della Chiana", "Loro Ciuffenna", "Lucignano", "Marciano della Chiana", "Montemignaio", "Monterchi", "Monte San Savino", "Montevarchi", "Ortignano Raggiolo", "Pieve Santo Stefano", "Poppi", "San Giovanni Valdarno", "Sansepolcro", "Sestino", "Subbiano", "Talla", "Terranuova Bracciolini", "Castelfranco Piandiscò", "Pratovecchio Stia", "Laterina Pergine Valdarno", "Acquasanta Terme", "Acquaviva Picena", "Appignano del Tronto", "Arquata del Tronto", "Ascoli Piceno", "Carassai", "Castel di Lama", "Castignano", "Castorano", "Colli del Tronto", "Comunanza", "Cossignano", "Cupra Marittima", "Folignano", "Force", "Grottammare", "Maltignano", "Massignano", "Monsampolo del Tronto", "Montalto delle Marche", "Montedinove", "Montefiore dell'Aso", "Montegallo", "Montemonaco", "Monteprandone", "Offida", "PaLMEano", "Ripatransone", "Roccafluvione", "Rotella", "San Benedetto del Tronto", "Spinetoli", "Venarotta", "Agliano Terme", "Albugnano", "Antignano", "Aramengo", "Asti", "Azzano d'Asti", "Baldichieri d'Asti", "Belveglio", "Berzano di San Pietro", "Bruno", "Bubbio", "Buttigliera d'Asti", "Calamandrana", "Calliano ", "Calosso", "Camerano Casasco", "Canelli", "Cantarana", "Capriglio", "Casorzo", "Cassinasco", "Castagnole delle Lanze", "Castagnole Monferrato", "Castel Boglione", "Castell'Alfero", "Castellero", "Castelletto Molina", "Castello di Annone", "Castelnuovo Belbo", "Castelnuovo Calcea", "Castelnuovo Don Bosco", "Castel Rocchero", "Cellarengo", "Celle Enomondo", "Cerreto d'Asti", "Cerro Tanaro", "Cessole", "Chiusano d'Asti", "Cinaglio", "Cisterna d'Asti", "Coazzolo", "Cocconato", "Corsione", "Cortandone", "Cortanze", "Cortazzone", "Cortiglione", "Cossombrato", "Costigliole d'Asti", "Cunico", "Dusino San Michele", "Ferrere", "Fontanile", "Frinco", "Grana", "Grazzano Badoglio", "Incisa Scapaccino", "Isola d'Asti", "Loazzolo", "Maranzana", "Maretto", "Moasca", "Mombaldone", "Mombaruzzo", "Mombercelli", "Monale", "Monastero Bormida", "Moncalvo", "Moncucco Torinese", "Mongardino", "Montabone", "Montafia", "Montaldo Scarampi", "Montechiaro d'Asti", "Montegrosso d'Asti", "Montemagno", "Moransengo", "Nizza Monferrato", "Olmo Gentile", "Passerano Marmorito", "Penango", "Piea", "Pino d'Asti", "Piovà Massaia", "Portacomaro", "Quaranti", "Refrancore", "Revigliasco d'Asti", "Roatto", "Robella", "Rocca d'Arazzo", "Roccaverano", "Rocchetta Palafea", "Rocchetta Tanaro", "San Damiano d'Asti", "San Giorgio Scarampi", "San Martino Alfieri", "San Marzano Oliveto", "San Paolo Solbrito", "Scurzolengo", "Serole", "Sessame", "Settime", "Soglio", "Tigliole", "Tonco", "Tonengo", "Vaglio Serra", "Valfenera", "Vesime", "Viale", "Viarigi", "Vigliano d'Asti", "Villafranca d'Asti", "Villanova d'Asti", "Villa San Secondo", "Vinchio", "Montiglio Monferrato", "Aiello del Sabato", "Altavilla Irpina", "Andretta", "Aquilonia", "Ariano Irpino", "Atripalda", "Avella", "Avellino", "Bagnoli Irpino", "Baiano", "Bisaccia", "Bonito", "Cairano", "Calabritto", "Calitri", "Candida", "Caposele", "Capriglia Irpina", "Carife", "Casalbore", "Cassano Irpino", "Castel Baronia", "Castelfranci", "Castelvetere sul Calore", "Cervinara", "Cesinali", "Chianche", "Chiusano di San Domenico", "Contrada", "Conza della Campania", "Domicella", "Flumeri", "Fontanarosa", "Forino", "Frigento", "Gesualdo", "Greci", "Grottaminarda", "Grottolella", "Guardia Lombardi", "Lacedonia", "Lapio", "Lauro", "Lioni", "Luogosano", "Manocalzati", "Marzano di Nola", "Melito Irpino", "Mercogliano", "Mirabella Eclano", "Montaguto", "Montecalvo Irpino", "Montefalcione", "Monteforte Irpino", "Montefredane", "Montefusco", "Montella", "Montemarano", "Montemiletto", "Monteverde", "Morra De Sanctis", "Moschiano", "Mugnano del Cardinale", "Nusco", "Ospedaletto d'Alpinolo", "Pago del Vallo di Lauro", "Parolise", "Paternopoli", "Petruro Irpino", "Pietradefusi", "Pietrastornina", "Prata di Principato Ultra", "Pratola Serra", "Quadrelle", "Quindici", "Roccabascerana", "Rocca San Felice", "Rotondi", "Salza Irpina", "San Mango sul Calore", "San Martino Valle Caudina", "San Michele di Serino", "San Nicola Baronia", "San Potito Ultra", "San Sossio Baronia", "Santa Lucia di Serino", "Sant'Andrea di Conza", "Sant'Angelo all'Esca", "Sant'Angelo a Scala", "Sant'Angelo dei Lombardi", "Santa Paolina", "Santo Stefano del Sole", "Savignano Irpino", "Scampitella", "Senerchia", "Serino", "Sirignano", "Solofra", "Sorbo Serpico", "Sperone", "Sturno", "Summonte", "Taurano", "Taurasi", "Teora", "Torella dei Lombardi", "Torre Le Nocelle", "Torrioni", "Trevico", "Tufo", "Vallata", "Vallesaccarda", "Venticano", "Villamaina", "Villanova del Battista", "Volturara Irpina", "Zungoli", "Montoro", "Acquaviva delle Fonti", "Adelfia", "Alberobello", "Altamura", "Bari", "Binetto", "Bitetto", "Bitonto", "Bitritto", "Capurso", "Casamassima", "Cassano delle Murge", "Castellana Grotte", "Cellamare", "Conversano", "Corato", "Gioia del Colle", "Giovinazzo", "Gravina in Puglia", "Grumo Appula", "Locorotondo", "Modugno", "Mola di Bari", "Molfetta", "Monopoli", "Noci", "Noicattaro", "Palo del Colle", "Poggiorsini", "Polignano a Mare", "Putignano", "Rutigliano", "Ruvo di Puglia", "Sammichele di Bari", "Sannicandro di Bari", "Santeramo in Colle", "Terlizzi", "Toritto", "Triggiano", "Turi", "Valenzano", "Andria", "Barletta", "Bisceglie", "Canosa di Puglia", "Margherita di Savoia", "Minervino Murge", "San Ferdinando di Puglia", "Spinazzola", "Trani", "Trinitapoli", "Agordo", "Alano di Piave", "Alleghe", "Arsiè", "Auronzo di Cadore", "Belluno", "Borca di Cadore", "Calalzo di Cadore", "Cencenighe Agordino", "Cesiomaggiore", "Chies d'Alpago", "Cibiana di Cadore", "Colle Santa Lucia", "Comelico Superiore", "Cortina d'Ampezzo", "Danta di Cadore", "Domegge di Cadore", "Falcade", "Feltre", "Fonzaso", "Canale d'Agordo", "Gosaldo", "Lamon", "La Valle Agordina", "Limana", "Livinallongo del Col di Lana", "Lorenzago di Cadore", "Lozzo di Cadore", "Ospitale di Cadore", "Pedavena", "Perarolo di Cadore", "Pieve di Cadore", "Ponte nelle Alpi", "Rivamonte Agordino", "Rocca Pietore", "San Gregorio nelle Alpi", "San Nicolò di Comelico", "San Pietro di Cadore", "Santa Giustina", "San Tomaso Agordino", "Santo Stefano di Cadore", "San Vito di Cadore", "Sedico", "Selva di Cadore", "Seren del Grappa", "Sospirolo", "Soverzene", "Sovramonte", "Taibon Agordino", "Tambre", "Vallada Agordina", "Valle di Cadore", "Vigo di Cadore", "Vodo Cadore", "Voltago Agordino", "Zoppè di Cadore", "Quero Vas", "Longarone", "Alpago", "Val di Zoldo", "Borgo Valbelluna", "Airola", "Amorosi", "Apice", "Apollosa", "Arpaia", "Arpaise", "Baselice", "Benevento", "Bonea", "Bucciano", "Buonalbergo", "Calvi", "Campolattaro", "Campoli del Monte Taburno", "Casalduni", "Castelfranco in Miscano", "Castelpagano", "Castelpoto", "Castelvenere", "Castelvetere in Val Fortore", "Cautano", "Ceppaloni", "Cerreto Sannita", "Circello", "Colle Sannita", "Cusano Mutri", "Dugenta", "Durazzano", "Faicchio", "Foglianise", "Foiano di Val Fortore", "Forchia", "Fragneto l'Abate", "Fragneto Monforte", "Frasso Telesino", "Ginestra degli Schiavoni", "Guardia Sanframondi", "Limatola", "Melizzano", "Moiano", "Molinara", "Montefalcone di Val Fortore", "Montesarchio", "Morcone", "Paduli", "Pago Veiano", "Pannarano", "Paolisi", "Paupisi", "Pesco Sannita", "Pietraroja", "Pietrelcina", "Ponte", "Pontelandolfo", "Puglianello", "Reino", "San Bartolomeo in Galdo", "San Giorgio del Sannio", "San Giorgio La Molara", "San Leucio del Sannio", "San Lorenzello", "San Lorenzo Maggiore", "San Lupo", "San Marco dei Cavoti", "San Martino Sannita", "San Nazzaro", "San Nicola Manfredi", "San Salvatore Telesino", "Santa Croce del Sannio", "Sant'Agata de' Goti", "Sant'Angelo a Cupolo", "Sassinoro", "Solopaca", "Telese Terme", "Tocco Caudio", "Torrecuso", "Vitulano", "Sant'Arcangelo Trimonte", "Adrara San Martino", "Adrara San Rocco", "Albano Sant'Alessandro", "Albino", "Almè", "Almenno San Bartolomeo", "Almenno San Salvatore", "Alzano Lombardo", "Ambivere", "Antegnate", "Arcene", "Ardesio", "Arzago d'Adda", "Averara", "Aviatico", "Azzano San Paolo", "Azzone", "Bagnatica", "Barbata", "Bariano", "Barzana", "Bedulita", "Berbenno", "Bergamo", "Berzo San Fermo", "Bianzano", "Blello", "Bolgare", "Boltiere", "Bonate Sopra", "Bonate Sotto", "Borgo di Terzo", "Bossico", "Bottanuco", "Bracca", "Branzi", "Brembate", "Brembate di Sopra", "Brignano Gera d'Adda", "Brumano", "Brusaporto", "Calcinate", "Calcio", "Calusco d'Adda", "Calvenzano", "Camerata Cornello", "Canonica d'Adda", "Capizzone", "Capriate San Gervasio", "Caprino Bergamasco", "Caravaggio", "Carobbio degli Angeli", "Carona", "Carvico", "Casazza", "Casirate d'Adda", "Casnigo", "Cassiglio", "Castelli Calepio", "Castel Rozzone", "Castione della Presolana", "Castro ", "Cavernago", "Cazzano Sant'Andrea", "Cenate Sopra", "Cenate Sotto", "Cene", "Cerete", "Chignolo d'Isola", "Chiuduno", "Cisano Bergamasco", "Ciserano", "Cividate al Piano", "Clusone", "Colere", "Cologno al Serio", "Colzate", "Comun Nuovo", "Corna Imagna", "Cortenuova", "Costa di Mezzate", "Costa Valle Imagna", "Costa Volpino", "Covo", "Credaro", "Curno", "Cusio", "DaLMEne", "Dossena", "Endine Gaiano", "Entratico", "Fara Gera d'Adda", "Fara Olivana con Sola", "Filago", "Fino del Monte", "Fiorano al Serio", "Fontanella", "Fonteno", "Foppolo", "Foresto Sparso", "Fornovo San Giovanni", "Fuipiano Valle Imagna", "Gandellino", "Gandino", "Gandosso", "Gaverina Terme", "Gazzaniga", "Ghisalba", "Gorlago", "Gorle", "Gorno", "Grassobbio", "Gromo", "Grone", "Grumello del Monte", "Isola di Fondra", "Isso", "Lallio", "Leffe", "Lenna", "Levate", "Locatello", "Lovere", "Lurano", "Luzzana", "Madone", "Mapello", "Martinengo", "Mezzoldo", "Misano di Gera d'Adda", "Moio de' Calvi", "Monasterolo del Castello", "Montello", "Morengo", "Mornico al Serio", "Mozzanica", "Mozzo", "Nembro", "Olmo al Brembo", "Oltre il Colle", "Oltressenda Alta", "Oneta", "Onore", "Orio al Serio", "Ornica", "Osio Sopra", "Osio Sotto", "Pagazzano", "Paladina", "Palazzago", "Palosco", "Parre", "Parzanica", "Pedrengo", "Peia", "Pianico", "Piario", "Piazza Brembana", "Piazzatorre", "Piazzolo", "Pognano", "Ponte Nossa", "Ponteranica", "Ponte San Pietro", "Pontida", "Pontirolo Nuovo", "Pradalunga", "Predore", "Premolo", "Presezzo", "Pumenengo", "Ranica", "Ranzanico", "Riva di Solto", "Rogno", "Romano di Lombardia", "Roncobello", "Roncola", "Rota d'Imagna", "Rovetta", "San Giovanni Bianco", "San Paolo d'Argon", "San Pellegrino Terme", "Santa Brigida", "Sarnico", "Scanzorosciate", "Schilpario", "Sedrina", "Selvino", "Seriate", "Serina", "Solto Collina", "Songavazzo", "Sorisole", "Sotto il Monte Giovanni XXIII", "Sovere", "Spinone al Lago", "Spirano", "Stezzano", "Strozza", "Suisio", "Taleggio", "Tavernola Bergamasca", "Telgate", "Terno d'Isola", "Torre Boldone", "Torre de' Busi", "Torre de' Roveri", "Torre Pallavicina", "Trescore Balneario", "Treviglio", "Treviolo", "Ubiale Clanezzo", "Urgnano", "Valbondione", "Valbrembo", "Valgoglio", "Valleve", "Valnegra", "Valtorta", "Vedeseta", "Verdellino", "Verdello", "Vertova", "Viadanica", "Vigano San Martino", "Vigolo", "Villa d'Adda", "Villa d'Almè", "Villa di Serio", "Villa d'Ogna", "Villongo", "ViLMEnore di Scalve", "Zandobbio", "Zanica", "Zogno", "Costa Serina", "Algua", "Cornalba", "Medolago", "Solza", "Sant'Omobono Terme", "Val Brembilla", "Ailoche", "Andorno Micca", "Benna", "Biella", "Bioglio", "Borriana", "Brusnengo", "Callabiana", "Camandona", "Camburzano", "Candelo", "Caprile", "Casapinta", "Castelletto Cervo", "Cavaglià", "Cerrione", "Coggiola", "Cossato", "Crevacuore", "Curino", "Donato", "Dorzano", "Gaglianico", "Gifflenga", "Graglia", "Magnano", "Massazza", "Masserano", "Mezzana Mortigliengo", "Miagliano", "Mongrando", "Mottalciata", "Muzzano", "Netro", "Occhieppo Inferiore", "Occhieppo Superiore", "Pettinengo", "Piatto", "Piedicavallo", "Pollone", "Ponderano", "Portula", "Pralungo", "Pray", "Ronco Biellese", "Roppolo", "Rosazza", "Sagliano Micca", "Sala Biellese", "Salussola", "Sandigliano", "Sordevolo", "Sostegno", "Strona", "Tavigliano", "Ternengo", "Tollegno", "Torrazzo", "Valdengo", "Vallanzengo", "Valle San Nicolao", "Veglio", "Verrone", "Vigliano Biellese", "Villa del Bosco", "Villanova Biellese", "Viverone", "Zimone", "Zubiena", "Zumaglia", "Lessona", "Campiglia Cervo", "Quaregna Cerreto", "Valdilana", "Anzola dell'Emilia", "Argelato", "Baricella", "Bentivoglio", "Bologna", "Borgo Tossignano", "Budrio", "Calderara di Reno", "Camugnano", "Casalecchio di Reno", "Casalfiumanese", "Castel d'Aiano", "Castel del Rio", "Castel di Casio", "Castel Guelfo di Bologna", "Castello d'Argile", "Castel Maggiore", "Castel San Pietro Terme", "Castenaso", "Castiglione dei Pepoli", "Crevalcore", "Dozza", "Fontanelice", "Gaggio Montano", "Galliera", "Granarolo dell'Emilia", "Grizzana Morandi", "Imola", "Lizzano in Belvedere", "Loiano", "Malalbergo", "Marzabotto", "Medicina", "Minerbio", "Molinella", "Monghidoro", "Monterenzio", "Monte San Pietro", "Monzuno", "Mordano", "Ozzano dell'Emilia", "Pianoro", "Pieve di Cento", "Sala Bolognese", "San Benedetto Val di Sambro", "San Giorgio di Piano", "San Giovanni in Persiceto", "San Lazzaro di Savena", "San Pietro in Casale", "Sant'Agata Bolognese", "Sasso Marconi", "Vergato", "Zola Predosa", "Valsamoggia", "Alto Reno Terme", "Aldino", "Andriano", "Anterivo", "Appiano sulla strada del vino", "Avelengo", "Badia", "Barbiano", "Bolzano", "Braies", "Brennero", "Bressanone", "Bronzolo", "Brunico", "Caines", "Caldaro sulla strada del vino", "Campo di Trens", "Campo Tures", "Castelbello-Ciardes", "Castelrotto", "Cermes", "Chienes", "Chiusa", "Cornedo all'Isarco", "Cortaccia sulla strada del vino", "Cortina sulla strada del vino", "Corvara in Badia", "Curon Venosta", "Dobbiaco", "Egna", "Falzes", "Fiè allo Sciliar", "Fortezza", "Funes", "Gais", "Gargazzone", "Glorenza", "Laces", "Lagundo", "Laion", "Laives", "Lana", "Lasa", "Lauregno", "Luson", "Magrè sulla strada del vino", "Malles Venosta", "Marebbe", "Marlengo", "Martello", "Meltina", "Merano", "Monguelfo-Tesido", "Montagna", "Moso in Passiria", "Nalles", "Naturno", "Naz-Sciaves", "Nova Levante", "Nova Ponente", "Ora", "Ortisei", "Parcines", "Perca", "Plaus", "Ponte Gardena", "Postal", "Prato allo Stelvio", "Predoi", "Proves", "Racines", "Rasun-Anterselva", "Renon", "Rifiano", "Rio di Pusteria", "Rodengo", "Salorno sulla strada del vino", "San Candido", "San Genesio Atesino", "San Leonardo in Passiria", "San Lorenzo di Sebato", "San Martino in Badia", "San Martino in Passiria", "San Pancrazio", "Santa Cristina Valgardena", "Sarentino", "Scena", "Selva dei Molini", "Selva di Val Gardena", "Senales", "Sesto", "Silandro", "Sluderno", "Stelvio", "Terento", "Terlano", "Termeno sulla strada del vino", "Tesimo", "Tires", "Tirolo", "Trodena nel parco naturale", "Tubre", "Ultimo", "Vadena", "Valdaora", "Val di Vizze", "Valle Aurina", "Valle di Casies", "Vandoies", "Varna", "Verano", "Villabassa", "Villandro", "Vipiteno", "Velturno", "La Valle", "Senale-San Felice", "Acquafredda", "Adro", "Agnosine", "Alfianello", "Anfo", "Angolo Terme", "Artogne", "Azzano Mella", "Bagnolo Mella", "Bagolino", "Barbariga", "Barghe", "Bassano Bresciano", "Bedizzole", "Berlingo", "Berzo Demo", "Berzo Inferiore", "Bienno", "Bione", "Borgo San Giacomo", "Borgosatollo", "Borno", "Botticino", "Bovegno", "Bovezzo", "Brandico", "Braone", "Breno", "Brescia", "Brione", "Caino", "Calcinato", "Calvagese della Riviera", "Calvisano", "Capo di Ponte", "Capovalle", "Capriano del Colle", "Capriolo", "Carpenedolo", "Castegnato", "Castelcovati", "Castel Mella", "Castenedolo", "Casto", "Castrezzato", "Cazzago San Martino", "Cedegolo", "Cellatica", "Cerveno", "Ceto", "Cevo", "Chiari", "Cigole", "Cimbergo", "Cividate Camuno", "Coccaglio", "Collebeato", "Collio", "Cologne", "Comezzano-Cizzago", "Concesio", "Corte Franca", "Corteno Golgi", "Corzano", "Darfo Boario Terme", "Dello", "Desenzano del Garda", "Edolo", "Erbusco", "Esine", "Fiesse", "Flero", "Gambara", "Gardone Riviera", "Gardone Val Trompia", "Gargnano", "Gavardo", "Ghedi", "Gianico", "Gottolengo", "Gussago", "Idro", "Incudine", "Irma", "Iseo", "Isorella", "Lavenone", "Leno", "Limone sul Garda", "Lodrino", "Lograto", "Lonato del Garda", "Longhena", "Losine", "Lozio", "Lumezzane", "Maclodio", "Magasa", "Mairano", "Malegno", "Malonno", "Manerba del Garda", "Manerbio", "Marcheno", "Marmentino", "Marone", "Mazzano", "Milzano", "Moniga del Garda", "Monno", "Monte Isola", "Monticelli Brusati", "Montichiari", "Montirone", "Mura", "Muscoline", "Nave", "Niardo", "Nuvolento", "Nuvolera", "Odolo", "Offlaga", "Ome", "Ono San Pietro", "Orzinuovi", "Orzivecchi", "Ospitaletto", "Ossimo", "Padenghe sul Garda", "Paderno Franciacorta", "Paisco Loveno", "Paitone", "Palazzolo sull'Oglio", "Paratico", "Paspardo", "Passirano", "Pavone del Mella", "San Paolo", "Pertica Alta", "Pertica Bassa", "Pezzaze", "Pian Camuno", "Pisogne", "Polaveno", "Polpenazze del Garda", "Pompiano", "Poncarale", "Ponte di Legno", "Pontevico", "Pontoglio", "Pozzolengo", "Pralboino", "Preseglie", "Prevalle", "Provaglio d'Iseo", "Provaglio Val Sabbia", "Puegnago del Garda", "Quinzano d'Oglio", "Remedello", "Rezzato", "Roccafranca", "Rodengo Saiano", "Roè Volciano", "Roncadelle", "Rovato", "Rudiano", "Sabbio Chiese", "Sale Marasino", "Salò", "San Felice del Benaco", "San Gervasio Bresciano", "San Zeno Naviglio", "Sarezzo", "Saviore dell'Adamello", "Sellero", "Seniga", "Serle", "Sirmione", "Soiano del Lago", "Sonico", "Sulzano", "Tavernole sul Mella", "Temù", "Tignale", "Torbole Casaglia", "Toscolano-Maderno", "Travagliato", "Tremosine sul Garda", "Trenzano", "Treviso Bresciano", "Urago d'Oglio", "Vallio Terme", "Valvestino", "Verolanuova", "Verolavecchia", "Vestone", "Vezza d'Oglio", "Villa Carcina", "Villachiara", "Villanuova sul Clisi", "Vione", "Visano", "Vobarno", "Zone", "Piancogno", "Brindisi", "Carovigno", "Ceglie Messapica", "Cellino San Marco", "Cisternino", "Erchie", "Fasano", "Francavilla Fontana", "Latiano", "Mesagne", "Oria", "Ostuni", "San Donaci", "San Michele Salentino", "San Pancrazio Salentino", "San Pietro Vernotico", "San Vito dei Normanni", "Torchiarolo", "Torre Santa Susanna", "Villa Castelli", "Assemini", "Cagliari", "Capoterra", "Decimomannu", "Maracalagonis", "Pula", "Quartu Sant'Elena", "Sarroch", "Selargius", "Sestu", "Settimo San Pietro", "Sinnai", "Uta", "Villa San Pietro", "Quartucciu", "Elmas", "Monserrato", "Acquaviva Platani", "Bompensiere", "Butera", "Caltanissetta", "Campofranco", "Delia", "Gela", "Marianopoli", "Mazzarino", "Milena", "Montedoro", "Mussomeli", "Niscemi", "Resuttano", "Riesi", "San Cataldo", "Santa Caterina Villarmosa", "Serradifalco", "Sommatino", "Sutera", "Vallelunga Pratameno", "Villalba", "Acquaviva Collecroce", "Baranello", "Bojano", "Bonefro", "Busso", "Campobasso", "Campochiaro", "Campodipietra", "Campolieto", "Campomarino", "Casacalenda", "Casalciprano", "Castelbottaccio", "Castellino del Biferno", "Castelmauro", "Castropignano", "Cercemaggiore", "Cercepiccola", "Civitacampomarano", "Colle d'Anchise", "Colletorto", "Duronia", "Ferrazzano", "Fossalto", "Gambatesa", "Gildone", "Guardialfiera", "Guardiaregia", "Guglionesi", "Jelsi", "Larino", "Limosano", "Lucito", "Lupara", "Macchia Valfortore", "Mafalda", "Matrice", "Mirabello Sannitico", "Molise", "Monacilioni", "Montagano", "Montecilfone", "Montefalcone nel Sannio", "Montelongo", "Montemitro", "Montenero di Bisaccia", "Montorio nei Frentani", "Morrone del Sannio", "Oratino", "Palata", "Petacciato", "Petrella Tifernina", "Pietracatella", "Pietracupa", "Portocannone", "Provvidenti", "Riccia", "Ripabottoni", "Ripalimosani", "Roccavivara", "Rotello", "Salcito", "San Biase", "San Felice del Molise", "San Giacomo degli Schiavoni", "San Giovanni in Galdo", "San Giuliano del Sannio", "San Giuliano di Puglia", "San Martino in Pensilis", "San Massimo", "San Polo Matese", "Santa Croce di Magliano", "Sant'Angelo Limosano", "Sant'Elia a Pianisi", "Sepino", "Spinete", "Tavenna", "Termoli", "Torella del Sannio", "Toro", "Trivento", "Tufara", "Ururi", "Vinchiaturo", "Ailano", "Alife", "Alvignano", "Arienzo", "Aversa", "Baia e Latina", "Bellona", "Caianello", "Caiazzo", "Calvi Risorta", "Camigliano", "Cancello ed Arnone", "Capodrise", "Capriati a Volturno", "Capua", "Carinaro", "Carinola", "Casagiove", "Casal di Principe", "Casaluce", "Casapulla", "Caserta", "Castel Campagnano", "Castel di Sasso", "Castello del Matese", "Castel Morrone", "Castel Volturno", "Cervino", "Cesa", "Ciorlano", "Conca della Campania", "Curti", "Dragoni", "Fontegreca", "Formicola", "Francolise", "Frignano", "Gallo Matese", "Galluccio", "Giano Vetusto", "Gioia Sannitica", "Grazzanise", "Gricignano di Aversa", "Letino", "Liberi", "Lusciano", "Macerata Campania", "Maddaloni", "Marcianise", "Marzano Appio", "Mignano Monte Lungo", "Mondragone", "Orta di Atella", "Parete", "Pastorano", "Piana di Monte Verna", "Piedimonte Matese", "Pietramelara", "Pietravairano", "Pignataro Maggiore", "Pontelatone", "Portico di Caserta", "Prata Sannita", "Pratella", "Presenzano", "Raviscanina", "Recale", "Riardo", "Rocca d'Evandro", "Roccamonfina", "Roccaromana", "Rocchetta e Croce", "Ruviano", "San Cipriano d'Aversa", "San Felice a Cancello", "San Gregorio Matese", "San Marcellino", "San Nicola la Strada", "San Pietro Infine", "San Potito Sannitico", "San Prisco", "Santa Maria a Vico", "Santa Maria Capua Vetere", "Santa Maria la Fossa", "San Tammaro", "Sant'Angelo d'Alife", "Sant'Arpino", "Sessa Aurunca", "Sparanise", "Succivo", "Teano", "Teverola", "Tora e Piccilli", "Trentola Ducenta", "Vairano Patenora", "Valle Agricola", "Valle di Maddaloni", "Villa di Briano", "Villa Literno", "Vitulazio", "Falciano del Massico", "Cellole", "Casapesenna", "San Marco Evangelista", "Aci Bonaccorsi", "Aci Castello", "Aci Catena", "Acireale", "Aci Sant'Antonio", "Adrano", "Belpasso", "Biancavilla", "Bronte", "Calatabiano", "Caltagirone", "Camporotondo Etneo", "Castel di Iudica", "Castiglione di Sicilia", "Catania", "Fiumefreddo di Sicilia", "Giarre", "Grammichele", "Gravina di Catania", "Licodia Eubea", "Linguaglossa", "Maletto", "Mascali", "Mascalucia", "Militello in Val di Catania", "Milo", "Mineo", "Mirabella Imbaccari", "Misterbianco", "Motta Sant'Anastasia", "Nicolosi", "Palagonia", "Paternò", "Pedara", "Piedimonte Etneo", "Raddusa", "Ramacca", "Randazzo", "Riposto", "San Cono", "San Giovanni la Punta", "San Gregorio di Catania", "San Michele di Ganzaria", "San Pietro Clarenza", "Sant'Agata li Battiati", "Sant'Alfio", "Santa Maria di Licodia", "Santa Venerina", "Scordia", "Trecastagni", "Tremestieri Etneo", "Valverde", "Viagrande", "Vizzini", "Zafferana Etnea", "Mazzarrone", "Maniace", "Ragalna", "Albi", "Amaroni", "Amato", "Andali", "Argusto", "Badolato", "Belcastro", "Borgia", "Botricello", "Caraffa di Catanzaro", "Cardinale", "Carlopoli", "Catanzaro", "Cenadi", "Centrache", "Cerva", "Chiaravalle Centrale", "Cicala", "Conflenti", "Cortale", "Cropani", "Curinga", "Davoli", "Decollatura", "Falerna", "Feroleto Antico", "Fossato Serralta", "Gagliato", "Gasperina", "Gimigliano", "Girifalco", "Gizzeria", "Guardavalle", "Isca sullo Ionio", "Jacurso", "Magisano", "Maida", "Marcedusa", "Marcellinara", "Martirano", "Martirano Lombardo", "Miglierina", "Montauro", "Montepaone", "Motta Santa Lucia", "Nocera Terinese", "Olivadi", "Palermiti", "Pentone", "Petrizzi", "Petronà", "Pianopoli", "Platania", "San Floro", "San Mango d'Aquino", "San Pietro a Maida", "San Pietro Apostolo", "San Sostene", "Santa Caterina dello Ionio", "Sant'Andrea Apostolo dello Ionio", "San Vito sullo Ionio", "Satriano", "Sellia", "Sellia Marina", "Serrastretta", "Sersale", "Settingiano", "Simeri Crichi", "Sorbo San Basile", "Soverato", "Soveria Mannelli", "Soveria Simeri", "Squillace", "Stalettì", "Taverna", "Tiriolo", "Torre di Ruggiero", "Vallefiorita", "Zagarise", "Lamezia Terme", "Altino", "Archi", "Ari", "Arielli", "Atessa", "Bomba", "Borrello", "Bucchianico", "Montebello sul Sangro", "Canosa Sannita", "Carpineto Sinello", "Carunchio", "Casacanditella", "Casalanguida", "Casalbordino", "Casalincontrada", "Casoli", "Castel Frentano", "Castelguidone", "Castiglione Messer Marino", "Celenza sul Trigno", "Chieti", "Civitaluparella", "Civitella Messer Raimondo", "Colledimacine", "Colledimezzo", "Crecchio", "Cupello", "Dogliola", "Fara Filiorum Petri", "Fara San Martino", "Filetto", "Fossacesia", "Fraine", "Francavilla al Mare", "Fresagrandinaria", "Frisa", "Furci", "Gamberale", "Gessopalena", "Gissi", "Giuliano Teatino", "Guardiagrele", "GuiLME", "Lama dei Peligni", "Lanciano", "Lentella", "Lettopalena", "Liscia", "Miglianico", "Montazzoli", "Monteferrante", "Montelapiano", "Montenerodomo", "Monteodorisio", "Mozzagrogna", "Orsogna", "Ortona", "Paglieta", "Palena", "Palmoli", "Palombaro", "Pennadomo", "Pennapiedimonte", "Perano", "Pizzoferrato", "Poggiofiorito", "Pollutri", "Pretoro", "Quadri", "Rapino", "Ripa Teatina", "Roccamontepiano", "Rocca San Giovanni", "Roccascalegna", "Roccaspinalveti", "Roio del Sangro", "Rosello", "San Buono", "San Giovanni Lipioni", "San Giovanni Teatino", "San Martino sulla Marrucina", "San Salvo", "Santa Maria Imbaro", "Sant'Eusanio del Sangro", "San Vito Chietino", "Scerni", "Schiavi di Abruzzo", "Taranta Peligna", "Tollo", "Torino di Sangro", "Tornareccio", "Torrebruna", "Torrevecchia Teatina", "Torricella Peligna", "Treglio", "Tufillo", "Vacri", "Vasto", "Villalfonsina", "Villamagna", "Villa Santa Maria", "Pietraferrazzana", "Fallo", "Albavilla", "Albese con Cassano", "Albiolo", "Alserio", "Alzate Brianza", "Anzano del Parco", "Appiano Gentile", "Argegno", "Arosio", "Asso", "Barni", "Bene Lario", "Beregazzo con Figliaro", "Binago", "Bizzarone", "Blessagno", "Blevio", "Bregnano", "Brenna", "Brienno", "Brunate", "Bulgarograsso", "Cabiate", "Cadorago", "Caglio", "Campione d'Italia", "Cantù", "Canzo", "Capiago Intimiano", "Carate Urio", "Carbonate", "Carimate", "Carlazzo", "Carugo", "Caslino d'Erba", "Casnate con Bernate", "Cassina Rizzardi", "Castelmarte", "Castelnuovo Bozzente", "Cavargna", "Cerano d'Intelvi", "Cermenate", "Cernobbio", "Cirimido", "Claino con Osteno", "Colonno", "Como", "Corrido", "Cremia", "Cucciago", "Cusino", "Dizzasco", "Domaso", "Dongo", "Dosso del Liro", "Erba", "Eupilio", "Faggeto Lario", "Faloppio", "Fenegrò", "Figino Serenza", "Fino Mornasco", "Garzeno", "Gera Lario", "Grandate", "Grandola ed Uniti", "Griante", "Guanzate", "Inverigo", "Laglio", "Laino", "Lambrugo", "Lasnigo", "Lezzeno", "Limido Comasco", "Lipomo", "Livo ", "Locate Varesino", "Lomazzo", "Longone al Segrino", "Luisago", "Lurago d'Erba", "Lurago Marinone", "Lurate Caccivio", "Magreglio", "Mariano Comense", "Maslianico", "Menaggio", "Merone", "Moltrasio", "Monguzzo", "Montano Lucino", "Montemezzo", "Montorfano", "Mozzate", "Musso", "Nesso", "Novedrate", "Olgiate Comasco", "Oltrona di San Mamette", "Orsenigo", "Peglio ", "Pianello del Lario", "Pigra", "Plesio", "Pognana Lario", "Ponna", "Ponte Lambro", "Porlezza", "Proserpio", "Pusiano", "Rezzago", "Rodero", "Ronago", "Rovellasca", "Rovello Porro", "Sala Comacina", "San Bartolomeo Val Cavargna", "San Fermo della Battaglia", "San Nazzaro Val Cavargna", "Schignano", "Senna Comasco", "Sorico", "Sormano", "Stazzona", "Tavernerio", "Torno", "Trezzone", "Turate", "Uggiate-Trevano", "Valbrona", "Valmorea", "Val Rezzo", "Valsolda", "Veleso", "Veniano", "Vercana", "Vertemate con Minoprio", "Villa Guardia", "Zelbio", "San Siro", "Gravedona ed Uniti", "Bellagio", "Colverde", "Tremezzina", "Alta Valle Intelvi", "Centro Valle Intelvi", "Solbiate con Cagno", "Acquaformosa", "Acquappesa", "Acri", "Aiello Calabro", "Aieta", "Albidona", "Alessandria del Carretto", "Altilia", "Altomonte", "Amantea", "Amendolara", "Aprigliano", "Belmonte Calabro", "Belsito", "Belvedere Marittimo", "Bianchi", "Bisignano", "Bocchigliero", "Bonifati", "Buonvicino", "Calopezzati", "Caloveto", "Campana", "Canna", "Cariati", "Carolei", "Carpanzano", "Cassano all'Ionio", "Castiglione Cosentino", "Castrolibero", "Castroregio", "Castrovillari", "Celico", "Cellara", "Cerchiara di Calabria", "Cerisano", "Cervicati", "Cerzeto", "Cetraro", "Civita", "Cleto", "Colosimi", "Cosenza", "Cropalati", "Crosia", "Diamante", "Dipignano", "Domanico", "Fagnano Castello", "Falconara Albanese", "Figline Vegliaturo", "Firmo", "Fiumefreddo Bruzio", "Francavilla Marittima", "Frascineto", "Fuscaldo", "Grimaldi", "Grisolia", "Guardia Piemontese", "Lago", "Laino Borgo", "Laino Castello", "Lappano", "Lattarico", "Longobardi", "Longobucco", "Lungro", "Luzzi", "Maierà", "Malito", "Malvito", "Mandatoriccio", "Mangone", "Marano Marchesato", "Marano Principato", "Marzi", "Mendicino", "Mongrassano", "Montalto Uffugo", "Montegiordano", "Morano Calabro", "Mormanno", "Mottafollone", "Nocara", "Oriolo", "Orsomarso", "Paludi", "Panettieri", "Paola", "Papasidero", "Parenti", "Paterno Calabro", "Pedivigliano", "Piane Crati", "Pietrafitta", "Pietrapaola", "Plataci", "Praia a Mare", "Rende", "Rocca Imperiale", "Roggiano Gravina", "Rogliano", "Rose", "Roseto Capo Spulico", "Rota Greca", "Rovito", "San Basile", "San Benedetto Ullano", "San Cosmo Albanese", "San Demetrio Corone", "San Donato di Ninea", "San Fili", "Sangineto", "San Giorgio Albanese", "San Giovanni in Fiore", "San Lorenzo Bellizzi", "San Lorenzo del Vallo", "San Lucido", "San Marco Argentano", "San Martino di Finita", "San Nicola Arcella", "San Pietro in Amantea", "San Pietro in Guarano", "San Sosti", "Santa Caterina Albanese", "Santa Domenica Talao", "Sant'Agata di Esaro", "Santa Maria del Cedro", "Santa Sofia d'Epiro", "Santo Stefano di Rogliano", "San Vincenzo La Costa", "Saracena", "Scala Coeli", "Scalea", "Scigliano", "Serra d'Aiello", "Spezzano Albanese", "Spezzano della Sila", "Tarsia", "Terranova da Sibari", "Terravecchia", "Torano Castello", "Tortora", "Trebisacce", "Vaccarizzo Albanese", "Verbicaro", "Villapiana", "Zumpano", "Casali del Manco", "Corigliano-Rossano", "Acquanegra Cremonese", "Agnadello", "Annicco", "Azzanello", "Bagnolo Cremasco", "Bonemerse", "Bordolano", "Calvatone", "Camisano", "Campagnola Cremasca", "Capergnanica", "Cappella Cantone", "Cappella de' Picenardi", "Capralba", "Casalbuttano ed Uniti", "Casale Cremasco-Vidolasco", "Casaletto Ceredano", "Casaletto di Sopra", "Casaletto Vaprio", "Casalmaggiore", "Casalmorano", "Casteldidone", "Castel Gabbiano", "Castelleone", "Castelverde", "Castelvisconti", "Cella Dati", "Chieve", "Cicognolo", "Cingia de' Botti", "Corte de' Cortesi con Cignone", "Corte de' Frati", "Credera Rubbiano", "Crema", "Cremona", "Cremosano", "Crotta d'Adda", "Cumignano sul Naviglio", "Derovere", "Dovera", "Fiesco", "Formigara", "Gabbioneta-Binanuova", "Gadesco-Pieve Delmona", "Genivolta", "Gerre de' Caprioli", "Gombito", "Grontardo", "Grumello Cremonese ed Uniti", "Gussola", "Isola Dovarese", "Izano", "Madignano", "Malagnino", "Martignana di Po", "Monte Cremasco", "Montodine", "Moscazzano", "Motta Baluffi", "Offanengo", "Olmeneta", "Ostiano", "Paderno Ponchielli", "Palazzo Pignano", "Pandino", "Persico Dosimo", "Pescarolo ed Uniti", "Pessina Cremonese", "Pianengo", "Pieranica", "Pieve d'OLME", "Pieve San Giacomo", "Pizzighettone", "Pozzaglio ed Uniti", "Quintano", "Ricengo", "Ripalta Arpina", "Ripalta Cremasca", "Ripalta Guerina", "Rivarolo del Re ed Uniti", "Rivolta d'Adda", "Robecco d'Oglio", "Romanengo", "Salvirola", "San Bassano", "San Daniele Po", "San Giovanni in Croce", "San Martino del Lago", "Scandolara Ravara", "Scandolara Ripa d'Oglio", "Sergnano", "Sesto ed Uniti", "Solarolo Rainerio", "Soncino", "Soresina", "Sospiro", "Spinadesco", "Spineda", "Spino d'Adda", "Stagno Lombardo", "Ticengo", "Torlino Vimercati", "Tornata", "Torre de' Picenardi", "Torricella del Pizzo", "Trescore Cremasco", "Trigolo", "Vaiano Cremasco", "Vailate", "Vescovato", "Volongo", "Voltido", "Piadena Drizzona", "Belvedere di Spinello", "Caccuri", "Carfizzi", "Casabona", "Castelsilano", "Cerenzia", "Cirò", "Cirò Marina", "Cotronei", "Crotone", "Crucoli", "Cutro", "Isola di Capo Rizzuto", "Melissa", "Mesoraca", "Pallagorio", "Petilia Policastro", "Roccabernarda", "Rocca di Neto", "San Mauro Marchesato", "San Nicola dell'Alto", "Santa Severina", "Savelli", "Scandale", "Strongoli", "Umbriatico", "Verzino", "Acceglio", "Aisone", "Alba", "Albaretto della Torre", "Alto", "Argentera", "Arguello", "Bagnasco", "Bagnolo Piemonte", "Baldissero d'Alba", "Barbaresco", "Barge", "Barolo", "Bastia Mondovì", "Battifollo", "Beinette", "Bellino", "Belvedere Langhe", "Bene Vagienna", "Benevello", "Bergolo", "Bernezzo", "Bonvicino", "Borgomale", "Borgo San Dalmazzo", "Bosia", "Bossolasco", "Boves", "Bra", "Briaglia", "Briga Alta", "Brondello", "Brossasco", "Busca", "Camerana", "Canale", "Canosio", "Caprauna", "Caraglio", "Caramagna Piemonte", "Cardè", "Carrù", "Cartignano", "Casalgrasso", "Castagnito", "Casteldelfino", "Castelletto Stura", "Castelletto Uzzone", "Castellinaldo d'Alba", "Castellino Tanaro", "Castelmagno", "Castelnuovo di Ceva", "Castiglione Falletto", "Castiglione Tinella", "Castino", "Cavallerleone", "Cavallermaggiore", "Celle di Macra", "Centallo", "Ceresole Alba", "Cerretto Langhe", "Cervasca", "Cervere", "Ceva", "Cherasco", "Chiusa di Pesio", "Cigliè", "Cissone", "Clavesana", "Corneliano d'Alba", "Cortemilia", "Cossano Belbo", "Costigliole Saluzzo", "Cravanzana", "Crissolo", "Cuneo", "Demonte", "Diano d'Alba", "Dogliani", "Dronero", "Elva", "Entracque", "Envie", "Farigliano", "Faule", "Feisoglio", "Fossano", "Frabosa Soprana", "Frabosa Sottana", "Frassino", "Gaiola", "Gambasca", "Garessio", "Genola", "Gorzegno", "Gottasecca", "Govone", "Grinzane Cavour", "Guarene", "Igliano", "Isasca", "Lagnasco", "La Morra", "Lequio Berria", "Lequio Tanaro", "Lesegno", "Levice", "Limone Piemonte", "Lisio", "Macra", "Magliano Alfieri", "Magliano Alpi", "Mango", "Manta", "Marene", "Margarita", "Marmora", "Marsaglia", "Martiniana Po", "Melle", "Moiola", "Mombarcaro", "Mombasiglio", "Monastero di Vasco", "Monasterolo Casotto", "Monasterolo di Savigliano", "Monchiero", "Mondovì", "Monesiglio", "Monforte d'Alba", "Montà", "Montaldo di Mondovì", "Montaldo Roero", "Montanera", "Montelupo Albese", "Montemale di Cuneo", "Monterosso Grana", "Monteu Roero", "Montezemolo", "Monticello d'Alba", "Moretta", "Morozzo", "Murazzano", "Murello", "Narzole", "Neive", "Neviglie", "Niella Belbo", "Niella Tanaro", "Novello", "Nucetto", "Oncino", "Ormea", "Ostana", "Paesana", "Pagno", "Pamparato", "Paroldo", "Perletto", "Perlo", "Peveragno", "Pezzolo Valle Uzzone", "Pianfei", "Piasco", "Pietraporzio", "Piobesi d'Alba", "Piozzo", "Pocapaglia", "Polonghera", "Pontechianale", "Pradleves", "Prazzo", "Priero", "Priocca", "Priola", "Prunetto", "Racconigi", "Revello", "Rifreddo", "Rittana", "Roaschia", "Roascio", "Robilante", "Roburent", "Roccabruna", "Rocca Cigliè", "Rocca de' Baldi", "Roccaforte Mondovì", "Roccasparvera", "Roccavione", "Rocchetta Belbo", "Roddi", "Roddino", "Rodello", "Rossana", "Ruffia", "Sale delle Langhe", "Sale San Giovanni", "Saliceto", "Salmour", "Saluzzo", "Sambuco", "Sampeyre", "San Benedetto Belbo", "San Damiano Macra", "Sanfrè", "Sanfront", "San Michele Mondovì", "Sant'Albano Stura", "Santa Vittoria d'Alba", "Santo Stefano Belbo", "Santo Stefano Roero", "Savigliano", "Scagnello", "Scarnafigi", "Serralunga d'Alba", "Serravalle Langhe", "Sinio", "Somano", "Sommariva del Bosco", "Sommariva Perno", "Stroppo", "Tarantasca", "Torre Bormida", "Torre Mondovì", "Torre San Giorgio", "Torresina", "Treiso", "Trezzo Tinella", "Trinità", "Valdieri", "Valgrana", "Valloriate", "Venasca", "Verduno", "Vernante", "Verzuolo", "Vezza d'Alba", "Vicoforte", "Vignolo", "Villafalletto", "Villanova Mondovì", "Villanova Solaro", "Villar San Costanzo", "Vinadio", "Viola", "Vottignasco", "Agira", "Aidone", "Assoro", "Barrafranca", "Calascibetta", "Catenanuova", "Centuripe", "Cerami", "Enna", "Gagliano Castelferrato", "Leonforte", "Nicosia", "Nissoria", "Piazza Armerina", "Pietraperzia", "Regalbuto", "Sperlinga", "Troina", "Valguarnera Caropepe", "Villarosa", "Altidona", "Amandola", "Belmonte Piceno", "Campofilone", "Falerone", "Fermo", "Francavilla d'Ete", "Grottazzolina", "Lapedona", "Magliano di Tenna", "Massa Fermana", "Monsampietro Morico", "Montappone", "Montefalcone Appennino", "Montefortino", "Monte Giberto", "Montegiorgio", "Montegranaro", "Monteleone di Fermo", "Montelparo", "Monte Rinaldo", "Monterubbiano", "Monte San Pietrangeli", "Monte Urano", "Monte Vidon Combatte", "Monte Vidon Corrado", "Montottone", "Moresco", "Ortezzano", "Pedaso", "Petritoli", "Ponzano di Fermo", "Porto San Giorgio", "Porto Sant'Elpidio", "Rapagnano", "Santa Vittoria in Matenano", "Sant'Elpidio a Mare", "Servigliano", "Smerillo", "Torre San Patrizio", "Argenta", "Bondeno", "Cento", "Codigoro", "Comacchio", "Copparo", "Ferrara", "Jolanda di Savoia", "Lagosanto", "Masi Torello", "Mesola", "Ostellato", "Poggio Renatico", "Portomaggiore", "Vigarano Mainarda", "Voghiera", "Goro", "Fiscaglia", "Terre del Reno", "Riva del Po", "Tresignana", "Bagno a Ripoli", "Barberino di Mugello", "Borgo San Lorenzo", "Calenzano", "Campi Bisenzio", "Capraia e Limite", "Castelfiorentino", "Cerreto Guidi", "Certaldo", "Dicomano", "Empoli", "Fiesole", "Firenze", "Firenzuola", "Fucecchio", "Gambassi Terme", "Greve in Chianti", "Impruneta", "Lastra a Signa", "Londa", "Marradi", "Montaione", "Montelupo Fiorentino", "Montespertoli", "Palazzuolo sul Senio", "Pelago", "Pontassieve", "Reggello", "Rignano sull'Arno", "Rufina", "San Casciano in Val di Pesa", "San Godenzo", "Scandicci", "Sesto Fiorentino", "Signa", "Vaglia", "Vicchio", "Vinci", "Figline e Incisa Valdarno", "Scarperia e San Piero", "Barberino Tavarnelle", "Accadia", "Alberona", "Anzano di Puglia", "Apricena", "Ascoli Satriano", "Biccari", "Bovino", "Cagnano Varano", "Candela", "Carapelle", "Carlantino", "Carpino", "Casalnuovo Monterotaro", "Casalvecchio di Puglia", "Castelluccio dei Sauri", "Castelluccio Valmaggiore", "Castelnuovo della Daunia", "Celenza Valfortore", "Celle di San Vito", "Cerignola", "Chieuti", "Deliceto", "Faeto", "Foggia", "Ischitella", "Isole Tremiti", "Lesina", "Lucera", "Manfredonia", "Mattinata", "Monteleone di Puglia", "Monte Sant'Angelo", "Motta Montecorvino", "Orsara di Puglia", "Orta Nova", "Panni", "Peschici", "Pietramontecorvino", "Poggio Imperiale", "Rignano Garganico", "Rocchetta Sant'Antonio", "Rodi Garganico", "Roseto Valfortore", "San Giovanni Rotondo", "San Marco in Lamis", "San Marco la Catola", "San Nicandro Garganico", "San Paolo di Civitate", "San Severo", "Sant'Agata di Puglia", "Serracapriola", "Stornara", "Stornarella", "Torremaggiore", "Troia", "Vico del Gargano", "Vieste", "Volturara Appula", "Volturino", "Ordona", "Zapponeta", "Bagno di Romagna", "Bertinoro", "Borghi", "Castrocaro Terme e Terra del Sole", "Cesena", "Cesenatico", "Civitella di Romagna", "Dovadola", "Forlì", "Forlimpopoli", "Galeata", "Gambettola", "Gatteo", "Longiano", "Meldola", "Mercato Saraceno", "Modigliana", "Montiano", "Portico e San Benedetto", "Predappio", "Premilcuore", "Rocca San Casciano", "Roncofreddo", "San Mauro Pascoli", "Santa Sofia", "Sarsina", "Savignano sul Rubicone", "Sogliano al Rubicone", "Tredozio", "Verghereto", "Acquafondata", "Acuto", "Alatri", "Alvito", "Amaseno", "Anagni", "Aquino", "Arce", "Arnara", "Arpino", "Atina", "Ausonia", "Belmonte Castello", "Boville Ernica", "Broccostella", "Campoli Appennino", "Casalattico", "Casalvieri", "Cassino", "Castelliri", "Castelnuovo Parano", "Castrocielo", "Castro dei Volsci", "Ceccano", "Ceprano", "Cervaro", "Colfelice", "Collepardo", "Colle San Magno", "Coreno Ausonio", "Esperia", "Falvaterra", "Ferentino", "Filettino", "Fiuggi", "Fontana Liri", "Fontechiari", "Frosinone", "Fumone", "Gallinaro", "Giuliano di Roma", "Guarcino", "Isola del Liri", "Monte San Giovanni Campano", "Morolo", "Paliano", "Pastena", "Patrica", "Pescosolido", "Picinisco", "Pico", "Piedimonte San Germano", "Piglio", "Pignataro Interamna", "Pofi", "Pontecorvo", "Posta Fibreno", "Ripi", "Rocca d'Arce", "Roccasecca", "San Biagio Saracinisco", "San Donato Val di Comino", "San Giorgio a Liri", "San Giovanni Incarico", "Sant'Ambrogio sul Garigliano", "Sant'Andrea del Garigliano", "Sant'Apollinare", "Sant'Elia Fiumerapido", "Santopadre", "San Vittore del Lazio", "Serrone", "Settefrati", "Sgurgola", "Sora", "Strangolagalli", "Supino", "Terelle", "Torre Cajetani", "Torrice", "Trevi nel Lazio", "Trivigliano", "Vallecorsa", "Vallemaio", "Vallerotonda", "Veroli", "Vicalvi", "Vico nel Lazio", "Villa Latina", "Villa Santa Lucia", "Villa Santo Stefano", "Viticuso", "Arenzano", "Avegno", "Bargagli", "Bogliasco", "Borzonasca", "Busalla", "Camogli", "Campo Ligure", "Campomorone", "Carasco", "Casarza Ligure", "Casella", "Castiglione Chiavarese", "Ceranesi", "Chiavari", "Cicagna", "Cogoleto", "Cogorno", "Coreglia Ligure", "Crocefieschi", "Davagna", "Fascia", "Favale di Malvaro", "Fontanigorda", "Genova", "Gorreto", "Isola del Cantone", "Lavagna", "Leivi", "Lorsica", "Lumarzo", "Masone", "Mele", "Mezzanego", "Mignanego", "Moconesi", "Moneglia", "Montebruno", "Montoggio", "Ne", "Neirone", "Orero", "Pieve Ligure", "Portofino", "Propata", "Rapallo", "Recco", "Rezzoaglio", "Ronco Scrivia", "Rondanina", "Rossiglione", "Rovegno", "San Colombano Certenoli", "Santa Margherita Ligure", "Sant'Olcese", "Santo Stefano d'Aveto", "Savignone", "Serra Riccò", "Sestri Levante", "Sori", "Tiglieto", "Torriglia", "Tribogna", "Uscio", "Valbrevenna", "Vobbia", "Zoagli", "Capriva del Friuli", "Cormons", "Doberdò del Lago", "Dolegna del Collio", "Farra d'Isonzo", "Fogliano Redipuglia", "Gorizia", "Gradisca d'Isonzo", "Grado", "Mariano del Friuli", "Medea", "Monfalcone", "Moraro", "Mossa", "Romans d'Isonzo", "Ronchi dei Legionari", "Sagrado", "San Canzian d'Isonzo", "San Floriano del Collio", "San Lorenzo Isontino", "San Pier d'Isonzo", "Savogna d'Isonzo", "Staranzano", "Turriaco", "Villesse", "Arcidosso", "Campagnatico", "Capalbio", "Castel del Piano", "Castell'Azzara", "Castiglione della Pescaia", "Cinigiano", "Civitella Paganico", "Follonica", "Gavorrano", "Grosseto", "Isola del Giglio", "Magliano in Toscana", "Manciano", "Massa Marittima", "Monte Argentario", "Montieri", "Orbetello", "Pitigliano", "Roccalbegna", "Roccastrada", "Santa Fiora", "Scansano", "Scarlino", "Seggiano", "Sorano", "Monterotondo Marittimo", "Semproniano", "Airole", "Apricale", "Aquila d'Arroscia", "Armo", "Aurigo", "Badalucco", "Bajardo", "Bordighera", "Borghetto d'Arroscia", "Borgomaro", "Camporosso", "Caravonica", "Castellaro", "Castel Vittorio", "Ceriana", "Cervo", "Cesio", "Chiusanico", "Chiusavecchia", "Cipressa", "Civezza", "Cosio d'Arroscia", "Costarainera", "Diano Arentino", "Diano Castello", "Diano Marina", "Diano San Pietro", "Dolceacqua", "Dolcedo", "Imperia", "Isolabona", "Lucinasco", "Mendatica", "Molini di Triora", "Montegrosso Pian Latte", "Olivetta San Michele", "Ospedaletti", "Perinaldo", "Pietrabruna", "Pieve di Teco", "Pigna", "Pompeiana", "Pontedassio", "Pornassio", "Prelà", "Ranzo", "Rezzo", "Riva Ligure", "Rocchetta Nervina", "San Bartolomeo al Mare", "San Biagio della Cima", "San Lorenzo al Mare", "Sanremo", "Santo Stefano al Mare", "Seborga", "Soldano", "Taggia", "Terzorio", "Triora", "Vallebona", "Vallecrosia", "Vasia", "Ventimiglia", "Vessalico", "Villa Faraldi", "Montalto Carpasio", "Acquaviva d'Isernia", "Agnone", "Bagnoli del Trigno", "Belmonte del Sannio", "Cantalupo nel Sannio", "Capracotta", "Carovilli", "Carpinone", "Castel del Giudice", "Castelpetroso", "Castelpizzuto", "Castel San Vincenzo", "Castelverrino", "Cerro al Volturno", "Chiauci", "Civitanova del Sannio", "Colli a Volturno", "Conca Casale", "Filignano", "Forlì del Sannio", "Fornelli", "Frosolone", "Isernia", "Longano", "Macchia d'Isernia", "Macchiagodena", "Miranda", "Montaquila", "Montenero Val Cocchiara", "Monteroduni", "Pesche", "Pescolanciano", "Pescopennataro", "Pettoranello del Molise", "Pietrabbondante", "Pizzone", "Poggio Sannita", "Pozzilli", "Rionero Sannitico", "Roccamandolfi", "Roccasicura", "Rocchetta a Volturno", "San Pietro Avellana", "Sant'Agapito", "Santa Maria del Molise", "Sant'Angelo del Pesco", "Sant'Elena Sannita", "Scapoli", "Sessano del Molise", "Sesto Campano", "Vastogirardi", "Venafro", "Ameglia", "Arcola", "Beverino", "Bolano", "Bonassola", "Borghetto di Vara", "Brugnato", "Calice al Cornoviglio", "Carro", "Carrodano", "Castelnuovo Magra", "Deiva Marina", "Follo", "Framura", "La Spezia", "Lerici", "Levanto", "Maissana", "Monterosso al Mare", "Luni", "Pignone", "Portovenere", "Riccò del Golfo di Spezia", "Riomaggiore", "Rocchetta di Vara", "Santo Stefano di Magra", "Sarzana", "Sesta Godano", "Varese Ligure", "Vernazza", "Vezzano Ligure", "Zignago", "Acciano", "Aielli", "Alfedena", "Anversa degli Abruzzi", "Ateleta", "Avezzano", "Balsorano", "Barete", "Barisciano", "Barrea", "Bisegna", "Bugnara", "Cagnano Amiterno", "Calascio", "Campo di Giove", "Campotosto", "Canistro", "Cansano", "Capestrano", "Capistrello", "Capitignano", "Caporciano", "Cappadocia", "Carapelle Calvisio", "Carsoli", "Castel del Monte", "Castel di Ieri", "Castel di Sangro", "Castellafiume", "Castelvecchio Calvisio", "Castelvecchio Subequo", "Celano", "Cerchio", "Civita d'Antino", "Civitella Alfedena", "Civitella Roveto", "Cocullo", "Collarmele", "Collelongo", "Collepietro", "Corfinio", "Fagnano Alto", "Fontecchio", "Fossa", "Gagliano Aterno", "Gioia dei Marsi", "Goriano Sicoli", "Introdacqua", "L'Aquila", "Lecce nei Marsi", "Luco dei Marsi", "Lucoli", "Magliano de' Marsi", "Massa d'Albe", "Molina Aterno", "Montereale", "Morino", "Navelli", "Ocre", "Ofena", "Opi", "Oricola", "Ortona dei Marsi", "Ortucchio", "Ovindoli", "Pacentro", "Pereto", "Pescasseroli", "Pescina", "Pescocostanzo", "Pettorano sul Gizio", "Pizzoli", "Poggio Picenze", "Prata d'Ansidonia", "Pratola Peligna", "Prezza", "Raiano", "Rivisondoli", "Roccacasale", "Rocca di Botte", "Rocca di Cambio", "Rocca di Mezzo", "Rocca Pia", "Roccaraso", "San Benedetto dei Marsi", "San Benedetto in Perillis", "San Demetrio ne' Vestini", "San Pio delle Camere", "Sante Marie", "Sant'Eusanio Forconese", "Santo Stefano di Sessanio", "San Vincenzo Valle Roveto", "Scanno", "Scontrone", "Scoppito", "Scurcola Marsicana", "Secinaro", "Sulmona", "Tagliacozzo", "Tione degli Abruzzi", "Tornimparte", "Trasacco", "Villalago", "Villa Santa Lucia degli Abruzzi", "Villa Sant'Angelo", "Villavallelonga", "Villetta Barrea", "Vittorito", "Aprilia", "Bassiano", "Campodimele", "Castelforte", "Cisterna di Latina", "Cori", "Fondi", "Formia", "Gaeta", "Itri", "Latina", "Lenola", "Maenza", "Minturno", "Monte San Biagio", "Norma", "Pontinia", "Ponza", "Priverno", "Prossedi", "Roccagorga", "Rocca Massima", "Roccasecca dei Volsci", "Sabaudia", "San Felice Circeo", "Santi Cosma e Damiano", "Sermoneta", "Sezze", "Sonnino", "Sperlonga", "Spigno Saturnia", "Terracina", "Ventotene", "Alessano", "Alezio", "Alliste", "Andrano", "Aradeo", "Arnesano", "Bagnolo del Salento", "Botrugno", "Calimera", "Campi Salentina", "Cannole", "Caprarica di Lecce", "Carmiano", "Carpignano Salentino", "Casarano", "Castri di Lecce", "Castrignano de' Greci", "Castrignano del Capo", "Cavallino", "Collepasso", "Copertino", "Corigliano d'Otranto", "Corsano", "Cursi", "Cutrofiano", "Diso", "Gagliano del Capo", "Galatina", "Galatone", "Gallipoli", "Giuggianello", "Giurdignano", "Guagnano", "Lecce", "Lequile", "Leverano", "Lizzanello", "Maglie", "Martano", "Martignano", "Matino", "Melendugno", "Melissano", "Melpignano", "Miggiano", "Minervino di Lecce", "Monteroni di Lecce", "Montesano Salentino", "Morciano di Leuca", "Muro Leccese", "Nardò", "Neviano", "Nociglia", "Novoli", "Ortelle", "Otranto", "Palmariggi", "Parabita", "Patù", "Poggiardo", "Racale", "Ruffano", "Salice Salentino", "Salve", "Sanarica", "San Cesario di Lecce", "San Donato di Lecce", "Sannicola", "San Pietro in Lama", "Santa Cesarea Terme", "Scorrano", "Seclì", "Sogliano Cavour", "Soleto", "Specchia", "Spongano", "Squinzano", "Sternatia", "Supersano", "Surano", "Surbo", "Taurisano", "Taviano", "Tiggiano", "Trepuzzi", "Tricase", "Tuglie", "Ugento", "Uggiano la Chiesa", "Veglie", "Vernole", "Zollino", "San Cassiano", "Castro", "Porto Cesareo", "Presicce-Acquarica", "Abbadia Lariana", "Airuno", "Annone di Brianza", "Ballabio", "Barzago", "Barzanò", "Barzio", "Bellano", "Bosisio Parini", "Brivio", "Bulciago", "Calco", "Calolziocorte", "Carenno", "Casargo", "Casatenovo", "Cassago Brianza", "Cassina Valsassina", "Castello di Brianza", "Cernusco Lombardone", "Cesana Brianza", "Civate", "Colico", "Colle Brianza", "Cortenova", "Costa Masnaga", "Crandola Valsassina", "Cremella", "Cremeno", "Dervio", "Dolzago", "Dorio", "Ello", "Erve", "Esino Lario", "Galbiate", "Garbagnate Monastero", "Garlate", "Imbersago", "Introbio", "Lecco", "Lierna", "Lomagna", "Malgrate", "Mandello del Lario", "Margno", "Merate", "Missaglia", "Moggio", "Molteno", "Monte Marenzo", "Montevecchia", "Monticello Brianza", "Morterone", "Nibionno", "Oggiono", "Olgiate Molgora", "Olginate", "Oliveto Lario", "Osnago", "Paderno d'Adda", "Pagnona", "Parlasco", "Pasturo", "Perledo", "Pescate", "Premana", "Primaluna", "Robbiate", "Rogeno", "Santa Maria Hoè", "Sirone", "Sirtori", "Sueglio", "Suello", "Taceno", "Valgreghentino", "Valmadrera", "Varenna", "Vercurago", "Viganò", "Verderio", "La Valletta Brianza", "Valvarrone", "Bibbona", "Campiglia Marittima", "Campo nell'Elba", "Capoliveri", "Capraia Isola", "Castagneto Carducci", "Cecina", "Collesalvetti", "Livorno", "Marciana", "Marciana Marina", "Piombino", "Porto Azzurro", "Portoferraio", "Rosignano Marittimo", "San Vincenzo", "Sassetta", "Suvereto", "Rio", "Abbadia Cerreto", "Bertonico", "Boffalora d'Adda", "Borghetto Lodigiano", "Borgo San Giovanni", "Brembio", "Casaletto Lodigiano", "Casalmaiocco", "Casalpusterlengo", "Caselle Landi", "Caselle Lurani", "Castelnuovo Bocca d'Adda", "Castiglione d'Adda", "Castiraga Vidardo", "Cavenago d'Adda", "Cervignano d'Adda", "Codogno", "Comazzo", "Cornegliano Laudense", "Corno Giovine", "Cornovecchio", "Corte Palasio", "Crespiatica", "Fombio", "Galgagnano", "Graffignana", "Guardamiglio", "Livraga", "Lodi", "Lodi Vecchio", "Maccastorna", "Mairago", "Maleo", "Marudo", "Massalengo", "Meleti", "Merlino", "Montanaso Lombardo", "Mulazzano", "Orio Litta", "Ospedaletto Lodigiano", "Ossago Lodigiano", "Pieve Fissiraga", "Salerano sul Lambro", "San Fiorano", "San Martino in Strada", "San Rocco al Porto", "Sant'Angelo Lodigiano", "Santo Stefano Lodigiano", "Secugnago", "Senna Lodigiana", "Somaglia", "Sordio", "Tavazzano con Villavesco", "Terranova dei Passerini", "Turano Lodigiano", "Valera Fratta", "Villanova del Sillaro", "Zelo Buon Persico", "Castelgerundo", "Altopascio", "Bagni di Lucca", "Barga", "Borgo a Mozzano", "Camaiore", "Camporgiano", "Capannori", "Careggine", "Castelnuovo di Garfagnana", "Castiglione di Garfagnana", "Coreglia AnteLMEnelli", "Forte dei Marmi", "Fosciandora", "Gallicano", "Lucca", "Massarosa", "Minucciano", "Molazzana", "Montecarlo", "Pescaglia", "Piazza al Serchio", "Pietrasanta", "Pieve Fosciana", "Porcari", "San Romano in Garfagnana", "Seravezza", "Stazzema", "Vagli Sotto", "Viareggio", "Villa Basilica", "Villa Collemandina", "Fabbriche di Vergemoli", "Sillano Giuncugnano", "Apiro", "Appignano", "Belforte del Chienti", "Bolognola", "Caldarola", "Camerino", "Camporotondo di Fiastrone", "Castelraimondo", "Castelsantangelo sul Nera", "Cessapalombo", "Cingoli", "Civitanova Marche", "Colmurano", "Corridonia", "Esanatoglia", "Fiastra", "Fiuminata", "Gagliole", "Gualdo", "Loro Piceno", "Macerata", "Matelica", "Mogliano", "Montecassiano", "Monte Cavallo", "Montecosaro", "Montefano", "Montelupone", "Monte San Giusto", "Monte San Martino", "Morrovalle", "Muccia", "Penna San Giovanni", "Petriolo", "Pieve Torina", "Pioraco", "Poggio San Vicino", "Pollenza", "Porto Recanati", "Potenza Picena", "Recanati", "Ripe San Ginesio", "San Ginesio", "San Severino Marche", "Sant'Angelo in Pontano", "Sarnano", "Sefro", "Serrapetrona", "Serravalle di Chienti", "Tolentino", "Treia", "Urbisaglia", "Ussita", "Visso", "Valfornace", "Acquanegra sul Chiese", "Asola", "Bagnolo San Vito", "Bozzolo", "Canneto sull'Oglio", "Casalmoro", "Casaloldo", "Casalromano", "Castelbelforte", "Castel d'Ario", "Castel Goffredo", "Castellucchio", "Castiglione delle Stiviere", "Cavriana", "Ceresara", "Commessaggio", "Curtatone", "Dosolo", "Gazoldo degli Ippoliti", "Gazzuolo", "Goito", "Gonzaga", "Guidizzolo", "Magnacavallo", "Mantova", "Marcaria", "Mariana Mantovana", "Marmirolo", "Medole", "Moglia", "Monzambano", "Motteggiana", "Ostiglia", "Pegognaga", "Piubega", "Poggio Rusco", "Pomponesco", "Ponti sul Mincio", "Porto Mantovano", "Quingentole", "Quistello", "Redondesco", "Rivarolo Mantovano", "Rodigo", "Roncoferraro", "Roverbella", "Sabbioneta", "San Benedetto Po", "San Giacomo delle Segnate", "San Giorgio Bigarello", "San Giovanni del Dosso", "San Martino dall'Argine", "Schivenoglia", "Sermide e Felonica", "Serravalle a Po", "Solferino", "Sustinente", "Suzzara", "Viadana", "Villimpenta", "Volta Mantovana", "Borgo Virgilio", "Borgo Mantovano", "Borgocarbonara", "Aulla", "Bagnone", "Carrara", "Casola in Lunigiana", "Comano", "Filattiera", "Fivizzano", "Fosdinovo", "Licciana Nardi", "Massa", "Montignoso", "Mulazzo", "Podenzana", "Pontremoli", "Tresana", "Villafranca in Lunigiana", "Zeri", "Accettura", "Aliano", "Bernalda", "Calciano", "Cirigliano", "Colobraro", "Craco", "Ferrandina", "Garaguso", "Gorgoglione", "Grassano", "Grottole", "Irsina", "Matera", "Miglionico", "Montalbano Jonico", "Montescaglioso", "Nova Siri", "Oliveto Lucano", "Pisticci", "Policoro", "Pomarico", "Rotondella", "Salandra", "San Giorgio Lucano", "San Mauro Forte", "Stigliano", "Tricarico", "Tursi", "Valsinni", "Scanzano Jonico", "Alcara li Fusi", "Alì", "Alì Terme", "Antillo", "Barcellona Pozzo di Gotto", "Basicò", "Brolo", "Capizzi", "Capo d'Orlando", "Capri Leone", "Caronia", "Casalvecchio Siculo", "Castel di Lucio", "Castell'Umberto", "Castelmola", "Castroreale", "Cesarò", "Condrò", "Falcone", "Ficarra", "Fiumedinisi", "Floresta", "Fondachelli-Fantina", "Forza d'Agrò", "Francavilla di Sicilia", "Frazzanò", "Furci Siculo", "Furnari", "Gaggi", "Galati Mamertino", "Gallodoro", "Giardini-Naxos", "Gioiosa Marea", "Graniti", "Gualtieri Sicaminò", "Itala", "Leni", "Letojanni", "Librizzi", "Limina", "Lipari", "Longi", "Malfa", "Malvagna", "Mandanici", "Mazzarrà Sant'Andrea", "Merì", "Messina", "Milazzo", "Militello Rosmarino", "Mirto", "Mistretta", "Moio Alcantara", "Monforte San Giorgio", "Mongiuffi Melia", "Montagnareale", "Montalbano Elicona", "Motta Camastra", "Motta d'Affermo", "Naso", "Nizza di Sicilia", "Novara di Sicilia", "Oliveri", "Pace del Mela", "Pagliara", "Patti", "Pettineo", "Piraino", "Raccuja", "Reitano", "Roccafiorita", "Roccalumera", "Roccavaldina", "Roccella Valdemone", "Rodì Milici", "Rometta", "San Filippo del Mela", "San Fratello", "San Marco d'Alunzio", "San Pier Niceto", "San Piero Patti", "San Salvatore di Fitalia", "Santa Domenica Vittoria", "Sant'Agata di Militello", "Sant'Alessio Siculo", "Santa Lucia del Mela", "Santa Marina Salina", "Sant'Angelo di Brolo", "Santa Teresa di Riva", "San Teodoro ", "Santo Stefano di Camastra", "Saponara", "Savoca", "Scaletta Zanclea", "Sinagra", "Spadafora", "Taormina", "Torregrotta", "Tortorici", "Tripi", "Tusa", "Ucria", "Valdina", "Venetico", "Villafranca Tirrena", "Terme Vigliatore", "Acquedolci", "Torrenova", "Abbiategrasso", "Albairate", "Arconate", "Arese", "Arluno", "Assago", "Bareggio", "Basiano", "Basiglio", "Bellinzago Lombardo", "Bernate Ticino", "Besate", "Binasco", "Boffalora sopra Ticino", "Bollate", "Bresso", "Bubbiano", "Buccinasco", "Buscate", "Bussero", "Busto Garolfo", "Calvignasco", "Cambiago", "Canegrate", "Carpiano", "Carugate", "Casarile", "Casorezzo", "Cassano d'Adda", "Cassina de' Pecchi", "Cassinetta di Lugagnano", "Castano Primo", "Cernusco sul Naviglio", "Cerro al Lambro", "Cerro Maggiore", "Cesano Boscone", "Cesate", "Cinisello Balsamo", "Cisliano", "Cologno Monzese", "Colturano", "Corbetta", "Cormano", "Cornaredo", "Corsico", "Cuggiono", "Cusago", "Cusano Milanino", "Dairago", "Dresano", "Gaggiano", "Garbagnate Milanese", "Gessate", "Gorgonzola", "Grezzago", "Gudo Visconti", "Inveruno", "Inzago", "Lacchiarella", "Lainate", "Legnano", "Liscate", "Locate di Triulzi", "Magenta", "Magnago", "Marcallo con Casone", "Masate", "Mediglia", "Melegnano", "Melzo", "Mesero", "Milano", "Morimondo", "Motta Visconti", "Nerviano", "Nosate", "Novate Milanese", "Noviglio", "Opera", "Ossona", "Ozzero", "Paderno Dugnano", "Pantigliate", "Parabiago", "Paullo", "Pero", "Peschiera Borromeo", "Pessano con Bornago", "Pieve Emanuele", "Pioltello", "Pogliano Milanese", "Pozzo d'Adda", "Pozzuolo Martesana", "Pregnana Milanese", "Rescaldina", "Rho", "Robecchetto con Induno", "Robecco sul Naviglio", "Rodano", "Rosate", "Rozzano", "San Colombano al Lambro", "San Donato Milanese", "San Giorgio su Legnano", "San Giuliano Milanese", "Santo Stefano Ticino", "San Vittore Olona", "San Zenone al Lambro", "Sedriano", "Segrate", "Senago", "Sesto San Giovanni", "Settala", "Settimo Milanese", "Solaro", "Trezzano Rosa", "Trezzano sul Naviglio", "Trezzo sull'Adda", "Tribiano", "Truccazzano", "Turbigo", "Vanzago", "Vaprio d'Adda", "Vernate", "Vignate", "Vimodrone", "Vittuone", "Vizzolo Predabissi", "Zibido San Giacomo", "Villa Cortese", "Vanzaghello", "Baranzate", "Vermezzo con Zelo", "Bastiglia", "Bomporto", "Campogalliano", "Camposanto", "Carpi", "Castelfranco Emilia", "Castelnuovo Rangone", "Castelvetro di Modena", "Cavezzo", "Concordia sulla Secchia", "Fanano", "Finale Emilia", "Fiorano Modenese", "Fiumalbo", "Formigine", "Frassinoro", "Guiglia", "Lama Mocogno", "Maranello", "Marano sul Panaro", "Medolla", "Mirandola", "Modena", "Montecreto", "Montefiorino", "Montese", "Nonantola", "Novi di Modena", "Palagano", "Pavullo nel Frignano", "Pievepelago", "Polinago", "Prignano sulla Secchia", "Ravarino", "Riolunato", "San Cesario sul Panaro", "San Felice sul Panaro", "San Possidonio", "San Prospero", "Sassuolo", "Savignano sul Panaro", "Serramazzoni", "Sestola", "Soliera", "Spilamberto", "Vignola", "Zocca", "Agrate Brianza", "Aicurzio", "Albiate", "Arcore", "Barlassina", "Bellusco", "Bernareggio", "Besana in Brianza", "Biassono", "Bovisio-Masciago", "Briosco", "Brugherio", "Burago di Molgora", "Camparada", "Carate Brianza", "Carnate", "Cavenago di Brianza", "Ceriano Laghetto", "Cesano Maderno", "Cogliate", "Concorezzo", "Correzzana", "Desio", "Giussano", "Lazzate", "Lesmo", "Limbiate", "Lissone", "Macherio", "Meda", "Mezzago", "Misinto", "Monza", "Muggiò", "Nova Milanese", "Ornago", "Renate", "Ronco Briantino", "Seregno", "Seveso", "Sovico", "Sulbiate", "Triuggio", "Usmate Velate", "Varedo", "Vedano al Lambro", "Veduggio con Colzano", "Verano Brianza", "Villasanta", "Vimercate", "Busnago", "Caponago", "Cornate d'Adda", "Lentate sul Seveso", "Roncello", "Acerra", "Afragola", "Agerola", "Anacapri", "Arzano", "Bacoli", "Barano d'Ischia", "Boscoreale", "Boscotrecase", "Brusciano", "Caivano", "Calvizzano", "Camposano", "Capri", "Carbonara di Nola", "Cardito", "Casalnuovo di Napoli", "Casamarciano", "Casamicciola Terme", "Casandrino", "Casavatore", "Casola di Napoli", "Casoria", "Castellammare di Stabia", "Castello di Cisterna", "Cercola", "Cicciano", "Cimitile", "Comiziano", "Crispano", "Forio", "Frattamaggiore", "Frattaminore", "Giugliano in Campania", "Gragnano", "Grumo Nevano", "Ischia", "Lacco Ameno", "Lettere", "Liveri", "Marano di Napoli", "Mariglianella", "Marigliano", "Massa Lubrense", "Melito di Napoli", "Meta", "Monte di Procida", "Mugnano di Napoli", "Napoli", "Nola", "Ottaviano", "Palma Campania", "Piano di Sorrento", "Pimonte", "Poggiomarino", "Pollena Trocchia", "Pomigliano d'Arco", "Pompei", "Portici", "Pozzuoli", "Procida", "Qualiano", "Quarto", "Ercolano", "Roccarainola", "San Gennaro Vesuviano", "San Giorgio a Cremano", "San Giuseppe Vesuviano", "San Paolo Bel Sito", "San Sebastiano al Vesuvio", "Sant'Agnello", "Sant'Anastasia", "Sant'Antimo", "Sant'Antonio Abate", "San Vitaliano", "Saviano", "Scisciano", "Serrara Fontana", "Somma Vesuviana", "Sorrento", "Striano", "Terzigno", "Torre Annunziata", "Torre del Greco", "Tufino", "Vico Equense", "Villaricca", "Visciano", "Volla", "Santa Maria la Carità", "Trecase", "Massa di Somma", "Agrate Conturbia", "Ameno", "Armeno", "Arona", "Barengo", "Bellinzago Novarese", "Biandrate", "Boca", "Bogogno", "Bolzano Novarese", "Borgolavezzaro", "Borgomanero", "Borgo Ticino", "Briga Novarese", "Briona", "Caltignaga", "Cameri", "Carpignano Sesia", "Casalbeltrame", "Casaleggio Novara", "Casalino", "Casalvolone", "Castellazzo Novarese", "Castelletto sopra Ticino", "Cavaglietto", "Cavaglio d'Agogna", "Cavallirio", "Cerano", "Colazza", "Comignago", "Cressa", "Cureggio", "Divignano", "Dormelletto", "Fara Novarese", "Fontaneto d'Agogna", "Galliate", "Garbagna Novarese", "Gargallo", "Ghemme", "Gozzano", "Granozzo con Monticello", "Grignasco", "Invorio", "Landiona", "Lesa", "Maggiora", "Mandello Vitta", "Marano Ticino", "Massino Visconti", "Meina", "Mezzomerico", "Miasino", "Momo", "Nebbiuno", "Nibbiola", "Novara", "Oleggio", "Oleggio Castello", "Orta San Giulio", "Paruzzaro", "Pella", "Pettenasco", "Pisano", "Pogno", "Pombia", "Prato Sesia", "Recetto", "Romagnano Sesia", "Romentino", "San Maurizio d'Opaglio", "San Nazzaro Sesia", "San Pietro Mosezzo", "Sillavengo", "Sizzano", "Soriso", "Sozzago", "Suno", "Terdobbiate", "Tornaco", "Trecate", "Vaprio d'Agogna", "Varallo Pombia", "Vespolate", "Vicolungo", "Vinzaglio", "Gattico-Veruno", "Aritzo", "Arzana", "Atzara", "Austis", "Bari Sardo", "Baunei", "Belvì", "Birori", "Bitti", "Bolotana", "Borore", "Bortigali", "Desulo", "Dorgali", "Dualchi", "Elini", "Fonni", "Gadoni", "Gairo", "Galtellì", "Gavoi", "Girasole", "Ilbono", "Irgoli", "Jerzu", "Lanusei", "Lei", "Loceri", "Loculi", "Lodè", "Lotzorai", "Lula", "Macomer", "Mamoiada", "Meana Sardo", "Noragugume", "Nuoro", "Oliena", "Ollolai", "Olzai", "Onanì", "Onifai", "Oniferi", "Orani", "Orgosolo", "Orosei", "Orotelli", "Ortueri", "Orune", "Osidda", "Osini", "Ottana", "Ovodda", "Perdasdefogu", "Posada", "Sarule", "Silanus", "Sindia", "Siniscola", "Sorgono", "Talana", "Tertenia", "Teti", "Tiana", "Tonara", "Torpè", "Tortolì", "Triei", "Ulassai", "Urzulei", "Ussassai", "Villagrande Strisaili", "Cardedu", "Lodine", "Abbasanta", "Aidomaggiore", "Albagiara", "Ales", "Allai", "Arborea", "Ardauli", "Assolo", "Asuni", "Baradili", "Baratili San Pietro", "Baressa", "Bauladu", "Bidonì", "Bonarcado", "Boroneddu", "Busachi", "Cabras", "Cuglieri", "Fordongianus", "Ghilarza", "Gonnoscodina", "Gonnosnò", "Gonnostramatza", "Marrubiu", "Masullas", "Milis", "Mogorella", "Mogoro", "Morgongiori", "Narbolia", "Neoneli", "Norbello", "Nughedu Santa Vittoria", "Nurachi", "Nureci", "Ollastra", "Oristano", "Palmas Arborea", "Pau", "Paulilatino", "Pompu", "Riola Sardo", "Ruinas", "Samugheo", "San Nicolò d'Arcidano", "Santa Giusta", "Villa Sant'Antonio", "Santu Lussurgiu", "San Vero Milis", "Scano di Montiferro", "Sedilo", "Seneghe", "Senis", "Sennariolo", "Siamaggiore", "Siamanna", "Simala", "Simaxis", "Sini", "Siris", "Solarussa", "Sorradile", "Tadasuni", "Terralba", "Tramatza", "Tresnuraghes", "Ulà Tirso", "Uras", "Usellus", "Villanova Truschedu", "Villaurbana", "Villa Verde", "Zeddiani", "Zerfaliu", "Siapiccia", "Curcuris", "Soddì", "Bosa", "Flussio", "Laconi", "Magomadas", "Modolo", "Montresta", "Sagama", "Suni", "Tinnura", "Abano Terme", "Agna", "Albignasego", "Anguillara Veneta", "Arquà Petrarca", "Arre", "Arzergrande", "Bagnoli di Sopra", "Baone", "Barbona", "Battaglia Terme", "Boara Pisani", "Borgoricco", "Bovolenta", "Brugine", "Cadoneghe", "Campodarsego", "Campodoro", "Camposampiero", "Campo San Martino", "Candiana", "Carceri", "Carmignano di Brenta", "Cartura", "Casale di Scodosia", "Casalserugo", "Castelbaldo", "Cervarese Santa Croce", "Cinto Euganeo", "Cittadella", "Codevigo", "Conselve", "Correzzola", "Curtarolo", "Este", "Fontaniva", "Galliera Veneta", "Galzignano Terme", "Gazzo", "Grantorto", "Granze", "Legnaro", "Limena", "Loreggia", "Lozzo Atestino", "Maserà di Padova", "Masi", "Massanzago", "Megliadino San Vitale", "Merlara", "Mestrino", "Monselice", "Montagnana", "Montegrotto Terme", "Noventa Padovana", "Ospedaletto Euganeo", "Padova", "Pernumia", "Piacenza d'Adige", "Piazzola sul Brenta", "Piombino Dese", "Piove di Sacco", "Polverara", "Ponso", "Pontelongo", "Ponte San Nicolò", "Pozzonovo", "Rovolon", "Rubano", "Saccolongo", "San Giorgio delle Pertiche", "San Giorgio in Bosco", "San Martino di Lupari", "San Pietro in Gu", "San Pietro Viminario", "Santa Giustina in Colle", "Sant'Angelo di Piove di Sacco", "Sant'Elena", "Sant'Urbano", "Saonara", "Selvazzano Dentro", "Solesino", "Stanghella", "Teolo", "Terrassa Padovana", "Tombolo", "Torreglia", "Trebaseleghe", "Tribano", "Urbana", "Veggiano", "Vescovana", "Vighizzolo d'Este", "Vigodarzere", "Vigonza", "Villa del Conte", "Villa Estense", "Villafranca Padovana", "Villanova di Camposampiero", "Vo'", "Due Carrare", "Borgo Veneto", "Alia", "Alimena", "Aliminusa", "Altavilla Milicia", "Altofonte", "Bagheria", "Balestrate", "Baucina", "Belmonte Mezzagno", "Bisacquino", "Bolognetta", "Bompietro", "Borgetto", "Caccamo", "Caltavuturo", "Campofelice di Fitalia", "Campofelice di Roccella", "Campofiorito", "Camporeale", "Capaci", "Carini", "Castelbuono", "Casteldaccia", "Castellana Sicula", "Castronovo di Sicilia", "Cefalà Diana", "Cefalù", "Cerda", "Chiusa Sclafani", "Ciminna", "Cinisi", "Collesano", "Contessa Entellina", "Corleone", "Ficarazzi", "Gangi", "Geraci Siculo", "Giardinello", "Giuliana", "Godrano", "Gratteri", "Isnello", "Isola delle Femmine", "Lascari", "Lercara Friddi", "Marineo", "Mezzojuso", "Misilmeri", "Monreale", "Montelepre", "Montemaggiore Belsito", "Palazzo Adriano", "Palermo", "Partinico", "Petralia Soprana", "Petralia Sottana", "Piana degli Albanesi", "Polizzi Generosa", "Pollina", "Prizzi", "Roccamena", "Roccapalumba", "San Cipirello", "San Giuseppe Jato", "San Mauro Castelverde", "Santa Cristina Gela", "Santa Flavia", "Sciara", "Sclafani Bagni", "Termini Imerese", "Terrasini", "Torretta", "Trabia", "Trappeto", "Ustica", "Valledolmo", "Ventimiglia di Sicilia", "Vicari", "Villabate", "Villafrati", "Scillato", "Blufi", "Albareto", "Bardi", "Bedonia", "Berceto", "Bore", "Borgo Val di Taro", "Busseto", "Calestano", "Collecchio", "Colorno", "Compiano", "Corniglio", "Felino", "Fidenza", "Fontanellato", "Fontevivo", "Fornovo di Taro", "Langhirano", "Lesignano de' Bagni", "Medesano", "Monchio delle Corti", "Montechiarugolo", "Neviano degli Arduini", "Noceto", "Palanzano", "Parma", "Pellegrino Parmense", "Roccabianca", "Sala Baganza", "Salsomaggiore Terme", "San Secondo Parmense", "Solignano", "Soragna", "Terenzo", "Tizzano Val Parma", "Tornolo", "Torrile", "Traversetolo", "Valmozzola", "Varano de' Melegari", "Varsi", "Sissa Trecasali", "Polesine Zibello", "Sorbolo Mezzani", "Alagna", "Albaredo Arnaboldi", "Albonese", "Albuzzano", "Arena Po", "Badia Pavese", "Bagnaria", "Barbianello", "Bascapè", "Bastida Pancarana", "Battuda", "Belgioioso", "Bereguardo", "Borgarello", "Borgo Priolo", "Borgoratto Mormorolo", "Borgo San Siro", "Bornasco", "Bosnasco", "Brallo di Pregola", "Breme", "Bressana Bottarone", "Broni", "Calvignano", "Campospinoso", "Candia Lomellina", "Canneto Pavese", "Carbonara al Ticino", "Casanova Lonati", "Casatisma", "Casei Gerola", "Casorate Primo", "Cassolnovo", "Castana", "Casteggio", "Castelletto di Branduzzo", "Castello d'Agogna", "Castelnovetto", "Cava Manara", "Cecima", "Ceranova", "Ceretto Lomellina", "Cergnago", "Certosa di Pavia", "Cervesina", "Chignolo Po", "Cigognola", "Cilavegna", "Codevilla", "Confienza", "Copiano", "Corana", "Corvino San Quirico", "Costa de' Nobili", "Cozzo", "Cura Carpignano", "Dorno", "Ferrera Erbognone", "Filighera", "Fortunago", "Frascarolo", "Galliavola", "Gambarana", "Gambolò", "Garlasco", "Gerenzago", "Giussago", "Godiasco Salice Terme", "Golferenzo", "Gravellona Lomellina", "Gropello Cairoli", "Inverno e Monteleone", "Landriano", "Langosco", "Lardirago", "Linarolo", "Lirio", "Lomello", "Lungavilla", "Magherno", "Marcignago", "Marzano", "Mede", "Menconico", "Mezzana Bigli", "Mezzana Rabattone", "Mezzanino", "Miradolo Terme", "Montalto Pavese", "Montebello della Battaglia", "Montecalvo Versiggia", "Montescano", "Montesegale", "Monticelli Pavese", "Montù Beccaria", "Mornico Losana", "Mortara", "Nicorvo", "Olevano di Lomellina", "Oliva Gessi", "Ottobiano", "Palestro", "Pancarana", "Parona", "Pavia", "Pietra de' Giorgi", "Pieve Albignola", "Pieve del Cairo", "Pieve Porto Morone", "Pinarolo Po", "Pizzale", "Ponte Nizza", "Portalbera", "Rea", "Redavalle", "Retorbido", "Rivanazzano Terme", "Robbio", "Robecco Pavese", "Rocca de' Giorgi", "Rocca Susella", "Rognano", "Romagnese", "Roncaro", "Rosasco", "Rovescala", "San Cipriano Po", "San Damiano al Colle", "San Genesio ed Uniti", "San Giorgio di Lomellina", "San Martino Siccomario", "Sannazzaro de' Burgondi", "Santa Cristina e Bissone", "Santa Giuletta", "Sant'Alessio con Vialone", "Santa Margherita di Staffora", "Santa Maria della Versa", "Sant'Angelo Lomellina", "San Zenone al Po", "Sartirana Lomellina", "Scaldasole", "Semiana", "Silvano Pietra", "Siziano", "Sommo", "Spessa", "Stradella", "Suardi", "Torrazza Coste", "Torre Beretti e Castellaro", "Torre d'Arese", "Torre de' Negri", "Torre d'Isola", "Torrevecchia Pia", "Torricella Verzate", "Travacò Siccomario", "Trivolzio", "Tromello", "Trovo", "Val di Nizza", "Valeggio", "Valle Lomellina", "Valle Salimbene", "Varzi", "Velezzo Lomellina", "Vellezzo Bellini", "Verretto", "Verrua Po", "Vidigulfo", "Vigevano", "Villa Biscossi", "Villanova d'Ardenghi", "Villanterio", "Vistarino", "Voghera", "Volpara", "Zavattarello", "Zeccone", "Zeme", "Zenevredo", "Zerbo", "Zerbolò", "Zinasco", "Cornale e Bastida", "Corteolona e Genzone", "Colli Verdi", "Assisi", "Bastia Umbra", "Bettona", "Bevagna", "Campello sul Clitunno", "Cannara", "Cascia", "Castel Ritaldi", "Castiglione del Lago", "Cerreto di Spoleto", "Citerna", "Città della Pieve", "Città di Castello", "Collazzone", "Corciano", "Costacciaro", "Deruta", "Foligno", "Fossato di Vico", "Fratta Todina", "Giano dell'Umbria", "Gualdo Cattaneo", "Gualdo Tadino", "Gubbio", "Lisciano Niccone", "Magione", "Marsciano", "Massa Martana", "Monte Castello di Vibio", "Montefalco", "Monteleone di Spoleto", "Monte Santa Maria Tiberina", "Montone", "Nocera Umbra", "Norcia", "Paciano", "Panicale", "Passignano sul Trasimeno", "Perugia", "Piegaro", "Pietralunga", "Poggiodomo", "Preci", "San Giustino", "Sant'Anatolia di Narco", "Scheggia e Pascelupo", "Scheggino", "Sellano", "Sigillo", "Spello", "Spoleto", "Todi", "Torgiano", "Trevi", "Tuoro sul Trasimeno", "Umbertide", "Valfabbrica", "Vallo di Nera", "Valtopina", "Acqualagna", "Apecchio", "Belforte all'Isauro", "Borgo Pace", "Cagli", "Cantiano", "Carpegna", "Cartoceto", "Fano", "Fermignano", "Fossombrone", "Fratte Rosa", "Frontino", "Frontone", "Gabicce Mare", "Gradara", "Isola del Piano", "Lunano", "Macerata Feltria", "Mercatello sul Metauro", "Mercatino Conca", "Mombaroccio", "Mondavio", "Mondolfo", "Montecalvo in Foglia", "Monte Cerignone", "Montecopiolo", "Montefelcino", "Monte Grimano Terme", "Montelabbate", "Monte Porzio", "Peglio", "Pergola", "Pesaro", "Petriano", "Piandimeleto", "Pietrarubbia", "Piobbico", "San Costanzo", "San Lorenzo in Campo", "Sant'Angelo in Vado", "Sant'Ippolito", "Sassofeltrio", "Serra Sant'Abbondio", "Tavoleto", "Tavullia", "Urbania", "Urbino", "Vallefoglia", "Colli al Metauro", "Terre Roveresche", "Sassocorvaro Auditore", "Abbateggio", "Alanno", "Bolognano", "Brittoli", "Bussi sul Tirino", "Cappelle sul Tavo", "Caramanico Terme", "Carpineto della Nora", "Castiglione a Casauria", "Catignano", "Cepagatti", "Città Sant'Angelo", "Civitaquana", "Civitella Casanova", "Collecorvino", "Corvara", "Cugnoli", "Elice", "Farindola", "Lettomanoppello", "Loreto Aprutino", "Manoppello", "Montebello di Bertona", "Montesilvano", "Moscufo", "Nocciano", "Penne", "Pescara", "Pescosansonesco", "Pianella", "Picciano", "Pietranico", "Popoli", "Roccamorice", "Rosciano", "Salle", "Sant'Eufemia a Maiella", "San Valentino in Abruzzo Citeriore", "Scafa", "Serramonacesca", "Spoltore", "Tocco da Casauria", "Torre de' Passeri", "Turrivalignani", "Vicoli", "Villa Celiera", "Agazzano", "Alseno", "Besenzone", "Bettola", "Bobbio", "Borgonovo Val Tidone", "Cadeo", "Calendasco", "Caorso", "Carpaneto Piacentino", "Castell'Arquato", "Castel San Giovanni", "Castelvetro Piacentino", "Cerignale", "Coli", "Corte Brugnatella", "Cortemaggiore", "Farini", "Ferriere", "Fiorenzuola d'Arda", "Gazzola", "Gossolengo", "Gragnano Trebbiense", "Gropparello", "Lugagnano Val d'Arda", "Monticelli d'Ongina", "Morfasso", "Ottone", "Piacenza", "Pianello Val Tidone", "Piozzano", "Podenzano", "Ponte dell'Olio", "Pontenure", "Rivergaro", "Rottofreno", "San Giorgio Piacentino", "San Pietro in Cerro", "Sarmato", "Travo", "Vernasca", "Vigolzone", "Villanova sull'Arda", "Zerba", "Ziano Piacentino", "Alta Val Tidone", "Bientina", "Buti", "Calci", "Calcinaia", "Capannoli", "Casale Marittimo", "Cascina", "Castelfranco di Sotto", "Castellina Marittima", "Castelnuovo di Val di Cecina", "Chianni", "Fauglia", "Guardistallo", "Lajatico", "Montecatini Val di Cecina", "Montescudaio", "Monteverdi Marittimo", "Montopoli in Val d'Arno", "Orciano Pisano", "Palaia", "Peccioli", "Pisa", "Pomarance", "Ponsacco", "Pontedera", "Riparbella", "San Giuliano Terme", "San Miniato", "Santa Croce sull'Arno", "Santa Luce", "Santa Maria a Monte", "Terricciola", "Vecchiano", "Vicopisano", "Volterra", "Casciana Terme Lari", "Crespina Lorenzana", "Agliana", "Buggiano", "Lamporecchio", "Larciano", "Marliana", "Massa e Cozzile", "Monsummano Terme", "Montale", "Montecatini-Terme", "Pescia", "Pieve a Nievole", "Pistoia", "Ponte Buggianese", "Quarrata", "Sambuca Pistoiese", "Serravalle Pistoiese", "Uzzano", "Chiesina Uzzanese", "Abetone Cutigliano", "San Marcello Piteglio", "Andreis", "Arba", "Aviano", "Azzano Decimo", "Barcis", "Brugnera", "Budoia", "Caneva", "Casarsa della Delizia", "Castelnovo del Friuli", "Cavasso Nuovo", "Chions", "Cimolais", "Claut", "Clauzetto", "Cordenons", "Cordovado", "Erto e Casso", "Fanna", "Fiume Veneto", "Fontanafredda", "Frisanco", "Maniago", "Meduno", "Montereale Valcellina", "Morsano al Tagliamento", "Pasiano di Pordenone", "Pinzano al Tagliamento", "Polcenigo", "Porcia", "Pordenone", "Prata di Pordenone", "Pravisdomini", "Roveredo in Piano", "Sacile", "San Giorgio della Richinvelda", "San Martino al Tagliamento", "San Quirino", "San Vito al Tagliamento", "Sequals", "Sesto al Reghena", "Spilimbergo", "Tramonti di Sopra", "Tramonti di Sotto", "Travesio", "Vito d'Asio", "Vivaro", "Zoppola", "Vajont", "Valvasone Arzene", "Abriola", "Acerenza", "Albano di Lucania", "Anzi", "Armento", "Atella", "Avigliano", "Balvano", "Banzi", "Baragiano", "Barile", "Bella", "Brienza", "Brindisi Montagna", "Calvello", "Calvera", "Campomaggiore", "Cancellara", "Carbone", "San Paolo Albanese", "Castelgrande", "Castelluccio Inferiore", "Castelluccio Superiore", "Castelmezzano", "Castelsaraceno", "Castronuovo di Sant'Andrea", "Cersosimo", "Chiaromonte", "Corleto Perticara", "Episcopia", "Fardella", "Filiano", "Forenza", "Francavilla in Sinni", "Gallicchio", "Genzano di Lucania", "Grumento Nova", "Guardia Perticara", "Lagonegro", "Latronico", "Laurenzana", "Lauria", "Lavello", "Maratea", "Marsico Nuovo", "Marsicovetere", "Maschito", "Melfi", "Missanello", "Moliterno", "Montemilone", "Montemurro", "Muro Lucano", "Nemoli", "Noepoli", "Oppido Lucano", "Palazzo San Gervasio", "Pescopagano", "Picerno", "Pietragalla", "Pietrapertosa", "Pignola", "Potenza", "Rapolla", "Rapone", "Rionero in Vulture", "Ripacandida", "Rivello", "Roccanova", "Rotonda", "Ruoti", "Ruvo del Monte", "San Chirico Nuovo", "San Chirico Raparo", "San Costantino Albanese", "San Fele", "San Martino d'Agri", "San Severino Lucano", "Sant'Angelo Le Fratte", "Sant'Arcangelo", "Sarconi", "Sasso di Castalda", "Satriano di Lucania", "Savoia di Lucania", "Senise", "Spinoso", "Teana", "Terranova di Pollino", "Tito", "Tolve", "Tramutola", "Trecchina", "Trivigno", "Vaglio Basilicata", "Venosa", "Vietri di Potenza", "Viggianello", "Viggiano", "Ginestra", "Paterno", "Cantagallo", "Carmignano", "Montemurlo", "Poggio a Caiano", "Prato", "Vaiano", "Vernio", "Acate", "Chiaramonte Gulfi", "Comiso", "Giarratana", "Ispica", "Modica", "Monterosso Almo", "Pozzallo", "Ragusa", "Santa Croce Camerina", "Scicli", "Vittoria", "Alfonsine", "Bagnacavallo", "Bagnara di Romagna", "Brisighella", "Casola Valsenio", "Castel Bolognese", "Cervia", "Conselice", "Cotignola", "Faenza", "Fusignano", "Lugo", "Massa Lombarda", "Ravenna", "Riolo Terme", "Russi", "Sant'Agata sul Santerno", "Solarolo", "Africo", "Agnana Calabra", "Anoia", "Antonimina", "Ardore", "Bagaladi", "Bagnara Calabra", "Benestare", "Bianco", "Bivongi", "Bova", "Bovalino", "Bova Marina", "Brancaleone", "Bruzzano Zeffirio", "Calanna", "Camini", "Campo Calabro", "Candidoni", "Canolo", "Caraffa del Bianco", "Cardeto", "Careri", "Casignana", "Caulonia", "Ciminà", "Cinquefrondi", "Cittanova", "Condofuri", "Cosoleto", "Delianuova", "Feroleto della Chiesa", "Ferruzzano", "Fiumara", "Galatro", "Gerace", "Giffone", "Gioia Tauro", "Gioiosa Ionica", "Grotteria", "Laganadi", "Laureana di Borrello", "Locri", "Mammola", "Marina di Gioiosa Ionica", "Maropati", "Martone", "Melicuccà", "Melicucco", "Melito di Porto Salvo", "Molochio", "Monasterace", "Montebello Jonico", "Motta San Giovanni", "Oppido Mamertina", "Palizzi", "PaLME", "Pazzano", "Placanica", "Platì", "Polistena", "Portigliola", "Reggio di Calabria", "Riace", "Rizziconi", "Roccaforte del Greco", "Roccella Ionica", "Roghudi", "Rosarno", "Samo", "San Giorgio Morgeto", "San Giovanni di Gerace", "San Lorenzo", "San Luca", "San Pietro di Caridà", "San Procopio", "San Roberto", "Santa Cristina d'Aspromonte", "Sant'Agata del Bianco", "Sant'Alessio in Aspromonte", "Sant'Eufemia d'Aspromonte", "Sant'Ilario dello Ionio", "Santo Stefano in Aspromonte", "Scido", "Scilla", "Seminara", "Serrata", "Siderno", "Sinopoli", "Staiti", "Stignano", "Stilo", "Taurianova", "Terranova Sappo Minulio", "Varapodio", "Villa San Giovanni", "San Ferdinando", "Albinea", "Bagnolo in Piano", "Baiso", "Bibbiano", "Boretto", "Brescello", "Cadelbosco di Sopra", "Campagnola Emilia", "Campegine", "Carpineti", "Casalgrande", "Casina", "Castellarano", "Castelnovo di Sotto", "Castelnovo ne' Monti", "Cavriago", "Canossa", "Correggio", "Fabbrico", "Gattatico", "Gualtieri", "Guastalla", "Luzzara", "Montecchio Emilia", "Novellara", "Poviglio", "Quattro Castella", "Reggiolo", "Reggio nell'Emilia", "Rio Saliceto", "Rolo", "Rubiera", "San Martino in Rio", "San Polo d'Enza", "Sant'Ilario d'Enza", "Scandiano", "Toano", "Vetto", "Vezzano sul Crostolo", "Viano", "Villa Minozzo", "Ventasso", "Accumoli", "Amatrice", "Antrodoco", "Ascrea", "Belmonte in Sabina", "Borbona", "Borgorose", "Borgo Velino", "Cantalice", "Cantalupo in Sabina", "Casaprota", "Casperia", "Castel di Tora", "Castelnuovo di Farfa", "Castel Sant'Angelo", "Cittaducale", "Cittareale", "Collalto Sabino", "Colle di Tora", "Collegiove", "Collevecchio", "Colli sul Velino", "Concerviano", "Configni", "Contigliano", "Cottanello", "Fara in Sabina", "Fiamignano", "Forano", "Frasso Sabino", "Greccio", "Labro", "Leonessa", "Longone Sabino", "Magliano Sabina", "Marcetelli", "Micigliano", "Mompeo", "Montasola", "Montebuono", "Monteleone Sabino", "Montenero Sabino", "Monte San Giovanni in Sabina", "Montopoli di Sabina", "Morro Reatino", "Nespolo", "Orvinio", "Paganico Sabino", "Pescorocchiano", "Petrella Salto", "Poggio Bustone", "Poggio Catino", "Poggio Mirteto", "Poggio Moiano", "Poggio Nativo", "Poggio San Lorenzo", "Posta", "Pozzaglia Sabina", "Rieti", "Rivodutri", "Roccantica", "Rocca Sinibalda", "Salisano", "Scandriglia", "Selci", "Stimigliano", "Tarano", "Toffia", "Torricella in Sabina", "Torri in Sabina", "Turania", "Vacone", "Varco Sabino", "Bellaria-Igea Marina", "Cattolica", "Coriano", "Gemmano", "Misano Adriatico", "Mondaino", "Montefiore Conca", "Montegridolfo", "Morciano di Romagna", "Riccione", "Rimini", "Saludecio", "San Clemente", "San Giovanni in Marignano", "Santarcangelo di Romagna", "Verucchio", "Casteldelci", "Maiolo", "Novafeltria", "Pennabilli", "San Leo", "Sant'Agata Feltria", "Talamello", "Poggio Torriana", "Montescudo-Monte Colombo", "Affile", "Agosta", "Albano Laziale", "Allumiere", "Anguillara Sabazia", "Anticoli Corrado", "Anzio", "Arcinazzo Romano", "Ariccia", "Arsoli", "Artena", "Bellegra", "Bracciano", "Camerata Nuova", "Campagnano di Roma", "Canale Monterano", "Canterano", "Capena", "Capranica Prenestina", "Carpineto Romano", "Casape", "Castel Gandolfo", "Castel Madama", "Castelnuovo di Porto", "Castel San Pietro Romano", "Cave", "Cerreto Laziale", "Cervara di Roma", "Cerveteri", "Ciciliano", "Cineto Romano", "Civitavecchia", "Civitella San Paolo", "Colleferro", "Colonna", "Fiano Romano", "Filacciano", "Formello", "Frascati", "Gallicano nel Lazio", "Gavignano", "Genazzano", "Genzano di Roma", "Gerano", "Gorga", "Grottaferrata", "Guidonia Montecelio", "Jenne", "Labico", "Lanuvio", "Licenza", "Magliano Romano", "Mandela", "Manziana", "Marano Equo", "Marcellina", "Marino", "Mazzano Romano", "Mentana", "Monte Compatri", "Monteflavio", "Montelanico", "Montelibretti", "Monte Porzio Catone", "Monterotondo", "Montorio Romano", "Moricone", "Morlupo", "Nazzano", "Nemi", "Nerola", "Nettuno", "Olevano Romano", "Palestrina", "Palombara Sabina", "Percile", "Pisoniano", "Poli", "Pomezia", "Ponzano Romano", "Riano", "Rignano Flaminio", "Riofreddo", "Rocca Canterano", "Rocca di Cave", "Rocca di Papa", "Roccagiovine", "Rocca Priora", "Rocca Santo Stefano", "Roiate", "Roma", "Roviano", "Sacrofano", "Sambuci", "San Gregorio da Sassola", "San Polo dei Cavalieri", "Santa Marinella", "Sant'Angelo Romano", "Sant'Oreste", "San Vito Romano", "Saracinesco", "Segni", "Subiaco", "Tivoli", "Tolfa", "Torrita Tiberina", "Trevignano Romano", "Vallepietra", "Vallinfreda", "Valmontone", "Velletri", "Vicovaro", "Vivaro Romano", "Zagarolo", "Lariano", "Ladispoli", "Ardea", "Ciampino", "San Cesareo", "Fiumicino", "Fonte Nuova", "Adria", "Ariano nel Polesine", "Arquà Polesine", "Badia Polesine", "Bagnolo di Po", "Bergantino", "Bosaro", "Calto", "Canaro", "Canda", "Castelguglielmo", "Castelmassa", "Castelnovo Bariano", "Ceneselli", "Ceregnano", "Corbola", "Costa di Rovigo", "Crespino", "Ficarolo", "Fiesso Umbertiano", "Frassinelle Polesine", "Fratta Polesine", "Gaiba", "Gavello", "Giacciano con Baruchella", "Guarda Veneta", "Lendinara", "Loreo", "Lusia", "Melara", "Occhiobello", "Papozze", "Pettorazza Grimani", "Pincara", "Polesella", "Pontecchio Polesine", "Porto Tolle", "Rosolina", "Rovigo", "Salara", "San Bellino", "San Martino di Venezze", "Stienta", "Taglio di Po", "Trecenta", "Villadose", "Villamarzana", "Villanova del Ghebbo", "Villanova Marchesana", "Porto Viro", "Acerno", "Agropoli", "Albanella", "Alfano", "Altavilla Silentina", "Amalfi", "Angri", "Aquara", "Ascea", "Atena Lucana", "Atrani", "Auletta", "Baronissi", "Battipaglia", "Bellosguardo", "Bracigliano", "Buccino", "Buonabitacolo", "Caggiano", "Calvanico", "Camerota", "Campagna", "Campora", "Cannalonga", "Capaccio Paestum", "Casalbuono", "Casaletto Spartano", "Casal Velino", "Caselle in Pittari", "Castelcivita", "Castellabate", "Castelnuovo Cilento", "Castelnuovo di Conza", "Castel San Giorgio", "Castel San Lorenzo", "Castiglione del Genovesi", "Cava de' Tirreni", "Celle di Bulgheria", "Centola", "Ceraso", "Cetara", "Cicerale", "Colliano", "Conca dei Marini", "Controne", "Contursi Terme", "Corbara", "Corleto Monforte", "Cuccaro Vetere", "Eboli", "Felitto", "Fisciano", "Furore", "Futani", "Giffoni Sei Casali", "Giffoni Valle Piana", "Gioi", "Giungano", "Ispani", "Laureana Cilento", "Laurino", "Laurito", "Laviano", "Lustra", "Magliano Vetere", "Maiori", "Mercato San Severino", "Minori", "Moio della Civitella", "Montano Antilia", "Montecorice", "Montecorvino Pugliano", "Montecorvino Rovella", "Monteforte Cilento", "Monte San Giacomo", "Montesano sulla Marcellana", "Morigerati", "Nocera Inferiore", "Nocera Superiore", "Novi Velia", "Ogliastro Cilento", "Olevano sul Tusciano", "Oliveto Citra", "Omignano", "Orria", "Ottati", "Padula", "Pagani", "Palomonte", "Pellezzano", "Perdifumo", "Perito", "Pertosa", "Petina", "Piaggine", "Pisciotta", "Polla", "Pollica", "Pontecagnano Faiano", "Positano", "Postiglione", "Praiano", "Prignano Cilento", "Ravello", "Ricigliano", "Roccadaspide", "Roccagloriosa", "Roccapiemonte", "Rofrano", "Romagnano al Monte", "Roscigno", "Rutino", "Sacco", "Sala Consilina", "Salento", "Salerno", "Salvitelle", "San Cipriano Picentino", "San Giovanni a Piro", "San Gregorio Magno", "San Mango Piemonte", "San Marzano sul Sarno", "San Mauro Cilento", "San Mauro la Bruca", "San Pietro al Tanagro", "San Rufo", "Santa Marina", "Sant'Angelo a Fasanella", "Sant'Arsenio", "Sant'Egidio del Monte Albino", "Santomenna", "San Valentino Torio", "Sanza", "Sapri", "Sarno", "Sassano", "Scafati", "Scala", "Serramezzana", "Serre", "Sessa Cilento", "Siano", "Sicignano degli Alburni", "Stella Cilento", "Stio", "Teggiano", "Torchiara", "Torraca", "Torre Orsaia", "Tortorella", "Tramonti", "Trentinara", "Valle dell'Angelo", "Vallo della Lucania", "Valva", "Vibonati", "Vietri sul Mare", "Bellizzi", "Aggius", "Alà dei Sardi", "Alghero", "Anela", "Ardara", "Arzachena", "Banari", "Benetutti", "Berchidda", "Bessude", "Bonnanaro", "Bono", "Bonorva", "Bortigiadas", "Borutta", "Bottidda", "Buddusò", "Bultei", "Bulzi", "Burgos", "Calangianus", "Cargeghe", "Castelsardo", "Cheremule", "Chiaramonti", "Codrongianos", "Cossoine", "Esporlatu", "Florinas", "Giave", "Illorai", "Ittireddu", "Ittiri", "Laerru", "La Maddalena", "Luogosanto", "Luras", "Mara", "Martis", "Monteleone Rocca Doria", "Monti", "Mores", "Muros", "Nughedu San Nicolò", "Nule", "Nulvi", "Olbia", "Olmedo", "Oschiri", "Osilo", "Ossi", "Ozieri", "Padria", "Palau", "Pattada", "Perfugas", "Ploaghe", "Porto Torres", "Pozzomaggiore", "Putifigari", "Romana", "Aglientu", "Santa Teresa Gallura", "Sassari", "Sedini", "Semestene", "Sennori", "Siligo", "Sorso", "Tempio Pausania", "Thiesi", "Tissi", "Torralba", "Trinità d'Agultu e Vignola", "Tula", "Uri", "Usini", "Villanova Monteleone", "Valledoria", "Telti", "Badesi", "Viddalba", "Golfo Aranci", "Loiri Porto San Paolo", "Sant'Antonio di Gallura", "Tergu", "Santa Maria Coghinas", "Erula", "Stintino", "Padru", "Budoni", "San Teodoro", "Alassio", "Albenga", "Albissola Marina", "Albisola Superiore", "Altare", "Andora", "Arnasco", "Balestrino", "Bardineto", "Bergeggi", "Boissano", "Borghetto Santo Spirito", "Borgio Verezzi", "Bormida", "Cairo Montenotte", "Calice Ligure", "Calizzano", "Carcare", "Casanova Lerrone", "Castelbianco", "Castelvecchio di Rocca Barbena", "Celle Ligure", "Cengio", "Ceriale", "Cisano sul Neva", "Cosseria", "Dego", "Erli", "Finale Ligure", "Garlenda", "Giustenice", "Giusvalla", "Laigueglia", "Loano", "Magliolo", "Mallare", "Massimino", "Millesimo", "Mioglia", "Murialdo", "Nasino", "Noli", "Onzo", "Orco Feglino", "Ortovero", "Osiglia", "Pallare", "Piana Crixia", "Pietra Ligure", "Plodio", "Pontinvrea", "Quiliano", "Rialto", "Roccavignale", "Sassello", "Savona", "Spotorno", "Stella", "Stellanello", "Testico", "Toirano", "Tovo San Giacomo", "Urbe", "Vado Ligure", "Varazze", "Vendone", "Vezzi Portio", "Villanova d'Albenga", "Zuccarello", "Abbadia San Salvatore", "Asciano", "Buonconvento", "Casole d'Elsa", "Castellina in Chianti", "Castelnuovo Berardenga", "Castiglione d'Orcia", "Cetona", "Chianciano Terme", "Chiusdino", "Chiusi", "Colle di Val d'Elsa", "Gaiole in Chianti", "Montepulciano", "Monteriggioni", "Monteroni d'Arbia", "Monticiano", "Murlo", "Piancastagnaio", "Pienza", "Poggibonsi", "Radda in Chianti", "Radicofani", "Radicondoli", "Rapolano Terme", "San Casciano dei Bagni", "San Gimignano", "San Quirico d'Orcia", "Sarteano", "Siena", "Sinalunga", "Sovicille", "Torrita di Siena", "Trequanda", "Montalcino", "Augusta", "Avola", "Buccheri", "Buscemi", "Canicattini Bagni", "Carlentini", "Cassaro", "Ferla", "Floridia", "Francofonte", "Lentini", "Melilli", "Noto", "Pachino", "Palazzolo Acreide", "Rosolini", "Siracusa", "Solarino", "Sortino", "Portopalo di Capo Passero", "Priolo Gargallo", "Albaredo per San Marco", "Albosaggia", "Andalo Valtellino", "Aprica", "Ardenno", "Bema", "Berbenno di Valtellina", "Bianzone", "Bormio", "Buglio in Monte", "Caiolo", "Campodolcino", "Caspoggio", "Castello dell'Acqua", "Castione Andevenno", "Cedrasco", "Cercino", "Chiavenna", "Chiesa in Valmalenco", "Chiuro", "Cino", "Civo", "Colorina", "Cosio Valtellino", "Dazio", "Delebio", "Dubino", "Faedo Valtellino", "Forcola", "Fusine", "Gerola Alta", "Gordona", "Grosio", "Grosotto", "Madesimo", "Lanzada", "Livigno", "Lovero", "Mantello", "Mazzo di Valtellina", "Mello", "Mese", "Montagna in Valtellina", "Morbegno", "Novate Mezzola", "Pedesina", "Piantedo", "Piateda", "Piuro", "Poggiridenti", "Ponte in Valtellina", "Postalesio", "Prata Camportaccio", "Rasura", "Rogolo", "Samolaco", "San Giacomo Filippo", "Sernio", "Sondalo", "Sondrio", "Spriana", "Talamona", "Tartano", "Teglio", "Tirano", "Torre di Santa Maria", "Tovo di Sant'Agata", "Traona", "Tresivio", "Valdidentro", "Valdisotto", "Valfurva", "Val Masino", "Verceia", "Vervio", "Villa di Chiavenna", "Villa di Tirano", "Arbus", "Armungia", "Ballao", "Barrali", "Barumini", "Buggerru", "Burcei", "Calasetta", "Carbonia", "Carloforte", "Castiadas", "Collinas", "Decimoputzu", "Dolianova", "Domus de Maria", "Domusnovas", "Donori", "Escalaplano", "Escolca", "Esterzili", "Fluminimaggiore", "Furtei", "Genoni", "Genuri", "Gergei", "Gesico", "Gesturi", "Giba", "Goni", "Gonnesa", "Gonnosfanadiga", "Guamaggiore", "Guasila", "Guspini", "Iglesias", "Isili", "Las Plassas", "Lunamatrona", "Mandas", "Masainas", "Monastir", "Muravera", "Musei", "Narcao", "Nuragus", "Nurallao", "Nuraminis", "Nurri", "Nuxis", "Orroli", "Ortacesus", "Pabillonis", "Pauli Arbarei", "Perdaxius", "Pimentel", "Piscinas", "Portoscuso", "Sadali", "Samassi", "Samatzai", "San Basilio", "San Gavino Monreale", "San Giovanni Suergiu", "San Nicolò Gerrei", "San Sperate", "San Vito", "Sanluri", "Santadi", "Sant'Andrea Frius", "Sant'Anna Arresi", "Sant'Antioco", "Sardara", "Segariu", "Selegas", "Senorbì", "Serdiana", "Serramanna", "Serrenti", "Serri", "Setzu", "Seui", "Seulo", "Siddi", "Siliqua", "Silius", "Siurgus Donigala", "Soleminis", "Suelli", "Teulada", "Tratalias", "Tuili", "Turri", "Ussana", "Ussaramanna", "Vallermosa", "Villacidro", "Villamar", "Villamassargia", "Villanova Tulo", "Villanovaforru", "Villanovafranca", "Villaperuccio", "Villaputzu", "Villasalto", "Villasimius", "Villasor", "Villaspeciosa", "Avetrana", "Carosino", "Castellaneta", "Crispiano", "Faggiano", "Fragagnano", "Ginosa", "Grottaglie", "Laterza", "Leporano", "Lizzano", "Manduria", "Martina Franca", "Maruggio", "Massafra", "Monteiasi", "Montemesola", "Monteparano", "Mottola", "Palagianello", "Palagiano", "Pulsano", "Roccaforzata", "San Giorgio Ionico", "San Marzano di San Giuseppe", "Sava", "Taranto", "Torricella", "Statte", "Alba Adriatica", "Ancarano", "Arsita", "Atri", "Basciano", "Bellante", "Bisenti", "Campli", "Canzano", "Castel Castagna", "Castellalto", "Castelli", "Castiglione Messer Raimondo", "Castilenti", "Cellino Attanasio", "Cermignano", "Civitella del Tronto", "Colledara", "Colonnella", "Controguerra", "Corropoli", "Cortino", "Crognaleto", "Fano Adriano", "Giulianova", "Isola del Gran Sasso d'Italia", "Montefino", "Montorio al Vomano", "Morro d'Oro", "Mosciano Sant'Angelo", "Nereto", "Notaresco", "Penna Sant'Andrea", "Pietracamela", "Pineto", "Rocca Santa Maria", "Roseto degli Abruzzi", "Sant'Egidio alla Vibrata", "Sant'Omero", "Silvi", "Teramo", "Torano Nuovo", "Torricella Sicura", "Tortoreto", "Tossicia", "Valle Castellana", "Martinsicuro", "Acquasparta", "Allerona", "Alviano", "Amelia", "Arrone", "Attigliano", "Baschi", "Calvi dell'Umbria", "Castel Giorgio", "Castel Viscardo", "Fabro", "Ferentillo", "Ficulle", "Giove", "Guardea", "Lugnano in Teverina", "Montecastrilli", "Montecchio", "Montefranco", "Montegabbione", "Monteleone d'Orvieto", "Narni", "Orvieto", "Otricoli", "Parrano", "Penna in Teverina", "Polino", "Porano", "San Gemini", "San Venanzo", "Stroncone", "Terni", "Avigliano Umbro", "Agliè", "Airasca", "Ala di Stura", "Albiano d'Ivrea", "Almese", "Alpette", "Alpignano", "Andezeno", "Andrate", "Angrogna", "Arignano", "Avigliana", "Azeglio", "Bairo", "Balangero", "Baldissero Canavese", "Baldissero Torinese", "Balme", "Banchette", "Barbania", "Bardonecchia", "Barone Canavese", "Beinasco", "Bibiana", "Bobbio Pellice", "Bollengo", "Borgaro Torinese", "Borgiallo", "Borgofranco d'Ivrea", "Borgomasino", "Borgone Susa", "Bosconero", "Brandizzo", "Bricherasio", "Brosso", "Brozolo", "Bruino", "Brusasco", "Bruzolo", "Buriasco", "Burolo", "Busano", "Bussoleno", "Buttigliera Alta", "Cafasse", "Caluso", "Cambiano", "Campiglione Fenile", "Candia Canavese", "Candiolo", "Canischio", "Cantalupa", "Cantoira", "Caprie", "Caravino", "Carema", "Carignano", "Carmagnola", "Casalborgone", "Cascinette d'Ivrea", "Caselette", "Caselle Torinese", "Castagneto Po", "Castagnole Piemonte", "Castellamonte", "Castelnuovo Nigra", "Castiglione Torinese", "Cavagnolo", "Cavour", "Cercenasco", "Ceres", "Ceresole Reale", "Cesana Torinese", "Chialamberto", "Chianocco", "Chiaverano", "Chieri", "Chiesanuova", "Chiomonte", "Chiusa di San Michele", "Chivasso", "Ciconio", "Cintano", "Cinzano", "Ciriè", "Claviere", "Coassolo Torinese", "Coazze", "Collegno", "Colleretto Castelnuovo", "Colleretto Giacosa", "Condove", "Corio", "Cossano Canavese", "Cuceglio", "Cumiana", "Cuorgnè", "Druento", "Exilles", "Favria", "Feletto", "Fenestrelle", "Fiano", "Fiorano Canavese", "Foglizzo", "Forno Canavese", "Frassinetto", "Front", "Frossasco", "Garzigliana", "Gassino Torinese", "Germagnano", "Giaglione", "Giaveno", "Givoletto", "Gravere", "Groscavallo", "Grosso", "Grugliasco", "Ingria", "Inverso Pinasca", "Isolabella", "Issiglio", "Ivrea", "La Cassa", "La Loggia", "Lanzo Torinese", "Lauriano", "Leini", "Lemie", "Lessolo", "Levone", "Locana", "Lombardore", "Lombriasco", "Loranzè", "Luserna San Giovanni", "Lusernetta", "Lusigliè", "Macello", "Maglione", "Marentino", "Massello", "Mathi", "Mattie", "Mazzè", "Meana di Susa", "Mercenasco", "Mezzenile", "Mombello di Torino", "Mompantero", "Monastero di Lanzo", "Moncalieri", "Moncenisio", "Montaldo Torinese", "Montalenghe", "Montalto Dora", "Montanaro", "Monteu da Po", "Moriondo Torinese", "Nichelino", "Noasca", "Nole", "Nomaglio", "None", "Novalesa", "Oglianico", "Orbassano", "Orio Canavese", "Osasco", "Osasio", "Oulx", "Ozegna", "Palazzo Canavese", "Pancalieri", "Parella", "Pavarolo", "Pavone Canavese", "Pecetto Torinese", "Perosa Argentina", "Perosa Canavese", "Perrero", "Pertusio", "Pessinetto", "Pianezza", "Pinasca", "Pinerolo", "Pino Torinese", "Piobesi Torinese", "Piossasco", "Piscina", "Piverone", "Poirino", "Pomaretto", "Pont-Canavese", "Porte", "Pragelato", "Prali", "Pralormo", "Pramollo", "Prarostino", "Prascorsano", "Pratiglione", "Quagliuzzo", "Quassolo", "Quincinetto", "Reano", "Ribordone", "Rivalba", "Rivalta di Torino", "Riva presso Chieri", "Rivara", "Rivarolo Canavese", "Rivarossa", "Rivoli", "Robassomero", "Rocca Canavese", "Roletto", "Romano Canavese", "Ronco Canavese", "Rondissone", "Rorà", "Roure", "Rosta", "Rubiana", "Rueglio", "Salassa", "Salbertrand", "Salerano Canavese", "Salza di Pinerolo", "Samone ", "San Benigno Canavese", "San Carlo Canavese", "San Colombano Belmonte", "San Didero", "San Francesco al Campo", "Sangano", "San Germano Chisone", "San Gillio", "San Giorgio Canavese", "San Giorio di Susa", "San Giusto Canavese", "San Martino Canavese", "San Maurizio Canavese", "San Mauro Torinese", "San Pietro Val Lemina", "San Ponso", "San Raffaele Cimena", "San Sebastiano da Po", "San Secondo di Pinerolo", "Sant'Ambrogio di Torino", "Sant'Antonino di Susa", "Santena", "Sauze di Cesana", "Sauze d'Oulx", "Scalenghe", "Scarmagno", "Sciolze", "Sestriere", "Settimo Rottaro", "Settimo Torinese", "Settimo Vittone", "Sparone", "Strambinello", "Strambino", "Susa", "Tavagnasco", "Torino", "Torrazza Piemonte", "Torre Canavese", "Torre Pellice", "Trana", "Traversella", "Traves", "Trofarello", "Usseaux", "Usseglio", "Vaie", "Val della Torre", "Valgioie", "Vallo Torinese", "Valperga", "Valprato Soana", "Varisella", "Vauda Canavese", "Venaus", "Venaria Reale", "Verolengo", "Verrua Savoia", "Vestignè", "Vialfrè", "Vidracco", "Vigone", "Villafranca Piemonte", "Villanova Canavese", "Villarbasse", "Villar Dora", "Villareggia", "Villar Focchiardo", "Villar Pellice", "Villar Perosa", "Villastellone", "Vinovo", "Virle Piemonte", "Vische", "Vistrorio", "Viù", "Volpiano", "Volvera", "Mappano", "Val di Chy", "Valchiusa", "Alcamo", "Buseto Palizzolo", "Calatafimi-Segesta", "Campobello di Mazara", "Castellammare del Golfo", "Castelvetrano", "Custonaci", "Erice", "Favignana", "Gibellina", "Marsala", "Mazara del Vallo", "Paceco", "Pantelleria", "Partanna", "Poggioreale", "Salaparuta", "Salemi", "Santa Ninfa", "San Vito Lo Capo", "Trapani", "Valderice", "Vita", "Petrosino", "Ala", "Albiano", "Aldeno", "Andalo", "Arco", "Avio", "Baselga di Pinè", "Bedollo", "Besenello", "Bieno", "Bleggio Superiore", "Bocenago", "Bondone", "Borgo Valsugana", "Brentonico", "Bresimo", "Caderzone Terme", "Calceranica al Lago", "Caldes", "Caldonazzo", "Calliano", "Campitello di Fassa", "Campodenno", "Canal San Bovo", "Canazei", "Capriana", "Carisolo", "Carzano", "Castel Condino", "Castello-Molina di Fiemme", "Castello Tesino", "Castelnuovo", "Cavalese", "Cavareno", "Cavedago", "Cavedine", "Cavizzana", "Cimone", "Cinte Tesino", "Cis", "Civezzano", "Cles", "Commezzadura", "Croviana", "Dambel", "Denno", "Drena", "Dro", "Fai della Paganella", "Fiavè", "Fierozzo", "Folgaria", "Fornace", "Frassilongo", "Garniga Terme", "Giovo", "Giustino", "Grigno", "Imer", "Isera", "Lavarone", "Lavis", "Levico Terme", "Livo", "Lona-Lases", "Luserna", "Malé", "Massimeno", "Mazzin", "Mezzana", "Mezzano", "Mezzocorona", "Mezzolombardo", "Moena", "Molveno", "Mori", "Nago-Torbole", "Nogaredo", "Nomi", "Novaledo", "Ospedaletto", "Ossana", "Palù del Fersina", "Panchià", "Ronzo-Chienis", "Peio", "Pellizzano", "Pelugo", "Pergine Valsugana", "Pieve Tesino", "Pinzolo", "Pomarolo", "Predazzo", "Rabbi", "Riva del Garda", "Romeno", "Roncegno Terme", "Ronchi Valsugana", "Ronzone", "Roverè della Luna", "Rovereto", "Ruffrè-Mendola", "Rumo", "Sagron Mis", "Samone", "San Michele all'Adige", "Sant'Orsola Terme", "Sanzeno", "Sarnonico", "Scurelle", "Segonzano", "Sfruz", "Soraga di Fassa", "Sover", "Spiazzo", "Spormaggiore", "Sporminore", "Stenico", "Storo", "Strembo", "Telve", "Telve di Sopra", "Tenna", "Tenno", "Terragnolo", "Terzolas", "Tesero", "Tione di Trento", "Ton", "Torcegno", "Trambileno", "Trento", "Valfloriana", "Vallarsa", "Vermiglio", "Vignola-Falesina", "Villa Lagarina", "Volano", "Ziano di Fiemme", "Comano Terme", "Ledro", "Predaia", "San Lorenzo Dorsino", "Valdaone", "Dimaro Folgarida", "Pieve di Bono-Prezzo", "Altavalle", "Altopiano della Vigolana", "Amblar-Don", "Borgo Chiese", "Borgo Lares", "Castel Ivano", "Cembra Lisignago", "Contà", "Madruzzo", "Porte di Rendena", "Primiero San Martino di Castrozza", "Sella Giudicarie", "Tre Ville", "Vallelaghi", "Ville d'Anaunia", "San Giovanni di Fassa", "Terre d'Adige", "Borgo d'Anaunia", "Novella", "Ville di Fiemme", "Altivole", "Arcade", "Asolo", "Borso del Grappa", "Breda di Piave", "Caerano di San Marco", "Cappella Maggiore", "Carbonera", "Casale sul Sile", "Casier", "Castelcucco", "Castelfranco Veneto", "Castello di Godego", "Cavaso del Tomba", "Cessalto", "Chiarano", "Cimadolmo", "Cison di Valmarino", "Codognè", "Colle Umberto", "Conegliano", "Cordignano", "Cornuda", "Crocetta del Montello", "Farra di Soligo", "Follina", "Fontanelle", "Fonte", "Fregona", "Gaiarine", "Giavera del Montello", "Godega di Sant'Urbano", "Gorgo al Monticano", "Istrana", "Loria", "Mansuè", "Mareno di Piave", "Maser", "Maserada sul Piave", "Meduna di Livenza", "Miane", "Mogliano Veneto", "Monastier di Treviso", "Monfumo", "Montebelluna", "Morgano", "Moriago della Battaglia", "Motta di Livenza", "Nervesa della Battaglia", "Oderzo", "Ormelle", "Orsago", "Paese", "Pederobba", "Pieve di Soligo", "Ponte di Piave", "Ponzano Veneto", "Portobuffolè", "Possagno", "Povegliano", "Preganziol", "Quinto di Treviso", "Refrontolo", "Resana", "Revine Lago", "Riese Pio X", "Roncade", "Salgareda", "San Biagio di Callalta", "San Fior", "San Pietro di Feletto", "San Polo di Piave", "Santa Lucia di Piave", "San Vendemiano", "San Zenone degli Ezzelini", "Sarmede", "Segusino", "Sernaglia della Battaglia", "Silea", "Spresiano", "Susegana", "Tarzo", "Trevignano", "Treviso", "Valdobbiadene", "Vazzola", "Vedelago", "Vidor", "Villorba", "Vittorio Veneto", "Volpago del Montello", "Zenson di Piave", "Zero Branco", "Pieve del Grappa", "Duino Aurisina", "Monrupino", "Muggia", "San Dorligo della Valle", "Sgonico", "Trieste", "Aiello del Friuli", "Amaro", "Ampezzo", "Aquileia", "Arta Terme", "Artegna", "Attimis", "Bagnaria Arsa", "Basiliano", "Bertiolo", "Bicinicco", "Bordano", "Buja", "Buttrio", "Camino al Tagliamento", "Campoformido", "Carlino", "Cassacco", "Castions di Strada", "Cavazzo Carnico", "Cercivento", "Cervignano del Friuli", "Chiopris-Viscone", "Chiusaforte", "Cividale del Friuli", "Codroipo", "Colloredo di Monte Albano", "Comeglians", "Corno di Rosazzo", "Coseano", "Dignano", "Dogna", "Drenchia", "Enemonzo", "Faedis", "Fagagna", "Flaibano", "Forni Avoltri", "Forni di Sopra", "Forni di Sotto", "Gemona del Friuli", "Gonars", "Grimacco", "Latisana", "Lauco", "Lestizza", "Lignano Sabbiadoro", "Lusevera", "Magnano in Riviera", "Majano", "Malborghetto Valbruna", "Manzano", "Marano Lagunare", "Martignacco", "Mereto di Tomba", "Moggio Udinese", "Moimacco", "Montenars", "Mortegliano", "Moruzzo", "Muzzana del Turgnano", "Nimis", "Osoppo", "Ovaro", "Pagnacco", "Palazzolo dello Stella", "Palmanova", "Paluzza", "Pasian di Prato", "Paularo", "Pavia di Udine", "Pocenia", "Pontebba", "Porpetto", "Povoletto", "Pozzuolo del Friuli", "Pradamano", "Prato Carnico", "Precenicco", "Premariacco", "Preone", "Prepotto", "Pulfero", "Ragogna", "Ravascletto", "Raveo", "Reana del Rojale", "Remanzacco", "Resia", "Resiutta", "Rigolato", "Rive d'Arcano", "Ronchis", "Ruda", "San Daniele del Friuli", "San Giorgio di Nogaro", "San Giovanni al Natisone", "San Leonardo", "San Pietro al Natisone", "Santa Maria la Longa", "San Vito al Torre", "San Vito di Fagagna", "Sauris", "Savogna", "Sedegliano", "Socchieve", "Stregna", "Sutrio", "Taipana", "Talmassons", "Tarcento", "Tarvisio", "Tavagnacco", "Terzo d'Aquileia", "Tolmezzo", "Torreano", "Torviscosa", "Trasaghis", "Treppo Grande", "Tricesimo", "Trivignano Udinese", "Udine", "Varmo", "Venzone", "Verzegnis", "Villa Santina", "Visco", "Zuglio", "Forgaria nel Friuli", "Campolongo Tapogliano", "Rivignano Teor", "Sappada", "Fiumicello Villa Vicentina", "Treppo Ligosullo", "Allein", "Antey-Saint-André", "Aosta", "Arnad", "Arvier", "Avise", "Ayas", "Aymavilles", "Bard", "Bionaz", "Brissogne", "Brusson", "Challand-Saint-Anselme", "Challand-Saint-Victor", "Chambave", "Chamois", "Champdepraz", "Champorcher", "Charvensod", "Châtillon", "Cogne", "Courmayeur", "Donnas", "Doues", "Emarèse", "Etroubles", "Fénis", "Fontainemore", "Gaby", "Gignod", "Gressan", "Gressoney-La-Trinité", "Gressoney-Saint-Jean", "Hône", "Introd", "Issime", "Issogne", "Jovençan", "La Magdeleine", "La Salle", "La Thuile", "Lillianes", "Montjovet", "Morgex", "Nus", "Ollomont", "Oyace", "Perloz", "Pollein", "Pontboset", "Pontey", "Pont-Saint-Martin", "Pré-Saint-Didier", "Quart", "Rhêmes-Notre-Dame", "Rhêmes-Saint-Georges", "Roisan", "Saint-Christophe", "Saint-Denis", "Saint-Marcel", "Saint-Nicolas", "Saint-Oyen", "Saint-Pierre", "Saint-Rhémy-en-Bosses", "Saint-Vincent", "Sarre", "Torgnon", "Valgrisenche", "Valpelline", "Valsavarenche", "Valtournenche", "Verrayes", "Verrès", "Villeneuve", "Agra", "Albizzate", "Angera", "Arcisate", "Arsago Seprio", "Azzate", "Azzio", "Barasso", "Bardello", "Bedero Valcuvia", "Besano", "Besnate", "Besozzo", "Biandronno", "Bisuschio", "Bodio Lomnago", "Brebbia", "Bregano", "Brenta", "Brezzo di Bedero", "Brinzio", "Brissago-Valtravaglia", "Brunello", "Brusimpiano", "Buguggiate", "Busto Arsizio", "Cadegliano-Viconago", "Cairate", "Cantello", "Caravate", "Cardano al Campo", "Carnago", "Caronno Pertusella", "Caronno Varesino", "Casale Litta", "Casalzuigno", "Casciago", "Casorate Sempione", "Cassano Magnago", "Cassano Valcuvia", "Castellanza", "Castello Cabiaglio", "Castelseprio", "Castelveccana", "Castiglione Olona", "Castronno", "Cavaria con Premezzo", "Cazzago Brabbia", "Cislago", "Cittiglio", "Clivio", "Cocquio-Trevisago", "Comabbio", "Comerio", "Cremenaga", "Crosio della Valle", "Cuasso al Monte", "Cugliate-Fabiasco", "Cunardo", "Curiglia con Monteviasco", "Cuveglio", "Cuvio", "Daverio", "Dumenza", "Duno", "Fagnano Olona", "Ferno", "Ferrera di Varese", "Gallarate", "Galliate Lombardo", "Gavirate", "Gazzada Schianno", "Gemonio", "Gerenzano", "Germignaga", "Golasecca", "Gorla Maggiore", "Gorla Minore", "Gornate Olona", "Grantola", "Inarzo", "Induno Olona", "Ispra", "Jerago con Orago", "Lavena Ponte Tresa", "Laveno-Mombello", "Leggiuno", "Lonate Ceppino", "Lonate Pozzolo", "Lozza", "Luino", "Luvinate", "Malgesso", "Malnate", "Marchirolo", "Marnate", "Marzio", "Masciago Primo", "Mercallo", "Mesenzana", "Montegrino Valtravaglia", "Monvalle", "Morazzone", "Mornago", "Oggiona con Santo Stefano", "Olgiate Olona", "Origgio", "Orino", "Porto Ceresio", "Porto Valtravaglia", "Rancio Valcuvia", "Ranco", "Saltrio", "Samarate", "Saronno", "Sesto Calende", "Solbiate Arno", "Solbiate Olona", "Somma Lombardo", "Sumirago", "Taino", "Ternate", "Tradate", "Travedona-Monate", "Tronzano Lago Maggiore", "Uboldo", "Valganna", "Varano Borghi", "Varese", "Vedano Olona", "Venegono Inferiore", "Venegono Superiore", "Vergiate", "Viggiù", "Vizzola Ticino", "Sangiano", "Maccagno con Pino e Veddasca", "Cadrezzate con Osmate", "Annone Veneto", "Campagna Lupia", "Campolongo Maggiore", "Camponogara", "Caorle", "Cavarzere", "Ceggia", "Chioggia", "Cinto Caomaggiore", "Cona", "Concordia Sagittaria", "Dolo", "Eraclea", "Fiesso d'Artico", "Fossalta di Piave", "Fossalta di Portogruaro", "Fossò", "Gruaro", "Jesolo", "Marcon", "Martellago", "Meolo", "Mira", "Mirano", "Musile di Piave", "Noale", "Noventa di Piave", "Pianiga", "Portogruaro", "Pramaggiore", "Quarto d'Altino", "Salzano", "San Donà di Piave", "San Michele al Tagliamento", "Santa Maria di Sala", "San Stino di Livenza", "Scorzè", "Spinea", "Stra", "Teglio Veneto", "Torre di Mosto", "Venezia", "Vigonovo", "Cavallino-Treporti", "Antrona Schieranco", "Anzola d'Ossola", "Arizzano", "Arola", "Aurano", "Baceno", "Bannio Anzino", "Baveno", "Bee", "Belgirate", "Beura-Cardezza", "Bognanco", "Brovello-Carpugnino", "Calasca-Castiglione", "Cambiasca", "Cannero Riviera", "Cannobio", "Caprezzo", "Casale Corte Cerro", "Ceppo Morelli", "Cesara", "Cossogno", "Craveggia", "Crevoladossola", "Crodo", "Domodossola", "Druogno", "Formazza", "Germagno", "Ghiffa", "Gignese", "Gravellona Toce", "Gurro", "Intragna", "Loreglia", "Macugnaga", "Madonna del Sasso", "Malesco", "Masera", "Massiola", "Mergozzo", "Miazzina", "Montecrestese", "Montescheno", "Nonio", "Oggebbio", "Omegna", "Ornavasso", "Pallanzeno", "Piedimulera", "Pieve Vergonte", "Premeno", "Premia", "Premosello-Chiovenda", "Quarna Sopra", "Quarna Sotto", "Re", "San Bernardino Verbano", "Santa Maria Maggiore", "Stresa", "Toceno", "Trarego Viggiona", "Trasquera", "Trontano", "Valstrona", "Vanzone con San Carlo", "Varzo", "Verbania", "Vignone", "Villadossola", "Villette", "Vogogna", "Borgomezzavalle", "Valle Cannobina", "Alagna Valsesia", "Albano Vercellese", "Alice Castello", "Arborio", "Asigliano Vercellese", "Balmuccia", "Balocco", "Bianzè", "Boccioleto", "Borgo d'Ale", "Borgosesia", "Borgo Vercelli", "Buronzo", "Campertogno", "Carcoforo", "Caresana", "Caresanablot", "Carisio", "Casanova Elvo", "San Giacomo Vercellese", "Cervatto", "Cigliano", "Civiasco", "Collobiano", "Costanzana", "Cravagliana", "Crescentino", "Crova", "Desana", "Fobello", "Fontanetto Po", "Formigliana", "Gattinara", "Ghislarengo", "Greggio", "Guardabosone", "Lamporo", "Lenta", "Lignana", "Livorno Ferraris", "Lozzolo", "Mollia", "Moncrivello", "Motta de' Conti", "Olcenengo", "Oldenico", "Palazzolo Vercellese", "Pertengo", "Pezzana", "Pila", "Piode", "Postua", "Prarolo", "Quarona", "Quinto Vercellese", "Rassa", "Rimella", "Rive", "Roasio", "Ronsecco", "Rossa", "Rovasenda", "Salasco", "Sali Vercellese", "Saluggia", "San Germano Vercellese", "Santhià", "Scopa", "Scopello", "Serravalle Sesia", "Stroppiana", "Tricerro", "Trino", "Tronzano Vercellese", "Valduggia", "Varallo", "Vercelli", "Villarboit", "Villata", "Vocca", "Alto Sermenza", "Cellio con Breia", "Affi", "Albaredo d'Adige", "Angiari", "Arcole", "Badia Calavena", "Bardolino", "Belfiore", "Bevilacqua", "Bonavigo", "Boschi Sant'Anna", "Bosco Chiesanuova", "Bovolone", "Brentino Belluno", "Brenzone sul Garda", "Bussolengo", "Buttapietra", "Caldiero", "Caprino Veronese", "Casaleone", "Castagnaro", "Castel d'Azzano", "Castelnuovo del Garda", "Cavaion Veronese", "Cazzano di Tramigna", "Cerea", "Cerro Veronese", "Cologna Veneta", "Colognola ai Colli", "Concamarise", "Costermano sul Garda", "Dolcè", "Erbè", "Erbezzo", "Ferrara di Monte Baldo", "Fumane", "Garda", "Gazzo Veronese", "Grezzana", "Illasi", "Isola della Scala", "Isola Rizza", "Lavagno", "Lazise", "Legnago", "Malcesine", "Marano di Valpolicella", "Mezzane di Sotto", "Minerbe", "Montecchia di Crosara", "Monteforte d'Alpone", "Mozzecane", "Negrar di Valpolicella", "Nogara", "Nogarole Rocca", "Oppeano", "Palù", "Pastrengo", "Pescantina", "Peschiera del Garda", "Povegliano Veronese", "Pressana", "Rivoli Veronese", "Roncà", "Ronco all'Adige", "Roverchiara", "Roveredo di Guà", "Roverè Veronese", "Salizzole", "San Bonifacio", "San Giovanni Ilarione", "San Giovanni Lupatoto", "Sanguinetto", "San Martino Buon Albergo", "San Mauro di Saline", "San Pietro di Morubio", "San Pietro in Cariano", "Sant'Ambrogio di Valpolicella", "Sant'Anna d'Alfaedo", "San Zeno di Montagna", "Selva di Progno", "Soave", "Sommacampagna", "Sona", "Sorgà", "Terrazzo", "Torri del Benaco", "Tregnago", "Trevenzuolo", "Valeggio sul Mincio", "Velo Veronese", "Verona", "Veronella", "Vestenanova", "Vigasio", "Villa Bartolomea", "Villafranca di Verona", "Zevio", "Zimella", "Acquaro", "Arena", "Briatico", "Brognaturo", "Capistrano", "Cessaniti", "Dasà", "Dinami", "Drapia", "Fabrizia", "Filadelfia", "Filandari", "Filogaso", "Francavilla Angitola", "Francica", "Gerocarne", "Ionadi", "Joppolo", "Limbadi", "Maierato", "Mileto", "Mongiana", "Monterosso Calabro", "Nardodipace", "Nicotera", "Parghelia", "Pizzo", "Pizzoni", "Polia", "Ricadi", "Rombiolo", "San Calogero", "San Costantino Calabro", "San Gregorio d'Ippona", "San Nicola da Crissa", "Sant'Onofrio", "Serra San Bruno", "Simbario", "Sorianello", "Soriano Calabro", "Spadola", "Spilinga", "Stefanaconi", "Tropea", "Vallelonga", "Vazzano", "Vibo Valentia", "Zaccanopoli", "Zambrone", "Zungri", "Agugliaro", "Albettone", "Alonte", "Altavilla Vicentina", "Altissimo", "Arcugnano", "Arsiero", "Arzignano", "Asiago", "Asigliano Veneto", "Bassano del Grappa", "Bolzano Vicentino", "Breganze", "Brendola", "Bressanvido", "Brogliano", "Caldogno", "Caltrano", "Calvene", "Camisano Vicentino", "Campiglia dei Berici", "Carrè", "Cartigliano", "Cassola", "Castegnero", "Castelgomberto", "Chiampo", "Chiuppano", "Cogollo del Cengio", "Cornedo Vicentino", "Costabissara", "Creazzo", "Crespadoro", "Dueville", "Enego", "Fara Vicentino", "Foza", "Gallio", "Gambellara", "Gambugliano", "Grisignano di Zocco", "Grumolo delle Abbadesse", "Isola Vicentina", "Laghi", "Lastebasse", "Longare", "Lonigo", "Lugo di Vicenza", "Malo", "Marano Vicentino", "Marostica", "Montebello Vicentino", "Montecchio Maggiore", "Montecchio Precalcino", "Monte di Malo", "Montegalda", "Montegaldella", "Monteviale", "Monticello Conte Otto", "Montorso Vicentino", "Mussolente", "Nanto", "Nogarole Vicentino", "Nove", "Noventa Vicentina", "Orgiano", "Pedemonte", "Pianezze", "Piovene Rocchette", "Pojana Maggiore", "Posina", "Pove del Grappa", "Pozzoleone", "Quinto Vicentino", "Recoaro Terme", "Roana", "Romano d'Ezzelino", "Rosà", "Rossano Veneto", "Rotzo", "Salcedo", "Sandrigo", "San Pietro Mussolino", "Santorso", "San Vito di Leguzzano", "Sarcedo", "Sarego", "Schiavon", "Schio", "Solagna", "Sossano", "Sovizzo", "Tezze sul Brenta", "Thiene", "Tonezza del Cimone", "Torrebelvicino", "Torri di Quartesolo", "Trissino", "Valdagno", "Valdastico", "Valli del Pasubio", "Velo d'Astico", "Vicenza", "Villaga", "Villaverla", "Zanè", "Zermeghedo", "Zovencedo", "Zugliano", "Val Liona", "Barbarano Mossano", "Valbrenta", "Colceresa", "Lusiana Conco", "Acquapendente", "Arlena di Castro", "Bagnoregio", "Barbarano Romano", "Bassano Romano", "Bassano in Teverina", "Blera", "Bolsena", "Bomarzo", "Calcata", "Canepina", "Canino", "Capodimonte", "Capranica", "Caprarola", "Carbognano", "Castel Sant'Elia", "Castiglione in Teverina", "Celleno", "Cellere", "Civita Castellana", "Civitella d'Agliano", "Corchiano", "Fabrica di Roma", "Faleria", "Farnese", "Gallese", "Gradoli", "Graffignano", "Grotte di Castro", "Ischia di Castro", "Latera", "Lubriano", "Marta", "Montalto di Castro", "Montefiascone", "Monte Romano", "Monterosi", "Nepi", "Onano", "Oriolo Romano", "Orte", "Piansano", "Proceno", "Ronciglione", "Villa San Giovanni in Tuscia", "San Lorenzo Nuovo", "Soriano nel Cimino", "Sutri", "Tarquinia", "Tessennano", "Tuscania", "Valentano", "Vallerano", "Vasanello", "Vejano", "Vetralla", "Vignanello", "Viterbo", "Vitorchiano" };

vector comuni = new vector { "#shAgrigento", "#shAlessandria della Rocca", "#shAragona", "#shBivona", "#shBurgio", "#shCalamonaci", "#shCaltabellotta", "#shCamastra", "#shCammarata", "#shCampobello di Licata", "#shCanicattì", "#shCasteltermini", "#shCastrofilippo", "#shCattolica Eraclea", "#shCianciana", "#shComitini", "#shFavara", "#shGrotte", "#shJoppolo Giancaxio", "#shLampedusa e Linosa", "#shLicata", "#shLucca Sicula", "#shMenfi", "#shMontallegro", "#shMontevago", "#shNaro", "#shPalma di Montechiaro", "#shPorto Empedocle", "#shRacalmuto", "#shRaffadali", "#shRavanusa", "#shRealmonte", "#shRibera", "#shSambuca di Sicilia", "#shSan Biagio Platani", "#shSan Giovanni Gemini", "#shSanta Elisabetta", "#shSanta Margherita di Belice", "#shSant'Angelo Muxaro", "#shSanto Stefano Quisquina", "#shSciacca", "#shSiculiana", "#shVillafranca Sicula", "#shAcqui Terme", "#shAlbera Ligure", "#shAlessandria", "#shAlfiano Natta", "#shAlice Bel Colle", "#shAltavilla Monferrato", "#shAlzano Scrivia", "#shArquata Scrivia", "#shAvolasca", "#shBalzola", "#shBasaluzzo", "#shBassignana", "#shBelforte Monferrato", "#shBergamasco", "#shBerzano di Tortona", "#shBistagno", "#shBorghetto di Borbera", "#shBorgoratto Alessandrino", "#shBorgo San Martino", "#shBosco Marengo", "#shBosio", "#shBozzole", "#shBrignano-Frascata", "#shCabella Ligure", "#shCamagna Monferrato", "#shCamino", "#shCantalupo Ligure", "#shCapriata d'Orba", "#shCarbonara Scrivia", "#shCarentino", "#shCarezzano", "#shCarpeneto", "#shCarrega Ligure", "#shCarrosio", "#shCartosio", "#shCasal Cermelli", "#shCasaleggio Boiro", "#shCasale Monferrato", "#shCasalnoceto", "#shCasasco", "#shCassine", "#shCassinelle", "#shCastellania Coppi", "#shCastellar Guidobono", "#shCastellazzo Bormida", "#shCastelletto d'Erro", "#shCastelletto d'Orba", "#shCastelletto Merli", "#shCastelletto Monferrato", "#shCastelnuovo Bormida", "#shCastelnuovo Scrivia", "#shCastelspina", "#shCavatore", "#shCella Monte", "#shCereseto", "#shCerreto Grue", "#shCerrina Monferrato", "#shConiolo", "#shConzano", "#shCosta Vescovato", "#shCremolino", "#shDenice", "#shDernice", "#shFabbrica Curone", "#shFelizzano", "#shFraconalto", "#shFrancavilla Bisio", "#shFrascaro", "#shFrassinello Monferrato", "#shFrassineto Po", "#shFresonara", "#shFrugarolo", "#shFubine Monferrato", "#shGabiano", "#shGamalero", "#shGarbagna", "#shGavi", "#shGiarole", "#shGremiasco", "#shGrognardo", "#shGrondona", "#shGuazzora", "#shIsola Sant'Antonio", "#shLerma", "#shMalvicino", "#shMasio", "#shMelazzo", "#shMerana", "#shMirabello Monferrato", "#shMolare", "#shMolino dei Torti", "#shMombello Monferrato", "#shMomperone", "#shMoncestino", "#shMongiardino Ligure", "#shMonleale", "#shMontacuto", "#shMontaldeo", "#shMontaldo Bormida", "#shMontecastello", "#shMontechiaro d'Acqui", "#shMontegioco", "#shMontemarzino", "#shMorano sul Po", "#shMorbello", "#shMornese", "#shMorsasco", "#shMurisengo", "#shNovi Ligure", "#shOccimiano", "#shOdalengo Grande", "#shOdalengo Piccolo", "#shOlivola", "#shOrsara Bormida", "#shOttiglio", "#shOvada", "#shOviglio", "#shOzzano Monferrato", "#shPaderna", "#shPareto", "#shParodi Ligure", "#shPasturana", "#shPecetto di Valenza", "#shPietra Marazzi", "#shPomaro Monferrato", "#shPontecurone", "#shPontestura", "#shPonti", "#shPonzano Monferrato", "#shPonzone", "#shPozzol Groppo", "#shPozzolo Formigaro", "#shPrasco", "#shPredosa", "#shQuargnento", "#shQuattordio", "#shRicaldone", "#shRivalta Bormida", "#shRivarone", "#shRoccaforte Ligure", "#shRocca Grimalda", "#shRocchetta Ligure", "#shRosignano Monferrato", "#shSala Monferrato", "#shSale", "#shSan Cristoforo", "#shSan Giorgio Monferrato", "#shSan Salvatore Monferrato", "#shSan Sebastiano Curone", "#shSant'Agata Fossili", "#shSardigliano", "#shSarezzano", "#shSerralunga di Crea", "#shSerravalle Scrivia", "#shSezzadio", "#shSilvano d'Orba", "#shSolero", "#shSolonghello", "#shSpigno Monferrato", "#shSpineto Scrivia", "#shStazzano", "#shStrevi", "#shTagliolo Monferrato", "#shTassarolo", "#shTerruggia", "#shTerzo", "#shTicineto", "#shTortona", "#shTreville", "#shTrisobbio", "#shValenza", "#shValmacca", "#shVignale Monferrato", "#shVignole Borbera", "#shViguzzolo", "#shVilladeati", "#shVillalvernia", "#shVillamiroglio", "#shVillanova Monferrato", "#shVillaromagnano", "#shVisone", "#shVolpedo", "#shVolpeglino", "#shVoltaggio", "#shCassano Spinola", "#shAlluvioni Piovera", "#shLu e Cuccaro Monferrato", "#shAgugliano", "#shAncona", "#shArcevia", "#shBarbara", "#shBelvedere Ostrense", "#shCamerano", "#shCamerata Picena", "#shCastelbellino", "#shCastelfidardo", "#shCastelleone di Suasa", "#shCastelplanio", "#shCerreto d'Esi", "#shChiaravalle", "#shCorinaldo", "#shCupramontana", "#shFabriano", "#shFalconara Marittima", "#shFilottrano", "#shGenga", "#shJesi", "#shLoreto", "#shMaiolati Spontini", "#shMergo", "#shMonsano", "#shMontecarotto", "#shMontemarciano", "#shMonte Roberto", "#shMonte San Vito", "#shMorro d'Alba", "#shNumana", "#shOffagna", "#shOsimo", "#shOstra", "#shOstra Vetere", "#shPoggio San Marcello", "#shPolverigi", "#shRosora", "#shSan Marcello", "#shSan Paolo di Jesi", "#shSanta Maria Nuova", "#shSassoferrato", "#shSenigallia", "#shSerra de' Conti", "#shSerra San Quirico", "#shSirolo", "#shStaffolo", "#shTrecastelli", "#shAnghiari", "#shArezzo", "#shBadia Tedalda", "#shBibbiena", "#shBucine", "#shCapolona", "#shCaprese Michelangelo", "#shCastel Focognano", "#shCastel San Niccolò", "#shCastiglion Fibocchi", "#shCastiglion Fiorentino", "#shCavriglia", "#shChitignano", "#shChiusi della Verna", "#shCivitella in Val di Chiana", "#shCortona", "#shFoiano della Chiana", "#shLoro Ciuffenna", "#shLucignano", "#shMarciano della Chiana", "#shMontemignaio", "#shMonterchi", "#shMonte San Savino", "#shMontevarchi", "#shOrtignano Raggiolo", "#shPieve Santo Stefano", "#shPoppi", "#shSan Giovanni Valdarno", "#shSansepolcro", "#shSestino", "#shSubbiano", "#shTalla", "#shTerranuova Bracciolini", "#shCastelfranco Piandiscò", "#shPratovecchio Stia", "#shLaterina Pergine Valdarno", "#shAcquasanta Terme", "#shAcquaviva Picena", "#shAppignano del Tronto", "#shArquata del Tronto", "#shAscoli Piceno", "#shCarassai", "#shCastel di Lama", "#shCastignano", "#shCastorano", "#shColli del Tronto", "#shComunanza", "#shCossignano", "#shCupra Marittima", "#shFolignano", "#shForce", "#shGrottammare", "#shMaltignano", "#shMassignano", "#shMonsampolo del Tronto", "#shMontalto delle Marche", "#shMontedinove", "#shMontefiore dell'Aso", "#shMontegallo", "#shMontemonaco", "#shMonteprandone", "#shOffida", "#shPaLMEano", "#shRipatransone", "#shRoccafluvione", "#shRotella", "#shSan Benedetto del Tronto", "#shSpinetoli", "#shVenarotta", "#shAgliano Terme", "#shAlbugnano", "#shAntignano", "#shAramengo", "#shAsti", "#shAzzano d'Asti", "#shBaldichieri d'Asti", "#shBelveglio", "#shBerzano di San Pietro", "#shBruno", "#shBubbio", "#shButtigliera d'Asti", "#shCalamandrana", "#shCalliano ", "#shCalosso", "#shCamerano Casasco", "#shCanelli", "#shCantarana", "#shCapriglio", "#shCasorzo", "#shCassinasco", "#shCastagnole delle Lanze", "#shCastagnole Monferrato", "#shCastel Boglione", "#shCastell'Alfero", "#shCastellero", "#shCastelletto Molina", "#shCastello di Annone", "#shCastelnuovo Belbo", "#shCastelnuovo Calcea", "#shCastelnuovo Don Bosco", "#shCastel Rocchero", "#shCellarengo", "#shCelle Enomondo", "#shCerreto d'Asti", "#shCerro Tanaro", "#shCessole", "#shChiusano d'Asti", "#shCinaglio", "#shCisterna d'Asti", "#shCoazzolo", "#shCocconato", "#shCorsione", "#shCortandone", "#shCortanze", "#shCortazzone", "#shCortiglione", "#shCossombrato", "#shCostigliole d'Asti", "#shCunico", "#shDusino San Michele", "#shFerrere", "#shFontanile", "#shFrinco", "#shGrana", "#shGrazzano Badoglio", "#shIncisa Scapaccino", "#shIsola d'Asti", "#shLoazzolo", "#shMaranzana", "#shMaretto", "#shMoasca", "#shMombaldone", "#shMombaruzzo", "#shMombercelli", "#shMonale", "#shMonastero Bormida", "#shMoncalvo", "#shMoncucco Torinese", "#shMongardino", "#shMontabone", "#shMontafia", "#shMontaldo Scarampi", "#shMontechiaro d'Asti", "#shMontegrosso d'Asti", "#shMontemagno", "#shMoransengo", "#shNizza Monferrato", "#shOlmo Gentile", "#shPasserano Marmorito", "#shPenango", "#shPiea", "#shPino d'Asti", "#shPiovà Massaia", "#shPortacomaro", "#shQuaranti", "#shRefrancore", "#shRevigliasco d'Asti", "#shRoatto", "#shRobella", "#shRocca d'Arazzo", "#shRoccaverano", "#shRocchetta Palafea", "#shRocchetta Tanaro", "#shSan Damiano d'Asti", "#shSan Giorgio Scarampi", "#shSan Martino Alfieri", "#shSan Marzano Oliveto", "#shSan Paolo Solbrito", "#shScurzolengo", "#shSerole", "#shSessame", "#shSettime", "#shSoglio", "#shTigliole", "#shTonco", "#shTonengo", "#shVaglio Serra", "#shValfenera", "#shVesime", "#shViale", "#shViarigi", "#shVigliano d'Asti", "#shVillafranca d'Asti", "#shVillanova d'Asti", "#shVilla San Secondo", "#shVinchio", "#shMontiglio Monferrato", "#shAiello del Sabato", "#shAltavilla Irpina", "#shAndretta", "#shAquilonia", "#shAriano Irpino", "#shAtripalda", "#shAvella", "#shAvellino", "#shBagnoli Irpino", "#shBaiano", "#shBisaccia", "#shBonito", "#shCairano", "#shCalabritto", "#shCalitri", "#shCandida", "#shCaposele", "#shCapriglia Irpina", "#shCarife", "#shCasalbore", "#shCassano Irpino", "#shCastel Baronia", "#shCastelfranci", "#shCastelvetere sul Calore", "#shCervinara", "#shCesinali", "#shChianche", "#shChiusano di San Domenico", "#shContrada", "#shConza della Campania", "#shDomicella", "#shFlumeri", "#shFontanarosa", "#shForino", "#shFrigento", "#shGesualdo", "#shGreci", "#shGrottaminarda", "#shGrottolella", "#shGuardia Lombardi", "#shLacedonia", "#shLapio", "#shLauro", "#shLioni", "#shLuogosano", "#shManocalzati", "#shMarzano di Nola", "#shMelito Irpino", "#shMercogliano", "#shMirabella Eclano", "#shMontaguto", "#shMontecalvo Irpino", "#shMontefalcione", "#shMonteforte Irpino", "#shMontefredane", "#shMontefusco", "#shMontella", "#shMontemarano", "#shMontemiletto", "#shMonteverde", "#shMorra De Sanctis", "#shMoschiano", "#shMugnano del Cardinale", "#shNusco", "#shOspedaletto d'Alpinolo", "#shPago del Vallo di Lauro", "#shParolise", "#shPaternopoli", "#shPetruro Irpino", "#shPietradefusi", "#shPietrastornina", "#shPrata di Principato Ultra", "#shPratola Serra", "#shQuadrelle", "#shQuindici", "#shRoccabascerana", "#shRocca San Felice", "#shRotondi", "#shSalza Irpina", "#shSan Mango sul Calore", "#shSan Martino Valle Caudina", "#shSan Michele di Serino", "#shSan Nicola Baronia", "#shSan Potito Ultra", "#shSan Sossio Baronia", "#shSanta Lucia di Serino", "#shSant'Andrea di Conza", "#shSant'Angelo all'Esca", "#shSant'Angelo a Scala", "#shSant'Angelo dei Lombardi", "#shSanta Paolina", "#shSanto Stefano del Sole", "#shSavignano Irpino", "#shScampitella", "#shSenerchia", "#shSerino", "#shSirignano", "#shSolofra", "#shSorbo Serpico", "#shSperone", "#shSturno", "#shSummonte", "#shTaurano", "#shTaurasi", "#shTeora", "#shTorella dei Lombardi", "#shTorre Le Nocelle", "#shTorrioni", "#shTrevico", "#shTufo", "#shVallata", "#shVallesaccarda", "#shVenticano", "#shVillamaina", "#shVillanova del Battista", "#shVolturara Irpina", "#shZungoli", "#shMontoro", "#shAcquaviva delle Fonti", "#shAdelfia", "#shAlberobello", "#shAltamura", "#shBari", "#shBinetto", "#shBitetto", "#shBitonto", "#shBitritto", "#shCapurso", "#shCasamassima", "#shCassano delle Murge", "#shCastellana Grotte", "#shCellamare", "#shConversano", "#shCorato", "#shGioia del Colle", "#shGiovinazzo", "#shGravina in Puglia", "#shGrumo Appula", "#shLocorotondo", "#shModugno", "#shMola di Bari", "#shMolfetta", "#shMonopoli", "#shNoci", "#shNoicattaro", "#shPalo del Colle", "#shPoggiorsini", "#shPolignano a Mare", "#shPutignano", "#shRutigliano", "#shRuvo di Puglia", "#shSammichele di Bari", "#shSannicandro di Bari", "#shSanteramo in Colle", "#shTerlizzi", "#shToritto", "#shTriggiano", "#shTuri", "#shValenzano", "#shAndria", "#shBarletta", "#shBisceglie", "#shCanosa di Puglia", "#shMargherita di Savoia", "#shMinervino Murge", "#shSan Ferdinando di Puglia", "#shSpinazzola", "#shTrani", "#shTrinitapoli", "#shAgordo", "#shAlano di Piave", "#shAlleghe", "#shArsiè", "#shAuronzo di Cadore", "#shBelluno", "#shBorca di Cadore", "#shCalalzo di Cadore", "#shCencenighe Agordino", "#shCesiomaggiore", "#shChies d'Alpago", "#shCibiana di Cadore", "#shColle Santa Lucia", "#shComelico Superiore", "#shCortina d'Ampezzo", "#shDanta di Cadore", "#shDomegge di Cadore", "#shFalcade", "#shFeltre", "#shFonzaso", "#shCanale d'Agordo", "#shGosaldo", "#shLamon", "#shLa Valle Agordina", "#shLimana", "#shLivinallongo del Col di Lana", "#shLorenzago di Cadore", "#shLozzo di Cadore", "#shOspitale di Cadore", "#shPedavena", "#shPerarolo di Cadore", "#shPieve di Cadore", "#shPonte nelle Alpi", "#shRivamonte Agordino", "#shRocca Pietore", "#shSan Gregorio nelle Alpi", "#shSan Nicolò di Comelico", "#shSan Pietro di Cadore", "#shSanta Giustina", "#shSan Tomaso Agordino", "#shSanto Stefano di Cadore", "#shSan Vito di Cadore", "#shSedico", "#shSelva di Cadore", "#shSeren del Grappa", "#shSospirolo", "#shSoverzene", "#shSovramonte", "#shTaibon Agordino", "#shTambre", "#shVallada Agordina", "#shValle di Cadore", "#shVigo di Cadore", "#shVodo Cadore", "#shVoltago Agordino", "#shZoppè di Cadore", "#shQuero Vas", "#shLongarone", "#shAlpago", "#shVal di Zoldo", "#shBorgo Valbelluna", "#shAirola", "#shAmorosi", "#shApice", "#shApollosa", "#shArpaia", "#shArpaise", "#shBaselice", "#shBenevento", "#shBonea", "#shBucciano", "#shBuonalbergo", "#shCalvi", "#shCampolattaro", "#shCampoli del Monte Taburno", "#shCasalduni", "#shCastelfranco in Miscano", "#shCastelpagano", "#shCastelpoto", "#shCastelvenere", "#shCastelvetere in Val Fortore", "#shCautano", "#shCeppaloni", "#shCerreto Sannita", "#shCircello", "#shColle Sannita", "#shCusano Mutri", "#shDugenta", "#shDurazzano", "#shFaicchio", "#shFoglianise", "#shFoiano di Val Fortore", "#shForchia", "#shFragneto l'Abate", "#shFragneto Monforte", "#shFrasso Telesino", "#shGinestra degli Schiavoni", "#shGuardia Sanframondi", "#shLimatola", "#shMelizzano", "#shMoiano", "#shMolinara", "#shMontefalcone di Val Fortore", "#shMontesarchio", "#shMorcone", "#shPaduli", "#shPago Veiano", "#shPannarano", "#shPaolisi", "#shPaupisi", "#shPesco Sannita", "#shPietraroja", "#shPietrelcina", "#shPonte", "#shPontelandolfo", "#shPuglianello", "#shReino", "#shSan Bartolomeo in Galdo", "#shSan Giorgio del Sannio", "#shSan Giorgio La Molara", "#shSan Leucio del Sannio", "#shSan Lorenzello", "#shSan Lorenzo Maggiore", "#shSan Lupo", "#shSan Marco dei Cavoti", "#shSan Martino Sannita", "#shSan Nazzaro", "#shSan Nicola Manfredi", "#shSan Salvatore Telesino", "#shSanta Croce del Sannio", "#shSant'Agata de' Goti", "#shSant'Angelo a Cupolo", "#shSassinoro", "#shSolopaca", "#shTelese Terme", "#shTocco Caudio", "#shTorrecuso", "#shVitulano", "#shSant'Arcangelo Trimonte", "#shAdrara San Martino", "#shAdrara San Rocco", "#shAlbano Sant'Alessandro", "#shAlbino", "#shAlmè", "#shAlmenno San Bartolomeo", "#shAlmenno San Salvatore", "#shAlzano Lombardo", "#shAmbivere", "#shAntegnate", "#shArcene", "#shArdesio", "#shArzago d'Adda", "#shAverara", "#shAviatico", "#shAzzano San Paolo", "#shAzzone", "#shBagnatica", "#shBarbata", "#shBariano", "#shBarzana", "#shBedulita", "#shBerbenno", "#shBergamo", "#shBerzo San Fermo", "#shBianzano", "#shBlello", "#shBolgare", "#shBoltiere", "#shBonate Sopra", "#shBonate Sotto", "#shBorgo di Terzo", "#shBossico", "#shBottanuco", "#shBracca", "#shBranzi", "#shBrembate", "#shBrembate di Sopra", "#shBrignano Gera d'Adda", "#shBrumano", "#shBrusaporto", "#shCalcinate", "#shCalcio", "#shCalusco d'Adda", "#shCalvenzano", "#shCamerata Cornello", "#shCanonica d'Adda", "#shCapizzone", "#shCapriate San Gervasio", "#shCaprino Bergamasco", "#shCaravaggio", "#shCarobbio degli Angeli", "#shCarona", "#shCarvico", "#shCasazza", "#shCasirate d'Adda", "#shCasnigo", "#shCassiglio", "#shCastelli Calepio", "#shCastel Rozzone", "#shCastione della Presolana", "#shCastro ", "#shCavernago", "#shCazzano Sant'Andrea", "#shCenate Sopra", "#shCenate Sotto", "#shCene", "#shCerete", "#shChignolo d'Isola", "#shChiuduno", "#shCisano Bergamasco", "#shCiserano", "#shCividate al Piano", "#shClusone", "#shColere", "#shCologno al Serio", "#shColzate", "#shComun Nuovo", "#shCorna Imagna", "#shCortenuova", "#shCosta di Mezzate", "#shCosta Valle Imagna", "#shCosta Volpino", "#shCovo", "#shCredaro", "#shCurno", "#shCusio", "#shDaLMEne", "#shDossena", "#shEndine Gaiano", "#shEntratico", "#shFara Gera d'Adda", "#shFara Olivana con Sola", "#shFilago", "#shFino del Monte", "#shFiorano al Serio", "#shFontanella", "#shFonteno", "#shFoppolo", "#shForesto Sparso", "#shFornovo San Giovanni", "#shFuipiano Valle Imagna", "#shGandellino", "#shGandino", "#shGandosso", "#shGaverina Terme", "#shGazzaniga", "#shGhisalba", "#shGorlago", "#shGorle", "#shGorno", "#shGrassobbio", "#shGromo", "#shGrone", "#shGrumello del Monte", "#shIsola di Fondra", "#shIsso", "#shLallio", "#shLeffe", "#shLenna", "#shLevate", "#shLocatello", "#shLovere", "#shLurano", "#shLuzzana", "#shMadone", "#shMapello", "#shMartinengo", "#shMezzoldo", "#shMisano di Gera d'Adda", "#shMoio de' Calvi", "#shMonasterolo del Castello", "#shMontello", "#shMorengo", "#shMornico al Serio", "#shMozzanica", "#shMozzo", "#shNembro", "#shOlmo al Brembo", "#shOltre il Colle", "#shOltressenda Alta", "#shOneta", "#shOnore", "#shOrio al Serio", "#shOrnica", "#shOsio Sopra", "#shOsio Sotto", "#shPagazzano", "#shPaladina", "#shPalazzago", "#shPalosco", "#shParre", "#shParzanica", "#shPedrengo", "#shPeia", "#shPianico", "#shPiario", "#shPiazza Brembana", "#shPiazzatorre", "#shPiazzolo", "#shPognano", "#shPonte Nossa", "#shPonteranica", "#shPonte San Pietro", "#shPontida", "#shPontirolo Nuovo", "#shPradalunga", "#shPredore", "#shPremolo", "#shPresezzo", "#shPumenengo", "#shRanica", "#shRanzanico", "#shRiva di Solto", "#shRogno", "#shRomano di Lombardia", "#shRoncobello", "#shRoncola", "#shRota d'Imagna", "#shRovetta", "#shSan Giovanni Bianco", "#shSan Paolo d'Argon", "#shSan Pellegrino Terme", "#shSanta Brigida", "#shSarnico", "#shScanzorosciate", "#shSchilpario", "#shSedrina", "#shSelvino", "#shSeriate", "#shSerina", "#shSolto Collina", "#shSongavazzo", "#shSorisole", "#shSotto il Monte Giovanni XXIII", "#shSovere", "#shSpinone al Lago", "#shSpirano", "#shStezzano", "#shStrozza", "#shSuisio", "#shTaleggio", "#shTavernola Bergamasca", "#shTelgate", "#shTerno d'Isola", "#shTorre Boldone", "#shTorre de' Busi", "#shTorre de' Roveri", "#shTorre Pallavicina", "#shTrescore Balneario", "#shTreviglio", "#shTreviolo", "#shUbiale Clanezzo", "#shUrgnano", "#shValbondione", "#shValbrembo", "#shValgoglio", "#shValleve", "#shValnegra", "#shValtorta", "#shVedeseta", "#shVerdellino", "#shVerdello", "#shVertova", "#shViadanica", "#shVigano San Martino", "#shVigolo", "#shVilla d'Adda", "#shVilla d'Almè", "#shVilla di Serio", "#shVilla d'Ogna", "#shVillongo", "#shViLMEnore di Scalve", "#shZandobbio", "#shZanica", "#shZogno", "#shCosta Serina", "#shAlgua", "#shCornalba", "#shMedolago", "#shSolza", "#shSant'Omobono Terme", "#shVal Brembilla", "#shAiloche", "#shAndorno Micca", "#shBenna", "#shBiella", "#shBioglio", "#shBorriana", "#shBrusnengo", "#shCallabiana", "#shCamandona", "#shCamburzano", "#shCandelo", "#shCaprile", "#shCasapinta", "#shCastelletto Cervo", "#shCavaglià", "#shCerrione", "#shCoggiola", "#shCossato", "#shCrevacuore", "#shCurino", "#shDonato", "#shDorzano", "#shGaglianico", "#shGifflenga", "#shGraglia", "#shMagnano", "#shMassazza", "#shMasserano", "#shMezzana Mortigliengo", "#shMiagliano", "#shMongrando", "#shMottalciata", "#shMuzzano", "#shNetro", "#shOcchieppo Inferiore", "#shOcchieppo Superiore", "#shPettinengo", "#shPiatto", "#shPiedicavallo", "#shPollone", "#shPonderano", "#shPortula", "#shPralungo", "#shPray", "#shRonco Biellese", "#shRoppolo", "#shRosazza", "#shSagliano Micca", "#shSala Biellese", "#shSalussola", "#shSandigliano", "#shSordevolo", "#shSostegno", "#shStrona", "#shTavigliano", "#shTernengo", "#shTollegno", "#shTorrazzo", "#shValdengo", "#shVallanzengo", "#shValle San Nicolao", "#shVeglio", "#shVerrone", "#shVigliano Biellese", "#shVilla del Bosco", "#shVillanova Biellese", "#shViverone", "#shZimone", "#shZubiena", "#shZumaglia", "#shLessona", "#shCampiglia Cervo", "#shQuaregna Cerreto", "#shValdilana", "#shAnzola dell'Emilia", "#shArgelato", "#shBaricella", "#shBentivoglio", "#shBologna", "#shBorgo Tossignano", "#shBudrio", "#shCalderara di Reno", "#shCamugnano", "#shCasalecchio di Reno", "#shCasalfiumanese", "#shCastel d'Aiano", "#shCastel del Rio", "#shCastel di Casio", "#shCastel Guelfo di Bologna", "#shCastello d'Argile", "#shCastel Maggiore", "#shCastel San Pietro Terme", "#shCastenaso", "#shCastiglione dei Pepoli", "#shCrevalcore", "#shDozza", "#shFontanelice", "#shGaggio Montano", "#shGalliera", "#shGranarolo dell'Emilia", "#shGrizzana Morandi", "#shImola", "#shLizzano in Belvedere", "#shLoiano", "#shMalalbergo", "#shMarzabotto", "#shMedicina", "#shMinerbio", "#shMolinella", "#shMonghidoro", "#shMonterenzio", "#shMonte San Pietro", "#shMonzuno", "#shMordano", "#shOzzano dell'Emilia", "#shPianoro", "#shPieve di Cento", "#shSala Bolognese", "#shSan Benedetto Val di Sambro", "#shSan Giorgio di Piano", "#shSan Giovanni in Persiceto", "#shSan Lazzaro di Savena", "#shSan Pietro in Casale", "#shSant'Agata Bolognese", "#shSasso Marconi", "#shVergato", "#shZola Predosa", "#shValsamoggia", "#shAlto Reno Terme", "#shAldino", "#shAndriano", "#shAnterivo", "#shAppiano sulla strada del vino", "#shAvelengo", "#shBadia", "#shBarbiano", "#shBolzano", "#shBraies", "#shBrennero", "#shBressanone", "#shBronzolo", "#shBrunico", "#shCaines", "#shCaldaro sulla strada del vino", "#shCampo di Trens", "#shCampo Tures", "#shCastelbello-Ciardes", "#shCastelrotto", "#shCermes", "#shChienes", "#shChiusa", "#shCornedo all'Isarco", "#shCortaccia sulla strada del vino", "#shCortina sulla strada del vino", "#shCorvara in Badia", "#shCuron Venosta", "#shDobbiaco", "#shEgna", "#shFalzes", "#shFiè allo Sciliar", "#shFortezza", "#shFunes", "#shGais", "#shGargazzone", "#shGlorenza", "#shLaces", "#shLagundo", "#shLaion", "#shLaives", "#shLana", "#shLasa", "#shLauregno", "#shLuson", "#shMagrè sulla strada del vino", "#shMalles Venosta", "#shMarebbe", "#shMarlengo", "#shMartello", "#shMeltina", "#shMerano", "#shMonguelfo-Tesido", "#shMontagna", "#shMoso in Passiria", "#shNalles", "#shNaturno", "#shNaz-Sciaves", "#shNova Levante", "#shNova Ponente", "#shOra", "#shOrtisei", "#shParcines", "#shPerca", "#shPlaus", "#shPonte Gardena", "#shPostal", "#shPrato allo Stelvio", "#shPredoi", "#shProves", "#shRacines", "#shRasun-Anterselva", "#shRenon", "#shRifiano", "#shRio di Pusteria", "#shRodengo", "#shSalorno sulla strada del vino", "#shSan Candido", "#shSan Genesio Atesino", "#shSan Leonardo in Passiria", "#shSan Lorenzo di Sebato", "#shSan Martino in Badia", "#shSan Martino in Passiria", "#shSan Pancrazio", "#shSanta Cristina Valgardena", "#shSarentino", "#shScena", "#shSelva dei Molini", "#shSelva di Val Gardena", "#shSenales", "#shSesto", "#shSilandro", "#shSluderno", "#shStelvio", "#shTerento", "#shTerlano", "#shTermeno sulla strada del vino", "#shTesimo", "#shTires", "#shTirolo", "#shTrodena nel parco naturale", "#shTubre", "#shUltimo", "#shVadena", "#shValdaora", "#shVal di Vizze", "#shValle Aurina", "#shValle di Casies", "#shVandoies", "#shVarna", "#shVerano", "#shVillabassa", "#shVillandro", "#shVipiteno", "#shVelturno", "#shLa Valle", "#shSenale-San Felice", "#shAcquafredda", "#shAdro", "#shAgnosine", "#shAlfianello", "#shAnfo", "#shAngolo Terme", "#shArtogne", "#shAzzano Mella", "#shBagnolo Mella", "#shBagolino", "#shBarbariga", "#shBarghe", "#shBassano Bresciano", "#shBedizzole", "#shBerlingo", "#shBerzo Demo", "#shBerzo Inferiore", "#shBienno", "#shBione", "#shBorgo San Giacomo", "#shBorgosatollo", "#shBorno", "#shBotticino", "#shBovegno", "#shBovezzo", "#shBrandico", "#shBraone", "#shBreno", "#shBrescia", "#shBrione", "#shCaino", "#shCalcinato", "#shCalvagese della Riviera", "#shCalvisano", "#shCapo di Ponte", "#shCapovalle", "#shCapriano del Colle", "#shCapriolo", "#shCarpenedolo", "#shCastegnato", "#shCastelcovati", "#shCastel Mella", "#shCastenedolo", "#shCasto", "#shCastrezzato", "#shCazzago San Martino", "#shCedegolo", "#shCellatica", "#shCerveno", "#shCeto", "#shCevo", "#shChiari", "#shCigole", "#shCimbergo", "#shCividate Camuno", "#shCoccaglio", "#shCollebeato", "#shCollio", "#shCologne", "#shComezzano-Cizzago", "#shConcesio", "#shCorte Franca", "#shCorteno Golgi", "#shCorzano", "#shDarfo Boario Terme", "#shDello", "#shDesenzano del Garda", "#shEdolo", "#shErbusco", "#shEsine", "#shFiesse", "#shFlero", "#shGambara", "#shGardone Riviera", "#shGardone Val Trompia", "#shGargnano", "#shGavardo", "#shGhedi", "#shGianico", "#shGottolengo", "#shGussago", "#shIdro", "#shIncudine", "#shIrma", "#shIseo", "#shIsorella", "#shLavenone", "#shLeno", "#shLimone sul Garda", "#shLodrino", "#shLograto", "#shLonato del Garda", "#shLonghena", "#shLosine", "#shLozio", "#shLumezzane", "#shMaclodio", "#shMagasa", "#shMairano", "#shMalegno", "#shMalonno", "#shManerba del Garda", "#shManerbio", "#shMarcheno", "#shMarmentino", "#shMarone", "#shMazzano", "#shMilzano", "#shMoniga del Garda", "#shMonno", "#shMonte Isola", "#shMonticelli Brusati", "#shMontichiari", "#shMontirone", "#shMura", "#shMuscoline", "#shNave", "#shNiardo", "#shNuvolento", "#shNuvolera", "#shOdolo", "#shOfflaga", "#shOme", "#shOno San Pietro", "#shOrzinuovi", "#shOrzivecchi", "#shOspitaletto", "#shOssimo", "#shPadenghe sul Garda", "#shPaderno Franciacorta", "#shPaisco Loveno", "#shPaitone", "#shPalazzolo sull'Oglio", "#shParatico", "#shPaspardo", "#shPassirano", "#shPavone del Mella", "#shSan Paolo", "#shPertica Alta", "#shPertica Bassa", "#shPezzaze", "#shPian Camuno", "#shPisogne", "#shPolaveno", "#shPolpenazze del Garda", "#shPompiano", "#shPoncarale", "#shPonte di Legno", "#shPontevico", "#shPontoglio", "#shPozzolengo", "#shPralboino", "#shPreseglie", "#shPrevalle", "#shProvaglio d'Iseo", "#shProvaglio Val Sabbia", "#shPuegnago del Garda", "#shQuinzano d'Oglio", "#shRemedello", "#shRezzato", "#shRoccafranca", "#shRodengo Saiano", "#shRoè Volciano", "#shRoncadelle", "#shRovato", "#shRudiano", "#shSabbio Chiese", "#shSale Marasino", "#shSalò", "#shSan Felice del Benaco", "#shSan Gervasio Bresciano", "#shSan Zeno Naviglio", "#shSarezzo", "#shSaviore dell'Adamello", "#shSellero", "#shSeniga", "#shSerle", "#shSirmione", "#shSoiano del Lago", "#shSonico", "#shSulzano", "#shTavernole sul Mella", "#shTemù", "#shTignale", "#shTorbole Casaglia", "#shToscolano-Maderno", "#shTravagliato", "#shTremosine sul Garda", "#shTrenzano", "#shTreviso Bresciano", "#shUrago d'Oglio", "#shVallio Terme", "#shValvestino", "#shVerolanuova", "#shVerolavecchia", "#shVestone", "#shVezza d'Oglio", "#shVilla Carcina", "#shVillachiara", "#shVillanuova sul Clisi", "#shVione", "#shVisano", "#shVobarno", "#shZone", "#shPiancogno", "#shBrindisi", "#shCarovigno", "#shCeglie Messapica", "#shCellino San Marco", "#shCisternino", "#shErchie", "#shFasano", "#shFrancavilla Fontana", "#shLatiano", "#shMesagne", "#shOria", "#shOstuni", "#shSan Donaci", "#shSan Michele Salentino", "#shSan Pancrazio Salentino", "#shSan Pietro Vernotico", "#shSan Vito dei Normanni", "#shTorchiarolo", "#shTorre Santa Susanna", "#shVilla Castelli", "#shAssemini", "#shCagliari", "#shCapoterra", "#shDecimomannu", "#shMaracalagonis", "#shPula", "#shQuartu Sant'Elena", "#shSarroch", "#shSelargius", "#shSestu", "#shSettimo San Pietro", "#shSinnai", "#shUta", "#shVilla San Pietro", "#shQuartucciu", "#shElmas", "#shMonserrato", "#shAcquaviva Platani", "#shBompensiere", "#shButera", "#shCaltanissetta", "#shCampofranco", "#shDelia", "#shGela", "#shMarianopoli", "#shMazzarino", "#shMilena", "#shMontedoro", "#shMussomeli", "#shNiscemi", "#shResuttano", "#shRiesi", "#shSan Cataldo", "#shSanta Caterina Villarmosa", "#shSerradifalco", "#shSommatino", "#shSutera", "#shVallelunga Pratameno", "#shVillalba", "#shAcquaviva Collecroce", "#shBaranello", "#shBojano", "#shBonefro", "#shBusso", "#shCampobasso", "#shCampochiaro", "#shCampodipietra", "#shCampolieto", "#shCampomarino", "#shCasacalenda", "#shCasalciprano", "#shCastelbottaccio", "#shCastellino del Biferno", "#shCastelmauro", "#shCastropignano", "#shCercemaggiore", "#shCercepiccola", "#shCivitacampomarano", "#shColle d'Anchise", "#shColletorto", "#shDuronia", "#shFerrazzano", "#shFossalto", "#shGambatesa", "#shGildone", "#shGuardialfiera", "#shGuardiaregia", "#shGuglionesi", "#shJelsi", "#shLarino", "#shLimosano", "#shLucito", "#shLupara", "#shMacchia Valfortore", "#shMafalda", "#shMatrice", "#shMirabello Sannitico", "#shMolise", "#shMonacilioni", "#shMontagano", "#shMontecilfone", "#shMontefalcone nel Sannio", "#shMontelongo", "#shMontemitro", "#shMontenero di Bisaccia", "#shMontorio nei Frentani", "#shMorrone del Sannio", "#shOratino", "#shPalata", "#shPetacciato", "#shPetrella Tifernina", "#shPietracatella", "#shPietracupa", "#shPortocannone", "#shProvvidenti", "#shRiccia", "#shRipabottoni", "#shRipalimosani", "#shRoccavivara", "#shRotello", "#shSalcito", "#shSan Biase", "#shSan Felice del Molise", "#shSan Giacomo degli Schiavoni", "#shSan Giovanni in Galdo", "#shSan Giuliano del Sannio", "#shSan Giuliano di Puglia", "#shSan Martino in Pensilis", "#shSan Massimo", "#shSan Polo Matese", "#shSanta Croce di Magliano", "#shSant'Angelo Limosano", "#shSant'Elia a Pianisi", "#shSepino", "#shSpinete", "#shTavenna", "#shTermoli", "#shTorella del Sannio", "#shToro", "#shTrivento", "#shTufara", "#shUruri", "#shVinchiaturo", "#shAilano", "#shAlife", "#shAlvignano", "#shArienzo", "#shAversa", "#shBaia e Latina", "#shBellona", "#shCaianello", "#shCaiazzo", "#shCalvi Risorta", "#shCamigliano", "#shCancello ed Arnone", "#shCapodrise", "#shCapriati a Volturno", "#shCapua", "#shCarinaro", "#shCarinola", "#shCasagiove", "#shCasal di Principe", "#shCasaluce", "#shCasapulla", "#shCaserta", "#shCastel Campagnano", "#shCastel di Sasso", "#shCastello del Matese", "#shCastel Morrone", "#shCastel Volturno", "#shCervino", "#shCesa", "#shCiorlano", "#shConca della Campania", "#shCurti", "#shDragoni", "#shFontegreca", "#shFormicola", "#shFrancolise", "#shFrignano", "#shGallo Matese", "#shGalluccio", "#shGiano Vetusto", "#shGioia Sannitica", "#shGrazzanise", "#shGricignano di Aversa", "#shLetino", "#shLiberi", "#shLusciano", "#shMacerata Campania", "#shMaddaloni", "#shMarcianise", "#shMarzano Appio", "#shMignano Monte Lungo", "#shMondragone", "#shOrta di Atella", "#shParete", "#shPastorano", "#shPiana di Monte Verna", "#shPiedimonte Matese", "#shPietramelara", "#shPietravairano", "#shPignataro Maggiore", "#shPontelatone", "#shPortico di Caserta", "#shPrata Sannita", "#shPratella", "#shPresenzano", "#shRaviscanina", "#shRecale", "#shRiardo", "#shRocca d'Evandro", "#shRoccamonfina", "#shRoccaromana", "#shRocchetta e Croce", "#shRuviano", "#shSan Cipriano d'Aversa", "#shSan Felice a Cancello", "#shSan Gregorio Matese", "#shSan Marcellino", "#shSan Nicola la Strada", "#shSan Pietro Infine", "#shSan Potito Sannitico", "#shSan Prisco", "#shSanta Maria a Vico", "#shSanta Maria Capua Vetere", "#shSanta Maria la Fossa", "#shSan Tammaro", "#shSant'Angelo d'Alife", "#shSant'Arpino", "#shSessa Aurunca", "#shSparanise", "#shSuccivo", "#shTeano", "#shTeverola", "#shTora e Piccilli", "#shTrentola Ducenta", "#shVairano Patenora", "#shValle Agricola", "#shValle di Maddaloni", "#shVilla di Briano", "#shVilla Literno", "#shVitulazio", "#shFalciano del Massico", "#shCellole", "#shCasapesenna", "#shSan Marco Evangelista", "#shAci Bonaccorsi", "#shAci Castello", "#shAci Catena", "#shAcireale", "#shAci Sant'Antonio", "#shAdrano", "#shBelpasso", "#shBiancavilla", "#shBronte", "#shCalatabiano", "#shCaltagirone", "#shCamporotondo Etneo", "#shCastel di Iudica", "#shCastiglione di Sicilia", "#shCatania", "#shFiumefreddo di Sicilia", "#shGiarre", "#shGrammichele", "#shGravina di Catania", "#shLicodia Eubea", "#shLinguaglossa", "#shMaletto", "#shMascali", "#shMascalucia", "#shMilitello in Val di Catania", "#shMilo", "#shMineo", "#shMirabella Imbaccari", "#shMisterbianco", "#shMotta Sant'Anastasia", "#shNicolosi", "#shPalagonia", "#shPaternò", "#shPedara", "#shPiedimonte Etneo", "#shRaddusa", "#shRamacca", "#shRandazzo", "#shRiposto", "#shSan Cono", "#shSan Giovanni la Punta", "#shSan Gregorio di Catania", "#shSan Michele di Ganzaria", "#shSan Pietro Clarenza", "#shSant'Agata li Battiati", "#shSant'Alfio", "#shSanta Maria di Licodia", "#shSanta Venerina", "#shScordia", "#shTrecastagni", "#shTremestieri Etneo", "#shValverde", "#shViagrande", "#shVizzini", "#shZafferana Etnea", "#shMazzarrone", "#shManiace", "#shRagalna", "#shAlbi", "#shAmaroni", "#shAmato", "#shAndali", "#shArgusto", "#shBadolato", "#shBelcastro", "#shBorgia", "#shBotricello", "#shCaraffa di Catanzaro", "#shCardinale", "#shCarlopoli", "#shCatanzaro", "#shCenadi", "#shCentrache", "#shCerva", "#shChiaravalle Centrale", "#shCicala", "#shConflenti", "#shCortale", "#shCropani", "#shCuringa", "#shDavoli", "#shDecollatura", "#shFalerna", "#shFeroleto Antico", "#shFossato Serralta", "#shGagliato", "#shGasperina", "#shGimigliano", "#shGirifalco", "#shGizzeria", "#shGuardavalle", "#shIsca sullo Ionio", "#shJacurso", "#shMagisano", "#shMaida", "#shMarcedusa", "#shMarcellinara", "#shMartirano", "#shMartirano Lombardo", "#shMiglierina", "#shMontauro", "#shMontepaone", "#shMotta Santa Lucia", "#shNocera Terinese", "#shOlivadi", "#shPalermiti", "#shPentone", "#shPetrizzi", "#shPetronà", "#shPianopoli", "#shPlatania", "#shSan Floro", "#shSan Mango d'Aquino", "#shSan Pietro a Maida", "#shSan Pietro Apostolo", "#shSan Sostene", "#shSanta Caterina dello Ionio", "#shSant'Andrea Apostolo dello Ionio", "#shSan Vito sullo Ionio", "#shSatriano", "#shSellia", "#shSellia Marina", "#shSerrastretta", "#shSersale", "#shSettingiano", "#shSimeri Crichi", "#shSorbo San Basile", "#shSoverato", "#shSoveria Mannelli", "#shSoveria Simeri", "#shSquillace", "#shStalettì", "#shTaverna", "#shTiriolo", "#shTorre di Ruggiero", "#shVallefiorita", "#shZagarise", "#shLamezia Terme", "#shAltino", "#shArchi", "#shAri", "#shArielli", "#shAtessa", "#shBomba", "#shBorrello", "#shBucchianico", "#shMontebello sul Sangro", "#shCanosa Sannita", "#shCarpineto Sinello", "#shCarunchio", "#shCasacanditella", "#shCasalanguida", "#shCasalbordino", "#shCasalincontrada", "#shCasoli", "#shCastel Frentano", "#shCastelguidone", "#shCastiglione Messer Marino", "#shCelenza sul Trigno", "#shChieti", "#shCivitaluparella", "#shCivitella Messer Raimondo", "#shColledimacine", "#shColledimezzo", "#shCrecchio", "#shCupello", "#shDogliola", "#shFara Filiorum Petri", "#shFara San Martino", "#shFiletto", "#shFossacesia", "#shFraine", "#shFrancavilla al Mare", "#shFresagrandinaria", "#shFrisa", "#shFurci", "#shGamberale", "#shGessopalena", "#shGissi", "#shGiuliano Teatino", "#shGuardiagrele", "#shGuiLME", "#shLama dei Peligni", "#shLanciano", "#shLentella", "#shLettopalena", "#shLiscia", "#shMiglianico", "#shMontazzoli", "#shMonteferrante", "#shMontelapiano", "#shMontenerodomo", "#shMonteodorisio", "#shMozzagrogna", "#shOrsogna", "#shOrtona", "#shPaglieta", "#shPalena", "#shPalmoli", "#shPalombaro", "#shPennadomo", "#shPennapiedimonte", "#shPerano", "#shPizzoferrato", "#shPoggiofiorito", "#shPollutri", "#shPretoro", "#shQuadri", "#shRapino", "#shRipa Teatina", "#shRoccamontepiano", "#shRocca San Giovanni", "#shRoccascalegna", "#shRoccaspinalveti", "#shRoio del Sangro", "#shRosello", "#shSan Buono", "#shSan Giovanni Lipioni", "#shSan Giovanni Teatino", "#shSan Martino sulla Marrucina", "#shSan Salvo", "#shSanta Maria Imbaro", "#shSant'Eusanio del Sangro", "#shSan Vito Chietino", "#shScerni", "#shSchiavi di Abruzzo", "#shTaranta Peligna", "#shTollo", "#shTorino di Sangro", "#shTornareccio", "#shTorrebruna", "#shTorrevecchia Teatina", "#shTorricella Peligna", "#shTreglio", "#shTufillo", "#shVacri", "#shVasto", "#shVillalfonsina", "#shVillamagna", "#shVilla Santa Maria", "#shPietraferrazzana", "#shFallo", "#shAlbavilla", "#shAlbese con Cassano", "#shAlbiolo", "#shAlserio", "#shAlzate Brianza", "#shAnzano del Parco", "#shAppiano Gentile", "#shArgegno", "#shArosio", "#shAsso", "#shBarni", "#shBene Lario", "#shBeregazzo con Figliaro", "#shBinago", "#shBizzarone", "#shBlessagno", "#shBlevio", "#shBregnano", "#shBrenna", "#shBrienno", "#shBrunate", "#shBulgarograsso", "#shCabiate", "#shCadorago", "#shCaglio", "#shCampione d'Italia", "#shCantù", "#shCanzo", "#shCapiago Intimiano", "#shCarate Urio", "#shCarbonate", "#shCarimate", "#shCarlazzo", "#shCarugo", "#shCaslino d'Erba", "#shCasnate con Bernate", "#shCassina Rizzardi", "#shCastelmarte", "#shCastelnuovo Bozzente", "#shCavargna", "#shCerano d'Intelvi", "#shCermenate", "#shCernobbio", "#shCirimido", "#shClaino con Osteno", "#shColonno", "#shComo", "#shCorrido", "#shCremia", "#shCucciago", "#shCusino", "#shDizzasco", "#shDomaso", "#shDongo", "#shDosso del Liro", "#shErba", "#shEupilio", "#shFaggeto Lario", "#shFaloppio", "#shFenegrò", "#shFigino Serenza", "#shFino Mornasco", "#shGarzeno", "#shGera Lario", "#shGrandate", "#shGrandola ed Uniti", "#shGriante", "#shGuanzate", "#shInverigo", "#shLaglio", "#shLaino", "#shLambrugo", "#shLasnigo", "#shLezzeno", "#shLimido Comasco", "#shLipomo", "#shLivo ", "#shLocate Varesino", "#shLomazzo", "#shLongone al Segrino", "#shLuisago", "#shLurago d'Erba", "#shLurago Marinone", "#shLurate Caccivio", "#shMagreglio", "#shMariano Comense", "#shMaslianico", "#shMenaggio", "#shMerone", "#shMoltrasio", "#shMonguzzo", "#shMontano Lucino", "#shMontemezzo", "#shMontorfano", "#shMozzate", "#shMusso", "#shNesso", "#shNovedrate", "#shOlgiate Comasco", "#shOltrona di San Mamette", "#shOrsenigo", "#shPeglio ", "#shPianello del Lario", "#shPigra", "#shPlesio", "#shPognana Lario", "#shPonna", "#shPonte Lambro", "#shPorlezza", "#shProserpio", "#shPusiano", "#shRezzago", "#shRodero", "#shRonago", "#shRovellasca", "#shRovello Porro", "#shSala Comacina", "#shSan Bartolomeo Val Cavargna", "#shSan Fermo della Battaglia", "#shSan Nazzaro Val Cavargna", "#shSchignano", "#shSenna Comasco", "#shSorico", "#shSormano", "#shStazzona", "#shTavernerio", "#shTorno", "#shTrezzone", "#shTurate", "#shUggiate-Trevano", "#shValbrona", "#shValmorea", "#shVal Rezzo", "#shValsolda", "#shVeleso", "#shVeniano", "#shVercana", "#shVertemate con Minoprio", "#shVilla Guardia", "#shZelbio", "#shSan Siro", "#shGravedona ed Uniti", "#shBellagio", "#shColverde", "#shTremezzina", "#shAlta Valle Intelvi", "#shCentro Valle Intelvi", "#shSolbiate con Cagno", "#shAcquaformosa", "#shAcquappesa", "#shAcri", "#shAiello Calabro", "#shAieta", "#shAlbidona", "#shAlessandria del Carretto", "#shAltilia", "#shAltomonte", "#shAmantea", "#shAmendolara", "#shAprigliano", "#shBelmonte Calabro", "#shBelsito", "#shBelvedere Marittimo", "#shBianchi", "#shBisignano", "#shBocchigliero", "#shBonifati", "#shBuonvicino", "#shCalopezzati", "#shCaloveto", "#shCampana", "#shCanna", "#shCariati", "#shCarolei", "#shCarpanzano", "#shCassano all'Ionio", "#shCastiglione Cosentino", "#shCastrolibero", "#shCastroregio", "#shCastrovillari", "#shCelico", "#shCellara", "#shCerchiara di Calabria", "#shCerisano", "#shCervicati", "#shCerzeto", "#shCetraro", "#shCivita", "#shCleto", "#shColosimi", "#shCosenza", "#shCropalati", "#shCrosia", "#shDiamante", "#shDipignano", "#shDomanico", "#shFagnano Castello", "#shFalconara Albanese", "#shFigline Vegliaturo", "#shFirmo", "#shFiumefreddo Bruzio", "#shFrancavilla Marittima", "#shFrascineto", "#shFuscaldo", "#shGrimaldi", "#shGrisolia", "#shGuardia Piemontese", "#shLago", "#shLaino Borgo", "#shLaino Castello", "#shLappano", "#shLattarico", "#shLongobardi", "#shLongobucco", "#shLungro", "#shLuzzi", "#shMaierà", "#shMalito", "#shMalvito", "#shMandatoriccio", "#shMangone", "#shMarano Marchesato", "#shMarano Principato", "#shMarzi", "#shMendicino", "#shMongrassano", "#shMontalto Uffugo", "#shMontegiordano", "#shMorano Calabro", "#shMormanno", "#shMottafollone", "#shNocara", "#shOriolo", "#shOrsomarso", "#shPaludi", "#shPanettieri", "#shPaola", "#shPapasidero", "#shParenti", "#shPaterno Calabro", "#shPedivigliano", "#shPiane Crati", "#shPietrafitta", "#shPietrapaola", "#shPlataci", "#shPraia a Mare", "#shRende", "#shRocca Imperiale", "#shRoggiano Gravina", "#shRogliano", "#shRose", "#shRoseto Capo Spulico", "#shRota Greca", "#shRovito", "#shSan Basile", "#shSan Benedetto Ullano", "#shSan Cosmo Albanese", "#shSan Demetrio Corone", "#shSan Donato di Ninea", "#shSan Fili", "#shSangineto", "#shSan Giorgio Albanese", "#shSan Giovanni in Fiore", "#shSan Lorenzo Bellizzi", "#shSan Lorenzo del Vallo", "#shSan Lucido", "#shSan Marco Argentano", "#shSan Martino di Finita", "#shSan Nicola Arcella", "#shSan Pietro in Amantea", "#shSan Pietro in Guarano", "#shSan Sosti", "#shSanta Caterina Albanese", "#shSanta Domenica Talao", "#shSant'Agata di Esaro", "#shSanta Maria del Cedro", "#shSanta Sofia d'Epiro", "#shSanto Stefano di Rogliano", "#shSan Vincenzo La Costa", "#shSaracena", "#shScala Coeli", "#shScalea", "#shScigliano", "#shSerra d'Aiello", "#shSpezzano Albanese", "#shSpezzano della Sila", "#shTarsia", "#shTerranova da Sibari", "#shTerravecchia", "#shTorano Castello", "#shTortora", "#shTrebisacce", "#shVaccarizzo Albanese", "#shVerbicaro", "#shVillapiana", "#shZumpano", "#shCasali del Manco", "#shCorigliano-Rossano", "#shAcquanegra Cremonese", "#shAgnadello", "#shAnnicco", "#shAzzanello", "#shBagnolo Cremasco", "#shBonemerse", "#shBordolano", "#shCalvatone", "#shCamisano", "#shCampagnola Cremasca", "#shCapergnanica", "#shCappella Cantone", "#shCappella de' Picenardi", "#shCapralba", "#shCasalbuttano ed Uniti", "#shCasale Cremasco-Vidolasco", "#shCasaletto Ceredano", "#shCasaletto di Sopra", "#shCasaletto Vaprio", "#shCasalmaggiore", "#shCasalmorano", "#shCasteldidone", "#shCastel Gabbiano", "#shCastelleone", "#shCastelverde", "#shCastelvisconti", "#shCella Dati", "#shChieve", "#shCicognolo", "#shCingia de' Botti", "#shCorte de' Cortesi con Cignone", "#shCorte de' Frati", "#shCredera Rubbiano", "#shCrema", "#shCremona", "#shCremosano", "#shCrotta d'Adda", "#shCumignano sul Naviglio", "#shDerovere", "#shDovera", "#shFiesco", "#shFormigara", "#shGabbioneta-Binanuova", "#shGadesco-Pieve Delmona", "#shGenivolta", "#shGerre de' Caprioli", "#shGombito", "#shGrontardo", "#shGrumello Cremonese ed Uniti", "#shGussola", "#shIsola Dovarese", "#shIzano", "#shMadignano", "#shMalagnino", "#shMartignana di Po", "#shMonte Cremasco", "#shMontodine", "#shMoscazzano", "#shMotta Baluffi", "#shOffanengo", "#shOlmeneta", "#shOstiano", "#shPaderno Ponchielli", "#shPalazzo Pignano", "#shPandino", "#shPersico Dosimo", "#shPescarolo ed Uniti", "#shPessina Cremonese", "#shPianengo", "#shPieranica", "#shPieve d'OLME", "#shPieve San Giacomo", "#shPizzighettone", "#shPozzaglio ed Uniti", "#shQuintano", "#shRicengo", "#shRipalta Arpina", "#shRipalta Cremasca", "#shRipalta Guerina", "#shRivarolo del Re ed Uniti", "#shRivolta d'Adda", "#shRobecco d'Oglio", "#shRomanengo", "#shSalvirola", "#shSan Bassano", "#shSan Daniele Po", "#shSan Giovanni in Croce", "#shSan Martino del Lago", "#shScandolara Ravara", "#shScandolara Ripa d'Oglio", "#shSergnano", "#shSesto ed Uniti", "#shSolarolo Rainerio", "#shSoncino", "#shSoresina", "#shSospiro", "#shSpinadesco", "#shSpineda", "#shSpino d'Adda", "#shStagno Lombardo", "#shTicengo", "#shTorlino Vimercati", "#shTornata", "#shTorre de' Picenardi", "#shTorricella del Pizzo", "#shTrescore Cremasco", "#shTrigolo", "#shVaiano Cremasco", "#shVailate", "#shVescovato", "#shVolongo", "#shVoltido", "#shPiadena Drizzona", "#shBelvedere di Spinello", "#shCaccuri", "#shCarfizzi", "#shCasabona", "#shCastelsilano", "#shCerenzia", "#shCirò", "#shCirò Marina", "#shCotronei", "#shCrotone", "#shCrucoli", "#shCutro", "#shIsola di Capo Rizzuto", "#shMelissa", "#shMesoraca", "#shPallagorio", "#shPetilia Policastro", "#shRoccabernarda", "#shRocca di Neto", "#shSan Mauro Marchesato", "#shSan Nicola dell'Alto", "#shSanta Severina", "#shSavelli", "#shScandale", "#shStrongoli", "#shUmbriatico", "#shVerzino", "#shAcceglio", "#shAisone", "#shAlba", "#shAlbaretto della Torre", "#shAlto", "#shArgentera", "#shArguello", "#shBagnasco", "#shBagnolo Piemonte", "#shBaldissero d'Alba", "#shBarbaresco", "#shBarge", "#shBarolo", "#shBastia Mondovì", "#shBattifollo", "#shBeinette", "#shBellino", "#shBelvedere Langhe", "#shBene Vagienna", "#shBenevello", "#shBergolo", "#shBernezzo", "#shBonvicino", "#shBorgomale", "#shBorgo San Dalmazzo", "#shBosia", "#shBossolasco", "#shBoves", "#shBra", "#shBriaglia", "#shBriga Alta", "#shBrondello", "#shBrossasco", "#shBusca", "#shCamerana", "#shCanale", "#shCanosio", "#shCaprauna", "#shCaraglio", "#shCaramagna Piemonte", "#shCardè", "#shCarrù", "#shCartignano", "#shCasalgrasso", "#shCastagnito", "#shCasteldelfino", "#shCastelletto Stura", "#shCastelletto Uzzone", "#shCastellinaldo d'Alba", "#shCastellino Tanaro", "#shCastelmagno", "#shCastelnuovo di Ceva", "#shCastiglione Falletto", "#shCastiglione Tinella", "#shCastino", "#shCavallerleone", "#shCavallermaggiore", "#shCelle di Macra", "#shCentallo", "#shCeresole Alba", "#shCerretto Langhe", "#shCervasca", "#shCervere", "#shCeva", "#shCherasco", "#shChiusa di Pesio", "#shCigliè", "#shCissone", "#shClavesana", "#shCorneliano d'Alba", "#shCortemilia", "#shCossano Belbo", "#shCostigliole Saluzzo", "#shCravanzana", "#shCrissolo", "#shCuneo", "#shDemonte", "#shDiano d'Alba", "#shDogliani", "#shDronero", "#shElva", "#shEntracque", "#shEnvie", "#shFarigliano", "#shFaule", "#shFeisoglio", "#shFossano", "#shFrabosa Soprana", "#shFrabosa Sottana", "#shFrassino", "#shGaiola", "#shGambasca", "#shGaressio", "#shGenola", "#shGorzegno", "#shGottasecca", "#shGovone", "#shGrinzane Cavour", "#shGuarene", "#shIgliano", "#shIsasca", "#shLagnasco", "#shLa Morra", "#shLequio Berria", "#shLequio Tanaro", "#shLesegno", "#shLevice", "#shLimone Piemonte", "#shLisio", "#shMacra", "#shMagliano Alfieri", "#shMagliano Alpi", "#shMango", "#shManta", "#shMarene", "#shMargarita", "#shMarmora", "#shMarsaglia", "#shMartiniana Po", "#shMelle", "#shMoiola", "#shMombarcaro", "#shMombasiglio", "#shMonastero di Vasco", "#shMonasterolo Casotto", "#shMonasterolo di Savigliano", "#shMonchiero", "#shMondovì", "#shMonesiglio", "#shMonforte d'Alba", "#shMontà", "#shMontaldo di Mondovì", "#shMontaldo Roero", "#shMontanera", "#shMontelupo Albese", "#shMontemale di Cuneo", "#shMonterosso Grana", "#shMonteu Roero", "#shMontezemolo", "#shMonticello d'Alba", "#shMoretta", "#shMorozzo", "#shMurazzano", "#shMurello", "#shNarzole", "#shNeive", "#shNeviglie", "#shNiella Belbo", "#shNiella Tanaro", "#shNovello", "#shNucetto", "#shOncino", "#shOrmea", "#shOstana", "#shPaesana", "#shPagno", "#shPamparato", "#shParoldo", "#shPerletto", "#shPerlo", "#shPeveragno", "#shPezzolo Valle Uzzone", "#shPianfei", "#shPiasco", "#shPietraporzio", "#shPiobesi d'Alba", "#shPiozzo", "#shPocapaglia", "#shPolonghera", "#shPontechianale", "#shPradleves", "#shPrazzo", "#shPriero", "#shPriocca", "#shPriola", "#shPrunetto", "#shRacconigi", "#shRevello", "#shRifreddo", "#shRittana", "#shRoaschia", "#shRoascio", "#shRobilante", "#shRoburent", "#shRoccabruna", "#shRocca Cigliè", "#shRocca de' Baldi", "#shRoccaforte Mondovì", "#shRoccasparvera", "#shRoccavione", "#shRocchetta Belbo", "#shRoddi", "#shRoddino", "#shRodello", "#shRossana", "#shRuffia", "#shSale delle Langhe", "#shSale San Giovanni", "#shSaliceto", "#shSalmour", "#shSaluzzo", "#shSambuco", "#shSampeyre", "#shSan Benedetto Belbo", "#shSan Damiano Macra", "#shSanfrè", "#shSanfront", "#shSan Michele Mondovì", "#shSant'Albano Stura", "#shSanta Vittoria d'Alba", "#shSanto Stefano Belbo", "#shSanto Stefano Roero", "#shSavigliano", "#shScagnello", "#shScarnafigi", "#shSerralunga d'Alba", "#shSerravalle Langhe", "#shSinio", "#shSomano", "#shSommariva del Bosco", "#shSommariva Perno", "#shStroppo", "#shTarantasca", "#shTorre Bormida", "#shTorre Mondovì", "#shTorre San Giorgio", "#shTorresina", "#shTreiso", "#shTrezzo Tinella", "#shTrinità", "#shValdieri", "#shValgrana", "#shValloriate", "#shVenasca", "#shVerduno", "#shVernante", "#shVerzuolo", "#shVezza d'Alba", "#shVicoforte", "#shVignolo", "#shVillafalletto", "#shVillanova Mondovì", "#shVillanova Solaro", "#shVillar San Costanzo", "#shVinadio", "#shViola", "#shVottignasco", "#shAgira", "#shAidone", "#shAssoro", "#shBarrafranca", "#shCalascibetta", "#shCatenanuova", "#shCenturipe", "#shCerami", "#shEnna", "#shGagliano Castelferrato", "#shLeonforte", "#shNicosia", "#shNissoria", "#shPiazza Armerina", "#shPietraperzia", "#shRegalbuto", "#shSperlinga", "#shTroina", "#shValguarnera Caropepe", "#shVillarosa", "#shAltidona", "#shAmandola", "#shBelmonte Piceno", "#shCampofilone", "#shFalerone", "#shFermo", "#shFrancavilla d'Ete", "#shGrottazzolina", "#shLapedona", "#shMagliano di Tenna", "#shMassa Fermana", "#shMonsampietro Morico", "#shMontappone", "#shMontefalcone Appennino", "#shMontefortino", "#shMonte Giberto", "#shMontegiorgio", "#shMontegranaro", "#shMonteleone di Fermo", "#shMontelparo", "#shMonte Rinaldo", "#shMonterubbiano", "#shMonte San Pietrangeli", "#shMonte Urano", "#shMonte Vidon Combatte", "#shMonte Vidon Corrado", "#shMontottone", "#shMoresco", "#shOrtezzano", "#shPedaso", "#shPetritoli", "#shPonzano di Fermo", "#shPorto San Giorgio", "#shPorto Sant'Elpidio", "#shRapagnano", "#shSanta Vittoria in Matenano", "#shSant'Elpidio a Mare", "#shServigliano", "#shSmerillo", "#shTorre San Patrizio", "#shArgenta", "#shBondeno", "#shCento", "#shCodigoro", "#shComacchio", "#shCopparo", "#shFerrara", "#shJolanda di Savoia", "#shLagosanto", "#shMasi Torello", "#shMesola", "#shOstellato", "#shPoggio Renatico", "#shPortomaggiore", "#shVigarano Mainarda", "#shVoghiera", "#shGoro", "#shFiscaglia", "#shTerre del Reno", "#shRiva del Po", "#shTresignana", "#shBagno a Ripoli", "#shBarberino di Mugello", "#shBorgo San Lorenzo", "#shCalenzano", "#shCampi Bisenzio", "#shCapraia e Limite", "#shCastelfiorentino", "#shCerreto Guidi", "#shCertaldo", "#shDicomano", "#shEmpoli", "#shFiesole", "#shFirenze", "#shFirenzuola", "#shFucecchio", "#shGambassi Terme", "#shGreve in Chianti", "#shImpruneta", "#shLastra a Signa", "#shLonda", "#shMarradi", "#shMontaione", "#shMontelupo Fiorentino", "#shMontespertoli", "#shPalazzuolo sul Senio", "#shPelago", "#shPontassieve", "#shReggello", "#shRignano sull'Arno", "#shRufina", "#shSan Casciano in Val di Pesa", "#shSan Godenzo", "#shScandicci", "#shSesto Fiorentino", "#shSigna", "#shVaglia", "#shVicchio", "#shVinci", "#shFigline e Incisa Valdarno", "#shScarperia e San Piero", "#shBarberino Tavarnelle", "#shAccadia", "#shAlberona", "#shAnzano di Puglia", "#shApricena", "#shAscoli Satriano", "#shBiccari", "#shBovino", "#shCagnano Varano", "#shCandela", "#shCarapelle", "#shCarlantino", "#shCarpino", "#shCasalnuovo Monterotaro", "#shCasalvecchio di Puglia", "#shCastelluccio dei Sauri", "#shCastelluccio Valmaggiore", "#shCastelnuovo della Daunia", "#shCelenza Valfortore", "#shCelle di San Vito", "#shCerignola", "#shChieuti", "#shDeliceto", "#shFaeto", "#shFoggia", "#shIschitella", "#shIsole Tremiti", "#shLesina", "#shLucera", "#shManfredonia", "#shMattinata", "#shMonteleone di Puglia", "#shMonte Sant'Angelo", "#shMotta Montecorvino", "#shOrsara di Puglia", "#shOrta Nova", "#shPanni", "#shPeschici", "#shPietramontecorvino", "#shPoggio Imperiale", "#shRignano Garganico", "#shRocchetta Sant'Antonio", "#shRodi Garganico", "#shRoseto Valfortore", "#shSan Giovanni Rotondo", "#shSan Marco in Lamis", "#shSan Marco la Catola", "#shSan Nicandro Garganico", "#shSan Paolo di Civitate", "#shSan Severo", "#shSant'Agata di Puglia", "#shSerracapriola", "#shStornara", "#shStornarella", "#shTorremaggiore", "#shTroia", "#shVico del Gargano", "#shVieste", "#shVolturara Appula", "#shVolturino", "#shOrdona", "#shZapponeta", "#shBagno di Romagna", "#shBertinoro", "#shBorghi", "#shCastrocaro Terme e Terra del Sole", "#shCesena", "#shCesenatico", "#shCivitella di Romagna", "#shDovadola", "#shForlì", "#shForlimpopoli", "#shGaleata", "#shGambettola", "#shGatteo", "#shLongiano", "#shMeldola", "#shMercato Saraceno", "#shModigliana", "#shMontiano", "#shPortico e San Benedetto", "#shPredappio", "#shPremilcuore", "#shRocca San Casciano", "#shRoncofreddo", "#shSan Mauro Pascoli", "#shSanta Sofia", "#shSarsina", "#shSavignano sul Rubicone", "#shSogliano al Rubicone", "#shTredozio", "#shVerghereto", "#shAcquafondata", "#shAcuto", "#shAlatri", "#shAlvito", "#shAmaseno", "#shAnagni", "#shAquino", "#shArce", "#shArnara", "#shArpino", "#shAtina", "#shAusonia", "#shBelmonte Castello", "#shBoville Ernica", "#shBroccostella", "#shCampoli Appennino", "#shCasalattico", "#shCasalvieri", "#shCassino", "#shCastelliri", "#shCastelnuovo Parano", "#shCastrocielo", "#shCastro dei Volsci", "#shCeccano", "#shCeprano", "#shCervaro", "#shColfelice", "#shCollepardo", "#shColle San Magno", "#shCoreno Ausonio", "#shEsperia", "#shFalvaterra", "#shFerentino", "#shFilettino", "#shFiuggi", "#shFontana Liri", "#shFontechiari", "#shFrosinone", "#shFumone", "#shGallinaro", "#shGiuliano di Roma", "#shGuarcino", "#shIsola del Liri", "#shMonte San Giovanni Campano", "#shMorolo", "#shPaliano", "#shPastena", "#shPatrica", "#shPescosolido", "#shPicinisco", "#shPico", "#shPiedimonte San Germano", "#shPiglio", "#shPignataro Interamna", "#shPofi", "#shPontecorvo", "#shPosta Fibreno", "#shRipi", "#shRocca d'Arce", "#shRoccasecca", "#shSan Biagio Saracinisco", "#shSan Donato Val di Comino", "#shSan Giorgio a Liri", "#shSan Giovanni Incarico", "#shSant'Ambrogio sul Garigliano", "#shSant'Andrea del Garigliano", "#shSant'Apollinare", "#shSant'Elia Fiumerapido", "#shSantopadre", "#shSan Vittore del Lazio", "#shSerrone", "#shSettefrati", "#shSgurgola", "#shSora", "#shStrangolagalli", "#shSupino", "#shTerelle", "#shTorre Cajetani", "#shTorrice", "#shTrevi nel Lazio", "#shTrivigliano", "#shVallecorsa", "#shVallemaio", "#shVallerotonda", "#shVeroli", "#shVicalvi", "#shVico nel Lazio", "#shVilla Latina", "#shVilla Santa Lucia", "#shVilla Santo Stefano", "#shViticuso", "#shArenzano", "#shAvegno", "#shBargagli", "#shBogliasco", "#shBorzonasca", "#shBusalla", "#shCamogli", "#shCampo Ligure", "#shCampomorone", "#shCarasco", "#shCasarza Ligure", "#shCasella", "#shCastiglione Chiavarese", "#shCeranesi", "#shChiavari", "#shCicagna", "#shCogoleto", "#shCogorno", "#shCoreglia Ligure", "#shCrocefieschi", "#shDavagna", "#shFascia", "#shFavale di Malvaro", "#shFontanigorda", "#shGenova", "#shGorreto", "#shIsola del Cantone", "#shLavagna", "#shLeivi", "#shLorsica", "#shLumarzo", "#shMasone", "#shMele", "#shMezzanego", "#shMignanego", "#shMoconesi", "#shMoneglia", "#shMontebruno", "#shMontoggio", "#shNe", "#shNeirone", "#shOrero", "#shPieve Ligure", "#shPortofino", "#shPropata", "#shRapallo", "#shRecco", "#shRezzoaglio", "#shRonco Scrivia", "#shRondanina", "#shRossiglione", "#shRovegno", "#shSan Colombano Certenoli", "#shSanta Margherita Ligure", "#shSant'Olcese", "#shSanto Stefano d'Aveto", "#shSavignone", "#shSerra Riccò", "#shSestri Levante", "#shSori", "#shTiglieto", "#shTorriglia", "#shTribogna", "#shUscio", "#shValbrevenna", "#shVobbia", "#shZoagli", "#shCapriva del Friuli", "#shCormons", "#shDoberdò del Lago", "#shDolegna del Collio", "#shFarra d'Isonzo", "#shFogliano Redipuglia", "#shGorizia", "#shGradisca d'Isonzo", "#shGrado", "#shMariano del Friuli", "#shMedea", "#shMonfalcone", "#shMoraro", "#shMossa", "#shRomans d'Isonzo", "#shRonchi dei Legionari", "#shSagrado", "#shSan Canzian d'Isonzo", "#shSan Floriano del Collio", "#shSan Lorenzo Isontino", "#shSan Pier d'Isonzo", "#shSavogna d'Isonzo", "#shStaranzano", "#shTurriaco", "#shVillesse", "#shArcidosso", "#shCampagnatico", "#shCapalbio", "#shCastel del Piano", "#shCastell'Azzara", "#shCastiglione della Pescaia", "#shCinigiano", "#shCivitella Paganico", "#shFollonica", "#shGavorrano", "#shGrosseto", "#shIsola del Giglio", "#shMagliano in Toscana", "#shManciano", "#shMassa Marittima", "#shMonte Argentario", "#shMontieri", "#shOrbetello", "#shPitigliano", "#shRoccalbegna", "#shRoccastrada", "#shSanta Fiora", "#shScansano", "#shScarlino", "#shSeggiano", "#shSorano", "#shMonterotondo Marittimo", "#shSemproniano", "#shAirole", "#shApricale", "#shAquila d'Arroscia", "#shArmo", "#shAurigo", "#shBadalucco", "#shBajardo", "#shBordighera", "#shBorghetto d'Arroscia", "#shBorgomaro", "#shCamporosso", "#shCaravonica", "#shCastellaro", "#shCastel Vittorio", "#shCeriana", "#shCervo", "#shCesio", "#shChiusanico", "#shChiusavecchia", "#shCipressa", "#shCivezza", "#shCosio d'Arroscia", "#shCostarainera", "#shDiano Arentino", "#shDiano Castello", "#shDiano Marina", "#shDiano San Pietro", "#shDolceacqua", "#shDolcedo", "#shImperia", "#shIsolabona", "#shLucinasco", "#shMendatica", "#shMolini di Triora", "#shMontegrosso Pian Latte", "#shOlivetta San Michele", "#shOspedaletti", "#shPerinaldo", "#shPietrabruna", "#shPieve di Teco", "#shPigna", "#shPompeiana", "#shPontedassio", "#shPornassio", "#shPrelà", "#shRanzo", "#shRezzo", "#shRiva Ligure", "#shRocchetta Nervina", "#shSan Bartolomeo al Mare", "#shSan Biagio della Cima", "#shSan Lorenzo al Mare", "#shSanremo", "#shSanto Stefano al Mare", "#shSeborga", "#shSoldano", "#shTaggia", "#shTerzorio", "#shTriora", "#shVallebona", "#shVallecrosia", "#shVasia", "#shVentimiglia", "#shVessalico", "#shVilla Faraldi", "#shMontalto Carpasio", "#shAcquaviva d'Isernia", "#shAgnone", "#shBagnoli del Trigno", "#shBelmonte del Sannio", "#shCantalupo nel Sannio", "#shCapracotta", "#shCarovilli", "#shCarpinone", "#shCastel del Giudice", "#shCastelpetroso", "#shCastelpizzuto", "#shCastel San Vincenzo", "#shCastelverrino", "#shCerro al Volturno", "#shChiauci", "#shCivitanova del Sannio", "#shColli a Volturno", "#shConca Casale", "#shFilignano", "#shForlì del Sannio", "#shFornelli", "#shFrosolone", "#shIsernia", "#shLongano", "#shMacchia d'Isernia", "#shMacchiagodena", "#shMiranda", "#shMontaquila", "#shMontenero Val Cocchiara", "#shMonteroduni", "#shPesche", "#shPescolanciano", "#shPescopennataro", "#shPettoranello del Molise", "#shPietrabbondante", "#shPizzone", "#shPoggio Sannita", "#shPozzilli", "#shRionero Sannitico", "#shRoccamandolfi", "#shRoccasicura", "#shRocchetta a Volturno", "#shSan Pietro Avellana", "#shSant'Agapito", "#shSanta Maria del Molise", "#shSant'Angelo del Pesco", "#shSant'Elena Sannita", "#shScapoli", "#shSessano del Molise", "#shSesto Campano", "#shVastogirardi", "#shVenafro", "#shAmeglia", "#shArcola", "#shBeverino", "#shBolano", "#shBonassola", "#shBorghetto di Vara", "#shBrugnato", "#shCalice al Cornoviglio", "#shCarro", "#shCarrodano", "#shCastelnuovo Magra", "#shDeiva Marina", "#shFollo", "#shFramura", "#shLa Spezia", "#shLerici", "#shLevanto", "#shMaissana", "#shMonterosso al Mare", "#shLuni", "#shPignone", "#shPortovenere", "#shRiccò del Golfo di Spezia", "#shRiomaggiore", "#shRocchetta di Vara", "#shSanto Stefano di Magra", "#shSarzana", "#shSesta Godano", "#shVarese Ligure", "#shVernazza", "#shVezzano Ligure", "#shZignago", "#shAcciano", "#shAielli", "#shAlfedena", "#shAnversa degli Abruzzi", "#shAteleta", "#shAvezzano", "#shBalsorano", "#shBarete", "#shBarisciano", "#shBarrea", "#shBisegna", "#shBugnara", "#shCagnano Amiterno", "#shCalascio", "#shCampo di Giove", "#shCampotosto", "#shCanistro", "#shCansano", "#shCapestrano", "#shCapistrello", "#shCapitignano", "#shCaporciano", "#shCappadocia", "#shCarapelle Calvisio", "#shCarsoli", "#shCastel del Monte", "#shCastel di Ieri", "#shCastel di Sangro", "#shCastellafiume", "#shCastelvecchio Calvisio", "#shCastelvecchio Subequo", "#shCelano", "#shCerchio", "#shCivita d'Antino", "#shCivitella Alfedena", "#shCivitella Roveto", "#shCocullo", "#shCollarmele", "#shCollelongo", "#shCollepietro", "#shCorfinio", "#shFagnano Alto", "#shFontecchio", "#shFossa", "#shGagliano Aterno", "#shGioia dei Marsi", "#shGoriano Sicoli", "#shIntrodacqua", "#shL'Aquila", "#shLecce nei Marsi", "#shLuco dei Marsi", "#shLucoli", "#shMagliano de' Marsi", "#shMassa d'Albe", "#shMolina Aterno", "#shMontereale", "#shMorino", "#shNavelli", "#shOcre", "#shOfena", "#shOpi", "#shOricola", "#shOrtona dei Marsi", "#shOrtucchio", "#shOvindoli", "#shPacentro", "#shPereto", "#shPescasseroli", "#shPescina", "#shPescocostanzo", "#shPettorano sul Gizio", "#shPizzoli", "#shPoggio Picenze", "#shPrata d'Ansidonia", "#shPratola Peligna", "#shPrezza", "#shRaiano", "#shRivisondoli", "#shRoccacasale", "#shRocca di Botte", "#shRocca di Cambio", "#shRocca di Mezzo", "#shRocca Pia", "#shRoccaraso", "#shSan Benedetto dei Marsi", "#shSan Benedetto in Perillis", "#shSan Demetrio ne' Vestini", "#shSan Pio delle Camere", "#shSante Marie", "#shSant'Eusanio Forconese", "#shSanto Stefano di Sessanio", "#shSan Vincenzo Valle Roveto", "#shScanno", "#shScontrone", "#shScoppito", "#shScurcola Marsicana", "#shSecinaro", "#shSulmona", "#shTagliacozzo", "#shTione degli Abruzzi", "#shTornimparte", "#shTrasacco", "#shVillalago", "#shVilla Santa Lucia degli Abruzzi", "#shVilla Sant'Angelo", "#shVillavallelonga", "#shVilletta Barrea", "#shVittorito", "#shAprilia", "#shBassiano", "#shCampodimele", "#shCastelforte", "#shCisterna di Latina", "#shCori", "#shFondi", "#shFormia", "#shGaeta", "#shItri", "#shLatina", "#shLenola", "#shMaenza", "#shMinturno", "#shMonte San Biagio", "#shNorma", "#shPontinia", "#shPonza", "#shPriverno", "#shProssedi", "#shRoccagorga", "#shRocca Massima", "#shRoccasecca dei Volsci", "#shSabaudia", "#shSan Felice Circeo", "#shSanti Cosma e Damiano", "#shSermoneta", "#shSezze", "#shSonnino", "#shSperlonga", "#shSpigno Saturnia", "#shTerracina", "#shVentotene", "#shAlessano", "#shAlezio", "#shAlliste", "#shAndrano", "#shAradeo", "#shArnesano", "#shBagnolo del Salento", "#shBotrugno", "#shCalimera", "#shCampi Salentina", "#shCannole", "#shCaprarica di Lecce", "#shCarmiano", "#shCarpignano Salentino", "#shCasarano", "#shCastri di Lecce", "#shCastrignano de' Greci", "#shCastrignano del Capo", "#shCavallino", "#shCollepasso", "#shCopertino", "#shCorigliano d'Otranto", "#shCorsano", "#shCursi", "#shCutrofiano", "#shDiso", "#shGagliano del Capo", "#shGalatina", "#shGalatone", "#shGallipoli", "#shGiuggianello", "#shGiurdignano", "#shGuagnano", "#shLecce", "#shLequile", "#shLeverano", "#shLizzanello", "#shMaglie", "#shMartano", "#shMartignano", "#shMatino", "#shMelendugno", "#shMelissano", "#shMelpignano", "#shMiggiano", "#shMinervino di Lecce", "#shMonteroni di Lecce", "#shMontesano Salentino", "#shMorciano di Leuca", "#shMuro Leccese", "#shNardò", "#shNeviano", "#shNociglia", "#shNovoli", "#shOrtelle", "#shOtranto", "#shPalmariggi", "#shParabita", "#shPatù", "#shPoggiardo", "#shRacale", "#shRuffano", "#shSalice Salentino", "#shSalve", "#shSanarica", "#shSan Cesario di Lecce", "#shSan Donato di Lecce", "#shSannicola", "#shSan Pietro in Lama", "#shSanta Cesarea Terme", "#shScorrano", "#shSeclì", "#shSogliano Cavour", "#shSoleto", "#shSpecchia", "#shSpongano", "#shSquinzano", "#shSternatia", "#shSupersano", "#shSurano", "#shSurbo", "#shTaurisano", "#shTaviano", "#shTiggiano", "#shTrepuzzi", "#shTricase", "#shTuglie", "#shUgento", "#shUggiano la Chiesa", "#shVeglie", "#shVernole", "#shZollino", "#shSan Cassiano", "#shCastro", "#shPorto Cesareo", "#shPresicce-Acquarica", "#shAbbadia Lariana", "#shAiruno", "#shAnnone di Brianza", "#shBallabio", "#shBarzago", "#shBarzanò", "#shBarzio", "#shBellano", "#shBosisio Parini", "#shBrivio", "#shBulciago", "#shCalco", "#shCalolziocorte", "#shCarenno", "#shCasargo", "#shCasatenovo", "#shCassago Brianza", "#shCassina Valsassina", "#shCastello di Brianza", "#shCernusco Lombardone", "#shCesana Brianza", "#shCivate", "#shColico", "#shColle Brianza", "#shCortenova", "#shCosta Masnaga", "#shCrandola Valsassina", "#shCremella", "#shCremeno", "#shDervio", "#shDolzago", "#shDorio", "#shEllo", "#shErve", "#shEsino Lario", "#shGalbiate", "#shGarbagnate Monastero", "#shGarlate", "#shImbersago", "#shIntrobio", "#shLecco", "#shLierna", "#shLomagna", "#shMalgrate", "#shMandello del Lario", "#shMargno", "#shMerate", "#shMissaglia", "#shMoggio", "#shMolteno", "#shMonte Marenzo", "#shMontevecchia", "#shMonticello Brianza", "#shMorterone", "#shNibionno", "#shOggiono", "#shOlgiate Molgora", "#shOlginate", "#shOliveto Lario", "#shOsnago", "#shPaderno d'Adda", "#shPagnona", "#shParlasco", "#shPasturo", "#shPerledo", "#shPescate", "#shPremana", "#shPrimaluna", "#shRobbiate", "#shRogeno", "#shSanta Maria Hoè", "#shSirone", "#shSirtori", "#shSueglio", "#shSuello", "#shTaceno", "#shValgreghentino", "#shValmadrera", "#shVarenna", "#shVercurago", "#shViganò", "#shVerderio", "#shLa Valletta Brianza", "#shValvarrone", "#shBibbona", "#shCampiglia Marittima", "#shCampo nell'Elba", "#shCapoliveri", "#shCapraia Isola", "#shCastagneto Carducci", "#shCecina", "#shCollesalvetti", "#shLivorno", "#shMarciana", "#shMarciana Marina", "#shPiombino", "#shPorto Azzurro", "#shPortoferraio", "#shRosignano Marittimo", "#shSan Vincenzo", "#shSassetta", "#shSuvereto", "#shRio", "#shAbbadia Cerreto", "#shBertonico", "#shBoffalora d'Adda", "#shBorghetto Lodigiano", "#shBorgo San Giovanni", "#shBrembio", "#shCasaletto Lodigiano", "#shCasalmaiocco", "#shCasalpusterlengo", "#shCaselle Landi", "#shCaselle Lurani", "#shCastelnuovo Bocca d'Adda", "#shCastiglione d'Adda", "#shCastiraga Vidardo", "#shCavenago d'Adda", "#shCervignano d'Adda", "#shCodogno", "#shComazzo", "#shCornegliano Laudense", "#shCorno Giovine", "#shCornovecchio", "#shCorte Palasio", "#shCrespiatica", "#shFombio", "#shGalgagnano", "#shGraffignana", "#shGuardamiglio", "#shLivraga", "#shLodi", "#shLodi Vecchio", "#shMaccastorna", "#shMairago", "#shMaleo", "#shMarudo", "#shMassalengo", "#shMeleti", "#shMerlino", "#shMontanaso Lombardo", "#shMulazzano", "#shOrio Litta", "#shOspedaletto Lodigiano", "#shOssago Lodigiano", "#shPieve Fissiraga", "#shSalerano sul Lambro", "#shSan Fiorano", "#shSan Martino in Strada", "#shSan Rocco al Porto", "#shSant'Angelo Lodigiano", "#shSanto Stefano Lodigiano", "#shSecugnago", "#shSenna Lodigiana", "#shSomaglia", "#shSordio", "#shTavazzano con Villavesco", "#shTerranova dei Passerini", "#shTurano Lodigiano", "#shValera Fratta", "#shVillanova del Sillaro", "#shZelo Buon Persico", "#shCastelgerundo", "#shAltopascio", "#shBagni di Lucca", "#shBarga", "#shBorgo a Mozzano", "#shCamaiore", "#shCamporgiano", "#shCapannori", "#shCareggine", "#shCastelnuovo di Garfagnana", "#shCastiglione di Garfagnana", "#shCoreglia AnteLMEnelli", "#shForte dei Marmi", "#shFosciandora", "#shGallicano", "#shLucca", "#shMassarosa", "#shMinucciano", "#shMolazzana", "#shMontecarlo", "#shPescaglia", "#shPiazza al Serchio", "#shPietrasanta", "#shPieve Fosciana", "#shPorcari", "#shSan Romano in Garfagnana", "#shSeravezza", "#shStazzema", "#shVagli Sotto", "#shViareggio", "#shVilla Basilica", "#shVilla Collemandina", "#shFabbriche di Vergemoli", "#shSillano Giuncugnano", "#shApiro", "#shAppignano", "#shBelforte del Chienti", "#shBolognola", "#shCaldarola", "#shCamerino", "#shCamporotondo di Fiastrone", "#shCastelraimondo", "#shCastelsantangelo sul Nera", "#shCessapalombo", "#shCingoli", "#shCivitanova Marche", "#shColmurano", "#shCorridonia", "#shEsanatoglia", "#shFiastra", "#shFiuminata", "#shGagliole", "#shGualdo", "#shLoro Piceno", "#shMacerata", "#shMatelica", "#shMogliano", "#shMontecassiano", "#shMonte Cavallo", "#shMontecosaro", "#shMontefano", "#shMontelupone", "#shMonte San Giusto", "#shMonte San Martino", "#shMorrovalle", "#shMuccia", "#shPenna San Giovanni", "#shPetriolo", "#shPieve Torina", "#shPioraco", "#shPoggio San Vicino", "#shPollenza", "#shPorto Recanati", "#shPotenza Picena", "#shRecanati", "#shRipe San Ginesio", "#shSan Ginesio", "#shSan Severino Marche", "#shSant'Angelo in Pontano", "#shSarnano", "#shSefro", "#shSerrapetrona", "#shSerravalle di Chienti", "#shTolentino", "#shTreia", "#shUrbisaglia", "#shUssita", "#shVisso", "#shValfornace", "#shAcquanegra sul Chiese", "#shAsola", "#shBagnolo San Vito", "#shBozzolo", "#shCanneto sull'Oglio", "#shCasalmoro", "#shCasaloldo", "#shCasalromano", "#shCastelbelforte", "#shCastel d'Ario", "#shCastel Goffredo", "#shCastellucchio", "#shCastiglione delle Stiviere", "#shCavriana", "#shCeresara", "#shCommessaggio", "#shCurtatone", "#shDosolo", "#shGazoldo degli Ippoliti", "#shGazzuolo", "#shGoito", "#shGonzaga", "#shGuidizzolo", "#shMagnacavallo", "#shMantova", "#shMarcaria", "#shMariana Mantovana", "#shMarmirolo", "#shMedole", "#shMoglia", "#shMonzambano", "#shMotteggiana", "#shOstiglia", "#shPegognaga", "#shPiubega", "#shPoggio Rusco", "#shPomponesco", "#shPonti sul Mincio", "#shPorto Mantovano", "#shQuingentole", "#shQuistello", "#shRedondesco", "#shRivarolo Mantovano", "#shRodigo", "#shRoncoferraro", "#shRoverbella", "#shSabbioneta", "#shSan Benedetto Po", "#shSan Giacomo delle Segnate", "#shSan Giorgio Bigarello", "#shSan Giovanni del Dosso", "#shSan Martino dall'Argine", "#shSchivenoglia", "#shSermide e Felonica", "#shSerravalle a Po", "#shSolferino", "#shSustinente", "#shSuzzara", "#shViadana", "#shVillimpenta", "#shVolta Mantovana", "#shBorgo Virgilio", "#shBorgo Mantovano", "#shBorgocarbonara", "#shAulla", "#shBagnone", "#shCarrara", "#shCasola in Lunigiana", "#shComano", "#shFilattiera", "#shFivizzano", "#shFosdinovo", "#shLicciana Nardi", "#shMassa", "#shMontignoso", "#shMulazzo", "#shPodenzana", "#shPontremoli", "#shTresana", "#shVillafranca in Lunigiana", "#shZeri", "#shAccettura", "#shAliano", "#shBernalda", "#shCalciano", "#shCirigliano", "#shColobraro", "#shCraco", "#shFerrandina", "#shGaraguso", "#shGorgoglione", "#shGrassano", "#shGrottole", "#shIrsina", "#shMatera", "#shMiglionico", "#shMontalbano Jonico", "#shMontescaglioso", "#shNova Siri", "#shOliveto Lucano", "#shPisticci", "#shPolicoro", "#shPomarico", "#shRotondella", "#shSalandra", "#shSan Giorgio Lucano", "#shSan Mauro Forte", "#shStigliano", "#shTricarico", "#shTursi", "#shValsinni", "#shScanzano Jonico", "#shAlcara li Fusi", "#shAlì", "#shAlì Terme", "#shAntillo", "#shBarcellona Pozzo di Gotto", "#shBasicò", "#shBrolo", "#shCapizzi", "#shCapo d'Orlando", "#shCapri Leone", "#shCaronia", "#shCasalvecchio Siculo", "#shCastel di Lucio", "#shCastell'Umberto", "#shCastelmola", "#shCastroreale", "#shCesarò", "#shCondrò", "#shFalcone", "#shFicarra", "#shFiumedinisi", "#shFloresta", "#shFondachelli-Fantina", "#shForza d'Agrò", "#shFrancavilla di Sicilia", "#shFrazzanò", "#shFurci Siculo", "#shFurnari", "#shGaggi", "#shGalati Mamertino", "#shGallodoro", "#shGiardini-Naxos", "#shGioiosa Marea", "#shGraniti", "#shGualtieri Sicaminò", "#shItala", "#shLeni", "#shLetojanni", "#shLibrizzi", "#shLimina", "#shLipari", "#shLongi", "#shMalfa", "#shMalvagna", "#shMandanici", "#shMazzarrà Sant'Andrea", "#shMerì", "#shMessina", "#shMilazzo", "#shMilitello Rosmarino", "#shMirto", "#shMistretta", "#shMoio Alcantara", "#shMonforte San Giorgio", "#shMongiuffi Melia", "#shMontagnareale", "#shMontalbano Elicona", "#shMotta Camastra", "#shMotta d'Affermo", "#shNaso", "#shNizza di Sicilia", "#shNovara di Sicilia", "#shOliveri", "#shPace del Mela", "#shPagliara", "#shPatti", "#shPettineo", "#shPiraino", "#shRaccuja", "#shReitano", "#shRoccafiorita", "#shRoccalumera", "#shRoccavaldina", "#shRoccella Valdemone", "#shRodì Milici", "#shRometta", "#shSan Filippo del Mela", "#shSan Fratello", "#shSan Marco d'Alunzio", "#shSan Pier Niceto", "#shSan Piero Patti", "#shSan Salvatore di Fitalia", "#shSanta Domenica Vittoria", "#shSant'Agata di Militello", "#shSant'Alessio Siculo", "#shSanta Lucia del Mela", "#shSanta Marina Salina", "#shSant'Angelo di Brolo", "#shSanta Teresa di Riva", "#shSan Teodoro ", "#shSanto Stefano di Camastra", "#shSaponara", "#shSavoca", "#shScaletta Zanclea", "#shSinagra", "#shSpadafora", "#shTaormina", "#shTorregrotta", "#shTortorici", "#shTripi", "#shTusa", "#shUcria", "#shValdina", "#shVenetico", "#shVillafranca Tirrena", "#shTerme Vigliatore", "#shAcquedolci", "#shTorrenova", "#shAbbiategrasso", "#shAlbairate", "#shArconate", "#shArese", "#shArluno", "#shAssago", "#shBareggio", "#shBasiano", "#shBasiglio", "#shBellinzago Lombardo", "#shBernate Ticino", "#shBesate", "#shBinasco", "#shBoffalora sopra Ticino", "#shBollate", "#shBresso", "#shBubbiano", "#shBuccinasco", "#shBuscate", "#shBussero", "#shBusto Garolfo", "#shCalvignasco", "#shCambiago", "#shCanegrate", "#shCarpiano", "#shCarugate", "#shCasarile", "#shCasorezzo", "#shCassano d'Adda", "#shCassina de' Pecchi", "#shCassinetta di Lugagnano", "#shCastano Primo", "#shCernusco sul Naviglio", "#shCerro al Lambro", "#shCerro Maggiore", "#shCesano Boscone", "#shCesate", "#shCinisello Balsamo", "#shCisliano", "#shCologno Monzese", "#shColturano", "#shCorbetta", "#shCormano", "#shCornaredo", "#shCorsico", "#shCuggiono", "#shCusago", "#shCusano Milanino", "#shDairago", "#shDresano", "#shGaggiano", "#shGarbagnate Milanese", "#shGessate", "#shGorgonzola", "#shGrezzago", "#shGudo Visconti", "#shInveruno", "#shInzago", "#shLacchiarella", "#shLainate", "#shLegnano", "#shLiscate", "#shLocate di Triulzi", "#shMagenta", "#shMagnago", "#shMarcallo con Casone", "#shMasate", "#shMediglia", "#shMelegnano", "#shMelzo", "#shMesero", "#shMilano", "#shMorimondo", "#shMotta Visconti", "#shNerviano", "#shNosate", "#shNovate Milanese", "#shNoviglio", "#shOpera", "#shOssona", "#shOzzero", "#shPaderno Dugnano", "#shPantigliate", "#shParabiago", "#shPaullo", "#shPero", "#shPeschiera Borromeo", "#shPessano con Bornago", "#shPieve Emanuele", "#shPioltello", "#shPogliano Milanese", "#shPozzo d'Adda", "#shPozzuolo Martesana", "#shPregnana Milanese", "#shRescaldina", "#shRho", "#shRobecchetto con Induno", "#shRobecco sul Naviglio", "#shRodano", "#shRosate", "#shRozzano", "#shSan Colombano al Lambro", "#shSan Donato Milanese", "#shSan Giorgio su Legnano", "#shSan Giuliano Milanese", "#shSanto Stefano Ticino", "#shSan Vittore Olona", "#shSan Zenone al Lambro", "#shSedriano", "#shSegrate", "#shSenago", "#shSesto San Giovanni", "#shSettala", "#shSettimo Milanese", "#shSolaro", "#shTrezzano Rosa", "#shTrezzano sul Naviglio", "#shTrezzo sull'Adda", "#shTribiano", "#shTruccazzano", "#shTurbigo", "#shVanzago", "#shVaprio d'Adda", "#shVernate", "#shVignate", "#shVimodrone", "#shVittuone", "#shVizzolo Predabissi", "#shZibido San Giacomo", "#shVilla Cortese", "#shVanzaghello", "#shBaranzate", "#shVermezzo con Zelo", "#shBastiglia", "#shBomporto", "#shCampogalliano", "#shCamposanto", "#shCarpi", "#shCastelfranco Emilia", "#shCastelnuovo Rangone", "#shCastelvetro di Modena", "#shCavezzo", "#shConcordia sulla Secchia", "#shFanano", "#shFinale Emilia", "#shFiorano Modenese", "#shFiumalbo", "#shFormigine", "#shFrassinoro", "#shGuiglia", "#shLama Mocogno", "#shMaranello", "#shMarano sul Panaro", "#shMedolla", "#shMirandola", "#shModena", "#shMontecreto", "#shMontefiorino", "#shMontese", "#shNonantola", "#shNovi di Modena", "#shPalagano", "#shPavullo nel Frignano", "#shPievepelago", "#shPolinago", "#shPrignano sulla Secchia", "#shRavarino", "#shRiolunato", "#shSan Cesario sul Panaro", "#shSan Felice sul Panaro", "#shSan Possidonio", "#shSan Prospero", "#shSassuolo", "#shSavignano sul Panaro", "#shSerramazzoni", "#shSestola", "#shSoliera", "#shSpilamberto", "#shVignola", "#shZocca", "#shAgrate Brianza", "#shAicurzio", "#shAlbiate", "#shArcore", "#shBarlassina", "#shBellusco", "#shBernareggio", "#shBesana in Brianza", "#shBiassono", "#shBovisio-Masciago", "#shBriosco", "#shBrugherio", "#shBurago di Molgora", "#shCamparada", "#shCarate Brianza", "#shCarnate", "#shCavenago di Brianza", "#shCeriano Laghetto", "#shCesano Maderno", "#shCogliate", "#shConcorezzo", "#shCorrezzana", "#shDesio", "#shGiussano", "#shLazzate", "#shLesmo", "#shLimbiate", "#shLissone", "#shMacherio", "#shMeda", "#shMezzago", "#shMisinto", "#shMonza", "#shMuggiò", "#shNova Milanese", "#shOrnago", "#shRenate", "#shRonco Briantino", "#shSeregno", "#shSeveso", "#shSovico", "#shSulbiate", "#shTriuggio", "#shUsmate Velate", "#shVaredo", "#shVedano al Lambro", "#shVeduggio con Colzano", "#shVerano Brianza", "#shVillasanta", "#shVimercate", "#shBusnago", "#shCaponago", "#shCornate d'Adda", "#shLentate sul Seveso", "#shRoncello", "#shAcerra", "#shAfragola", "#shAgerola", "#shAnacapri", "#shArzano", "#shBacoli", "#shBarano d'Ischia", "#shBoscoreale", "#shBoscotrecase", "#shBrusciano", "#shCaivano", "#shCalvizzano", "#shCamposano", "#shCapri", "#shCarbonara di Nola", "#shCardito", "#shCasalnuovo di Napoli", "#shCasamarciano", "#shCasamicciola Terme", "#shCasandrino", "#shCasavatore", "#shCasola di Napoli", "#shCasoria", "#shCastellammare di Stabia", "#shCastello di Cisterna", "#shCercola", "#shCicciano", "#shCimitile", "#shComiziano", "#shCrispano", "#shForio", "#shFrattamaggiore", "#shFrattaminore", "#shGiugliano in Campania", "#shGragnano", "#shGrumo Nevano", "#shIschia", "#shLacco Ameno", "#shLettere", "#shLiveri", "#shMarano di Napoli", "#shMariglianella", "#shMarigliano", "#shMassa Lubrense", "#shMelito di Napoli", "#shMeta", "#shMonte di Procida", "#shMugnano di Napoli", "#shNapoli", "#shNola", "#shOttaviano", "#shPalma Campania", "#shPiano di Sorrento", "#shPimonte", "#shPoggiomarino", "#shPollena Trocchia", "#shPomigliano d'Arco", "#shPompei", "#shPortici", "#shPozzuoli", "#shProcida", "#shQualiano", "#shQuarto", "#shErcolano", "#shRoccarainola", "#shSan Gennaro Vesuviano", "#shSan Giorgio a Cremano", "#shSan Giuseppe Vesuviano", "#shSan Paolo Bel Sito", "#shSan Sebastiano al Vesuvio", "#shSant'Agnello", "#shSant'Anastasia", "#shSant'Antimo", "#shSant'Antonio Abate", "#shSan Vitaliano", "#shSaviano", "#shScisciano", "#shSerrara Fontana", "#shSomma Vesuviana", "#shSorrento", "#shStriano", "#shTerzigno", "#shTorre Annunziata", "#shTorre del Greco", "#shTufino", "#shVico Equense", "#shVillaricca", "#shVisciano", "#shVolla", "#shSanta Maria la Carità", "#shTrecase", "#shMassa di Somma", "#shAgrate Conturbia", "#shAmeno", "#shArmeno", "#shArona", "#shBarengo", "#shBellinzago Novarese", "#shBiandrate", "#shBoca", "#shBogogno", "#shBolzano Novarese", "#shBorgolavezzaro", "#shBorgomanero", "#shBorgo Ticino", "#shBriga Novarese", "#shBriona", "#shCaltignaga", "#shCameri", "#shCarpignano Sesia", "#shCasalbeltrame", "#shCasaleggio Novara", "#shCasalino", "#shCasalvolone", "#shCastellazzo Novarese", "#shCastelletto sopra Ticino", "#shCavaglietto", "#shCavaglio d'Agogna", "#shCavallirio", "#shCerano", "#shColazza", "#shComignago", "#shCressa", "#shCureggio", "#shDivignano", "#shDormelletto", "#shFara Novarese", "#shFontaneto d'Agogna", "#shGalliate", "#shGarbagna Novarese", "#shGargallo", "#shGhemme", "#shGozzano", "#shGranozzo con Monticello", "#shGrignasco", "#shInvorio", "#shLandiona", "#shLesa", "#shMaggiora", "#shMandello Vitta", "#shMarano Ticino", "#shMassino Visconti", "#shMeina", "#shMezzomerico", "#shMiasino", "#shMomo", "#shNebbiuno", "#shNibbiola", "#shNovara", "#shOleggio", "#shOleggio Castello", "#shOrta San Giulio", "#shParuzzaro", "#shPella", "#shPettenasco", "#shPisano", "#shPogno", "#shPombia", "#shPrato Sesia", "#shRecetto", "#shRomagnano Sesia", "#shRomentino", "#shSan Maurizio d'Opaglio", "#shSan Nazzaro Sesia", "#shSan Pietro Mosezzo", "#shSillavengo", "#shSizzano", "#shSoriso", "#shSozzago", "#shSuno", "#shTerdobbiate", "#shTornaco", "#shTrecate", "#shVaprio d'Agogna", "#shVarallo Pombia", "#shVespolate", "#shVicolungo", "#shVinzaglio", "#shGattico-Veruno", "#shAritzo", "#shArzana", "#shAtzara", "#shAustis", "#shBari Sardo", "#shBaunei", "#shBelvì", "#shBirori", "#shBitti", "#shBolotana", "#shBorore", "#shBortigali", "#shDesulo", "#shDorgali", "#shDualchi", "#shElini", "#shFonni", "#shGadoni", "#shGairo", "#shGaltellì", "#shGavoi", "#shGirasole", "#shIlbono", "#shIrgoli", "#shJerzu", "#shLanusei", "#shLei", "#shLoceri", "#shLoculi", "#shLodè", "#shLotzorai", "#shLula", "#shMacomer", "#shMamoiada", "#shMeana Sardo", "#shNoragugume", "#shNuoro", "#shOliena", "#shOllolai", "#shOlzai", "#shOnanì", "#shOnifai", "#shOniferi", "#shOrani", "#shOrgosolo", "#shOrosei", "#shOrotelli", "#shOrtueri", "#shOrune", "#shOsidda", "#shOsini", "#shOttana", "#shOvodda", "#shPerdasdefogu", "#shPosada", "#shSarule", "#shSilanus", "#shSindia", "#shSiniscola", "#shSorgono", "#shTalana", "#shTertenia", "#shTeti", "#shTiana", "#shTonara", "#shTorpè", "#shTortolì", "#shTriei", "#shUlassai", "#shUrzulei", "#shUssassai", "#shVillagrande Strisaili", "#shCardedu", "#shLodine", "#shAbbasanta", "#shAidomaggiore", "#shAlbagiara", "#shAles", "#shAllai", "#shArborea", "#shArdauli", "#shAssolo", "#shAsuni", "#shBaradili", "#shBaratili San Pietro", "#shBaressa", "#shBauladu", "#shBidonì", "#shBonarcado", "#shBoroneddu", "#shBusachi", "#shCabras", "#shCuglieri", "#shFordongianus", "#shGhilarza", "#shGonnoscodina", "#shGonnosnò", "#shGonnostramatza", "#shMarrubiu", "#shMasullas", "#shMilis", "#shMogorella", "#shMogoro", "#shMorgongiori", "#shNarbolia", "#shNeoneli", "#shNorbello", "#shNughedu Santa Vittoria", "#shNurachi", "#shNureci", "#shOllastra", "#shOristano", "#shPalmas Arborea", "#shPau", "#shPaulilatino", "#shPompu", "#shRiola Sardo", "#shRuinas", "#shSamugheo", "#shSan Nicolò d'Arcidano", "#shSanta Giusta", "#shVilla Sant'Antonio", "#shSantu Lussurgiu", "#shSan Vero Milis", "#shScano di Montiferro", "#shSedilo", "#shSeneghe", "#shSenis", "#shSennariolo", "#shSiamaggiore", "#shSiamanna", "#shSimala", "#shSimaxis", "#shSini", "#shSiris", "#shSolarussa", "#shSorradile", "#shTadasuni", "#shTerralba", "#shTramatza", "#shTresnuraghes", "#shUlà Tirso", "#shUras", "#shUsellus", "#shVillanova Truschedu", "#shVillaurbana", "#shVilla Verde", "#shZeddiani", "#shZerfaliu", "#shSiapiccia", "#shCurcuris", "#shSoddì", "#shBosa", "#shFlussio", "#shLaconi", "#shMagomadas", "#shModolo", "#shMontresta", "#shSagama", "#shSuni", "#shTinnura", "#shAbano Terme", "#shAgna", "#shAlbignasego", "#shAnguillara Veneta", "#shArquà Petrarca", "#shArre", "#shArzergrande", "#shBagnoli di Sopra", "#shBaone", "#shBarbona", "#shBattaglia Terme", "#shBoara Pisani", "#shBorgoricco", "#shBovolenta", "#shBrugine", "#shCadoneghe", "#shCampodarsego", "#shCampodoro", "#shCamposampiero", "#shCampo San Martino", "#shCandiana", "#shCarceri", "#shCarmignano di Brenta", "#shCartura", "#shCasale di Scodosia", "#shCasalserugo", "#shCastelbaldo", "#shCervarese Santa Croce", "#shCinto Euganeo", "#shCittadella", "#shCodevigo", "#shConselve", "#shCorrezzola", "#shCurtarolo", "#shEste", "#shFontaniva", "#shGalliera Veneta", "#shGalzignano Terme", "#shGazzo", "#shGrantorto", "#shGranze", "#shLegnaro", "#shLimena", "#shLoreggia", "#shLozzo Atestino", "#shMaserà di Padova", "#shMasi", "#shMassanzago", "#shMegliadino San Vitale", "#shMerlara", "#shMestrino", "#shMonselice", "#shMontagnana", "#shMontegrotto Terme", "#shNoventa Padovana", "#shOspedaletto Euganeo", "#shPadova", "#shPernumia", "#shPiacenza d'Adige", "#shPiazzola sul Brenta", "#shPiombino Dese", "#shPiove di Sacco", "#shPolverara", "#shPonso", "#shPontelongo", "#shPonte San Nicolò", "#shPozzonovo", "#shRovolon", "#shRubano", "#shSaccolongo", "#shSan Giorgio delle Pertiche", "#shSan Giorgio in Bosco", "#shSan Martino di Lupari", "#shSan Pietro in Gu", "#shSan Pietro Viminario", "#shSanta Giustina in Colle", "#shSant'Angelo di Piove di Sacco", "#shSant'Elena", "#shSant'Urbano", "#shSaonara", "#shSelvazzano Dentro", "#shSolesino", "#shStanghella", "#shTeolo", "#shTerrassa Padovana", "#shTombolo", "#shTorreglia", "#shTrebaseleghe", "#shTribano", "#shUrbana", "#shVeggiano", "#shVescovana", "#shVighizzolo d'Este", "#shVigodarzere", "#shVigonza", "#shVilla del Conte", "#shVilla Estense", "#shVillafranca Padovana", "#shVillanova di Camposampiero", "#shVo'", "#shDue Carrare", "#shBorgo Veneto", "#shAlia", "#shAlimena", "#shAliminusa", "#shAltavilla Milicia", "#shAltofonte", "#shBagheria", "#shBalestrate", "#shBaucina", "#shBelmonte Mezzagno", "#shBisacquino", "#shBolognetta", "#shBompietro", "#shBorgetto", "#shCaccamo", "#shCaltavuturo", "#shCampofelice di Fitalia", "#shCampofelice di Roccella", "#shCampofiorito", "#shCamporeale", "#shCapaci", "#shCarini", "#shCastelbuono", "#shCasteldaccia", "#shCastellana Sicula", "#shCastronovo di Sicilia", "#shCefalà Diana", "#shCefalù", "#shCerda", "#shChiusa Sclafani", "#shCiminna", "#shCinisi", "#shCollesano", "#shContessa Entellina", "#shCorleone", "#shFicarazzi", "#shGangi", "#shGeraci Siculo", "#shGiardinello", "#shGiuliana", "#shGodrano", "#shGratteri", "#shIsnello", "#shIsola delle Femmine", "#shLascari", "#shLercara Friddi", "#shMarineo", "#shMezzojuso", "#shMisilmeri", "#shMonreale", "#shMontelepre", "#shMontemaggiore Belsito", "#shPalazzo Adriano", "#shPalermo", "#shPartinico", "#shPetralia Soprana", "#shPetralia Sottana", "#shPiana degli Albanesi", "#shPolizzi Generosa", "#shPollina", "#shPrizzi", "#shRoccamena", "#shRoccapalumba", "#shSan Cipirello", "#shSan Giuseppe Jato", "#shSan Mauro Castelverde", "#shSanta Cristina Gela", "#shSanta Flavia", "#shSciara", "#shSclafani Bagni", "#shTermini Imerese", "#shTerrasini", "#shTorretta", "#shTrabia", "#shTrappeto", "#shUstica", "#shValledolmo", "#shVentimiglia di Sicilia", "#shVicari", "#shVillabate", "#shVillafrati", "#shScillato", "#shBlufi", "#shAlbareto", "#shBardi", "#shBedonia", "#shBerceto", "#shBore", "#shBorgo Val di Taro", "#shBusseto", "#shCalestano", "#shCollecchio", "#shColorno", "#shCompiano", "#shCorniglio", "#shFelino", "#shFidenza", "#shFontanellato", "#shFontevivo", "#shFornovo di Taro", "#shLanghirano", "#shLesignano de' Bagni", "#shMedesano", "#shMonchio delle Corti", "#shMontechiarugolo", "#shNeviano degli Arduini", "#shNoceto", "#shPalanzano", "#shParma", "#shPellegrino Parmense", "#shRoccabianca", "#shSala Baganza", "#shSalsomaggiore Terme", "#shSan Secondo Parmense", "#shSolignano", "#shSoragna", "#shTerenzo", "#shTizzano Val Parma", "#shTornolo", "#shTorrile", "#shTraversetolo", "#shValmozzola", "#shVarano de' Melegari", "#shVarsi", "#shSissa Trecasali", "#shPolesine Zibello", "#shSorbolo Mezzani", "#shAlagna", "#shAlbaredo Arnaboldi", "#shAlbonese", "#shAlbuzzano", "#shArena Po", "#shBadia Pavese", "#shBagnaria", "#shBarbianello", "#shBascapè", "#shBastida Pancarana", "#shBattuda", "#shBelgioioso", "#shBereguardo", "#shBorgarello", "#shBorgo Priolo", "#shBorgoratto Mormorolo", "#shBorgo San Siro", "#shBornasco", "#shBosnasco", "#shBrallo di Pregola", "#shBreme", "#shBressana Bottarone", "#shBroni", "#shCalvignano", "#shCampospinoso", "#shCandia Lomellina", "#shCanneto Pavese", "#shCarbonara al Ticino", "#shCasanova Lonati", "#shCasatisma", "#shCasei Gerola", "#shCasorate Primo", "#shCassolnovo", "#shCastana", "#shCasteggio", "#shCastelletto di Branduzzo", "#shCastello d'Agogna", "#shCastelnovetto", "#shCava Manara", "#shCecima", "#shCeranova", "#shCeretto Lomellina", "#shCergnago", "#shCertosa di Pavia", "#shCervesina", "#shChignolo Po", "#shCigognola", "#shCilavegna", "#shCodevilla", "#shConfienza", "#shCopiano", "#shCorana", "#shCorvino San Quirico", "#shCosta de' Nobili", "#shCozzo", "#shCura Carpignano", "#shDorno", "#shFerrera Erbognone", "#shFilighera", "#shFortunago", "#shFrascarolo", "#shGalliavola", "#shGambarana", "#shGambolò", "#shGarlasco", "#shGerenzago", "#shGiussago", "#shGodiasco Salice Terme", "#shGolferenzo", "#shGravellona Lomellina", "#shGropello Cairoli", "#shInverno e Monteleone", "#shLandriano", "#shLangosco", "#shLardirago", "#shLinarolo", "#shLirio", "#shLomello", "#shLungavilla", "#shMagherno", "#shMarcignago", "#shMarzano", "#shMede", "#shMenconico", "#shMezzana Bigli", "#shMezzana Rabattone", "#shMezzanino", "#shMiradolo Terme", "#shMontalto Pavese", "#shMontebello della Battaglia", "#shMontecalvo Versiggia", "#shMontescano", "#shMontesegale", "#shMonticelli Pavese", "#shMontù Beccaria", "#shMornico Losana", "#shMortara", "#shNicorvo", "#shOlevano di Lomellina", "#shOliva Gessi", "#shOttobiano", "#shPalestro", "#shPancarana", "#shParona", "#shPavia", "#shPietra de' Giorgi", "#shPieve Albignola", "#shPieve del Cairo", "#shPieve Porto Morone", "#shPinarolo Po", "#shPizzale", "#shPonte Nizza", "#shPortalbera", "#shRea", "#shRedavalle", "#shRetorbido", "#shRivanazzano Terme", "#shRobbio", "#shRobecco Pavese", "#shRocca de' Giorgi", "#shRocca Susella", "#shRognano", "#shRomagnese", "#shRoncaro", "#shRosasco", "#shRovescala", "#shSan Cipriano Po", "#shSan Damiano al Colle", "#shSan Genesio ed Uniti", "#shSan Giorgio di Lomellina", "#shSan Martino Siccomario", "#shSannazzaro de' Burgondi", "#shSanta Cristina e Bissone", "#shSanta Giuletta", "#shSant'Alessio con Vialone", "#shSanta Margherita di Staffora", "#shSanta Maria della Versa", "#shSant'Angelo Lomellina", "#shSan Zenone al Po", "#shSartirana Lomellina", "#shScaldasole", "#shSemiana", "#shSilvano Pietra", "#shSiziano", "#shSommo", "#shSpessa", "#shStradella", "#shSuardi", "#shTorrazza Coste", "#shTorre Beretti e Castellaro", "#shTorre d'Arese", "#shTorre de' Negri", "#shTorre d'Isola", "#shTorrevecchia Pia", "#shTorricella Verzate", "#shTravacò Siccomario", "#shTrivolzio", "#shTromello", "#shTrovo", "#shVal di Nizza", "#shValeggio", "#shValle Lomellina", "#shValle Salimbene", "#shVarzi", "#shVelezzo Lomellina", "#shVellezzo Bellini", "#shVerretto", "#shVerrua Po", "#shVidigulfo", "#shVigevano", "#shVilla Biscossi", "#shVillanova d'Ardenghi", "#shVillanterio", "#shVistarino", "#shVoghera", "#shVolpara", "#shZavattarello", "#shZeccone", "#shZeme", "#shZenevredo", "#shZerbo", "#shZerbolò", "#shZinasco", "#shCornale e Bastida", "#shCorteolona e Genzone", "#shColli Verdi", "#shAssisi", "#shBastia Umbra", "#shBettona", "#shBevagna", "#shCampello sul Clitunno", "#shCannara", "#shCascia", "#shCastel Ritaldi", "#shCastiglione del Lago", "#shCerreto di Spoleto", "#shCiterna", "#shCittà della Pieve", "#shCittà di Castello", "#shCollazzone", "#shCorciano", "#shCostacciaro", "#shDeruta", "#shFoligno", "#shFossato di Vico", "#shFratta Todina", "#shGiano dell'Umbria", "#shGualdo Cattaneo", "#shGualdo Tadino", "#shGubbio", "#shLisciano Niccone", "#shMagione", "#shMarsciano", "#shMassa Martana", "#shMonte Castello di Vibio", "#shMontefalco", "#shMonteleone di Spoleto", "#shMonte Santa Maria Tiberina", "#shMontone", "#shNocera Umbra", "#shNorcia", "#shPaciano", "#shPanicale", "#shPassignano sul Trasimeno", "#shPerugia", "#shPiegaro", "#shPietralunga", "#shPoggiodomo", "#shPreci", "#shSan Giustino", "#shSant'Anatolia di Narco", "#shScheggia e Pascelupo", "#shScheggino", "#shSellano", "#shSigillo", "#shSpello", "#shSpoleto", "#shTodi", "#shTorgiano", "#shTrevi", "#shTuoro sul Trasimeno", "#shUmbertide", "#shValfabbrica", "#shVallo di Nera", "#shValtopina", "#shAcqualagna", "#shApecchio", "#shBelforte all'Isauro", "#shBorgo Pace", "#shCagli", "#shCantiano", "#shCarpegna", "#shCartoceto", "#shFano", "#shFermignano", "#shFossombrone", "#shFratte Rosa", "#shFrontino", "#shFrontone", "#shGabicce Mare", "#shGradara", "#shIsola del Piano", "#shLunano", "#shMacerata Feltria", "#shMercatello sul Metauro", "#shMercatino Conca", "#shMombaroccio", "#shMondavio", "#shMondolfo", "#shMontecalvo in Foglia", "#shMonte Cerignone", "#shMontecopiolo", "#shMontefelcino", "#shMonte Grimano Terme", "#shMontelabbate", "#shMonte Porzio", "#shPeglio", "#shPergola", "#shPesaro", "#shPetriano", "#shPiandimeleto", "#shPietrarubbia", "#shPiobbico", "#shSan Costanzo", "#shSan Lorenzo in Campo", "#shSant'Angelo in Vado", "#shSant'Ippolito", "#shSassofeltrio", "#shSerra Sant'Abbondio", "#shTavoleto", "#shTavullia", "#shUrbania", "#shUrbino", "#shVallefoglia", "#shColli al Metauro", "#shTerre Roveresche", "#shSassocorvaro Auditore", "#shAbbateggio", "#shAlanno", "#shBolognano", "#shBrittoli", "#shBussi sul Tirino", "#shCappelle sul Tavo", "#shCaramanico Terme", "#shCarpineto della Nora", "#shCastiglione a Casauria", "#shCatignano", "#shCepagatti", "#shCittà Sant'Angelo", "#shCivitaquana", "#shCivitella Casanova", "#shCollecorvino", "#shCorvara", "#shCugnoli", "#shElice", "#shFarindola", "#shLettomanoppello", "#shLoreto Aprutino", "#shManoppello", "#shMontebello di Bertona", "#shMontesilvano", "#shMoscufo", "#shNocciano", "#shPenne", "#shPescara", "#shPescosansonesco", "#shPianella", "#shPicciano", "#shPietranico", "#shPopoli", "#shRoccamorice", "#shRosciano", "#shSalle", "#shSant'Eufemia a Maiella", "#shSan Valentino in Abruzzo Citeriore", "#shScafa", "#shSerramonacesca", "#shSpoltore", "#shTocco da Casauria", "#shTorre de' Passeri", "#shTurrivalignani", "#shVicoli", "#shVilla Celiera", "#shAgazzano", "#shAlseno", "#shBesenzone", "#shBettola", "#shBobbio", "#shBorgonovo Val Tidone", "#shCadeo", "#shCalendasco", "#shCaorso", "#shCarpaneto Piacentino", "#shCastell'Arquato", "#shCastel San Giovanni", "#shCastelvetro Piacentino", "#shCerignale", "#shColi", "#shCorte Brugnatella", "#shCortemaggiore", "#shFarini", "#shFerriere", "#shFiorenzuola d'Arda", "#shGazzola", "#shGossolengo", "#shGragnano Trebbiense", "#shGropparello", "#shLugagnano Val d'Arda", "#shMonticelli d'Ongina", "#shMorfasso", "#shOttone", "#shPiacenza", "#shPianello Val Tidone", "#shPiozzano", "#shPodenzano", "#shPonte dell'Olio", "#shPontenure", "#shRivergaro", "#shRottofreno", "#shSan Giorgio Piacentino", "#shSan Pietro in Cerro", "#shSarmato", "#shTravo", "#shVernasca", "#shVigolzone", "#shVillanova sull'Arda", "#shZerba", "#shZiano Piacentino", "#shAlta Val Tidone", "#shBientina", "#shButi", "#shCalci", "#shCalcinaia", "#shCapannoli", "#shCasale Marittimo", "#shCascina", "#shCastelfranco di Sotto", "#shCastellina Marittima", "#shCastelnuovo di Val di Cecina", "#shChianni", "#shFauglia", "#shGuardistallo", "#shLajatico", "#shMontecatini Val di Cecina", "#shMontescudaio", "#shMonteverdi Marittimo", "#shMontopoli in Val d'Arno", "#shOrciano Pisano", "#shPalaia", "#shPeccioli", "#shPisa", "#shPomarance", "#shPonsacco", "#shPontedera", "#shRiparbella", "#shSan Giuliano Terme", "#shSan Miniato", "#shSanta Croce sull'Arno", "#shSanta Luce", "#shSanta Maria a Monte", "#shTerricciola", "#shVecchiano", "#shVicopisano", "#shVolterra", "#shCasciana Terme Lari", "#shCrespina Lorenzana", "#shAgliana", "#shBuggiano", "#shLamporecchio", "#shLarciano", "#shMarliana", "#shMassa e Cozzile", "#shMonsummano Terme", "#shMontale", "#shMontecatini-Terme", "#shPescia", "#shPieve a Nievole", "#shPistoia", "#shPonte Buggianese", "#shQuarrata", "#shSambuca Pistoiese", "#shSerravalle Pistoiese", "#shUzzano", "#shChiesina Uzzanese", "#shAbetone Cutigliano", "#shSan Marcello Piteglio", "#shAndreis", "#shArba", "#shAviano", "#shAzzano Decimo", "#shBarcis", "#shBrugnera", "#shBudoia", "#shCaneva", "#shCasarsa della Delizia", "#shCastelnovo del Friuli", "#shCavasso Nuovo", "#shChions", "#shCimolais", "#shClaut", "#shClauzetto", "#shCordenons", "#shCordovado", "#shErto e Casso", "#shFanna", "#shFiume Veneto", "#shFontanafredda", "#shFrisanco", "#shManiago", "#shMeduno", "#shMontereale Valcellina", "#shMorsano al Tagliamento", "#shPasiano di Pordenone", "#shPinzano al Tagliamento", "#shPolcenigo", "#shPorcia", "#shPordenone", "#shPrata di Pordenone", "#shPravisdomini", "#shRoveredo in Piano", "#shSacile", "#shSan Giorgio della Richinvelda", "#shSan Martino al Tagliamento", "#shSan Quirino", "#shSan Vito al Tagliamento", "#shSequals", "#shSesto al Reghena", "#shSpilimbergo", "#shTramonti di Sopra", "#shTramonti di Sotto", "#shTravesio", "#shVito d'Asio", "#shVivaro", "#shZoppola", "#shVajont", "#shValvasone Arzene", "#shAbriola", "#shAcerenza", "#shAlbano di Lucania", "#shAnzi", "#shArmento", "#shAtella", "#shAvigliano", "#shBalvano", "#shBanzi", "#shBaragiano", "#shBarile", "#shBella", "#shBrienza", "#shBrindisi Montagna", "#shCalvello", "#shCalvera", "#shCampomaggiore", "#shCancellara", "#shCarbone", "#shSan Paolo Albanese", "#shCastelgrande", "#shCastelluccio Inferiore", "#shCastelluccio Superiore", "#shCastelmezzano", "#shCastelsaraceno", "#shCastronuovo di Sant'Andrea", "#shCersosimo", "#shChiaromonte", "#shCorleto Perticara", "#shEpiscopia", "#shFardella", "#shFiliano", "#shForenza", "#shFrancavilla in Sinni", "#shGallicchio", "#shGenzano di Lucania", "#shGrumento Nova", "#shGuardia Perticara", "#shLagonegro", "#shLatronico", "#shLaurenzana", "#shLauria", "#shLavello", "#shMaratea", "#shMarsico Nuovo", "#shMarsicovetere", "#shMaschito", "#shMelfi", "#shMissanello", "#shMoliterno", "#shMontemilone", "#shMontemurro", "#shMuro Lucano", "#shNemoli", "#shNoepoli", "#shOppido Lucano", "#shPalazzo San Gervasio", "#shPescopagano", "#shPicerno", "#shPietragalla", "#shPietrapertosa", "#shPignola", "#shPotenza", "#shRapolla", "#shRapone", "#shRionero in Vulture", "#shRipacandida", "#shRivello", "#shRoccanova", "#shRotonda", "#shRuoti", "#shRuvo del Monte", "#shSan Chirico Nuovo", "#shSan Chirico Raparo", "#shSan Costantino Albanese", "#shSan Fele", "#shSan Martino d'Agri", "#shSan Severino Lucano", "#shSant'Angelo Le Fratte", "#shSant'Arcangelo", "#shSarconi", "#shSasso di Castalda", "#shSatriano di Lucania", "#shSavoia di Lucania", "#shSenise", "#shSpinoso", "#shTeana", "#shTerranova di Pollino", "#shTito", "#shTolve", "#shTramutola", "#shTrecchina", "#shTrivigno", "#shVaglio Basilicata", "#shVenosa", "#shVietri di Potenza", "#shViggianello", "#shViggiano", "#shGinestra", "#shPaterno", "#shCantagallo", "#shCarmignano", "#shMontemurlo", "#shPoggio a Caiano", "#shPrato", "#shVaiano", "#shVernio", "#shAcate", "#shChiaramonte Gulfi", "#shComiso", "#shGiarratana", "#shIspica", "#shModica", "#shMonterosso Almo", "#shPozzallo", "#shRagusa", "#shSanta Croce Camerina", "#shScicli", "#shVittoria", "#shAlfonsine", "#shBagnacavallo", "#shBagnara di Romagna", "#shBrisighella", "#shCasola Valsenio", "#shCastel Bolognese", "#shCervia", "#shConselice", "#shCotignola", "#shFaenza", "#shFusignano", "#shLugo", "#shMassa Lombarda", "#shRavenna", "#shRiolo Terme", "#shRussi", "#shSant'Agata sul Santerno", "#shSolarolo", "#shAfrico", "#shAgnana Calabra", "#shAnoia", "#shAntonimina", "#shArdore", "#shBagaladi", "#shBagnara Calabra", "#shBenestare", "#shBianco", "#shBivongi", "#shBova", "#shBovalino", "#shBova Marina", "#shBrancaleone", "#shBruzzano Zeffirio", "#shCalanna", "#shCamini", "#shCampo Calabro", "#shCandidoni", "#shCanolo", "#shCaraffa del Bianco", "#shCardeto", "#shCareri", "#shCasignana", "#shCaulonia", "#shCiminà", "#shCinquefrondi", "#shCittanova", "#shCondofuri", "#shCosoleto", "#shDelianuova", "#shFeroleto della Chiesa", "#shFerruzzano", "#shFiumara", "#shGalatro", "#shGerace", "#shGiffone", "#shGioia Tauro", "#shGioiosa Ionica", "#shGrotteria", "#shLaganadi", "#shLaureana di Borrello", "#shLocri", "#shMammola", "#shMarina di Gioiosa Ionica", "#shMaropati", "#shMartone", "#shMelicuccà", "#shMelicucco", "#shMelito di Porto Salvo", "#shMolochio", "#shMonasterace", "#shMontebello Jonico", "#shMotta San Giovanni", "#shOppido Mamertina", "#shPalizzi", "#shPaLME", "#shPazzano", "#shPlacanica", "#shPlatì", "#shPolistena", "#shPortigliola", "#shReggio di Calabria", "#shRiace", "#shRizziconi", "#shRoccaforte del Greco", "#shRoccella Ionica", "#shRoghudi", "#shRosarno", "#shSamo", "#shSan Giorgio Morgeto", "#shSan Giovanni di Gerace", "#shSan Lorenzo", "#shSan Luca", "#shSan Pietro di Caridà", "#shSan Procopio", "#shSan Roberto", "#shSanta Cristina d'Aspromonte", "#shSant'Agata del Bianco", "#shSant'Alessio in Aspromonte", "#shSant'Eufemia d'Aspromonte", "#shSant'Ilario dello Ionio", "#shSanto Stefano in Aspromonte", "#shScido", "#shScilla", "#shSeminara", "#shSerrata", "#shSiderno", "#shSinopoli", "#shStaiti", "#shStignano", "#shStilo", "#shTaurianova", "#shTerranova Sappo Minulio", "#shVarapodio", "#shVilla San Giovanni", "#shSan Ferdinando", "#shAlbinea", "#shBagnolo in Piano", "#shBaiso", "#shBibbiano", "#shBoretto", "#shBrescello", "#shCadelbosco di Sopra", "#shCampagnola Emilia", "#shCampegine", "#shCarpineti", "#shCasalgrande", "#shCasina", "#shCastellarano", "#shCastelnovo di Sotto", "#shCastelnovo ne' Monti", "#shCavriago", "#shCanossa", "#shCorreggio", "#shFabbrico", "#shGattatico", "#shGualtieri", "#shGuastalla", "#shLuzzara", "#shMontecchio Emilia", "#shNovellara", "#shPoviglio", "#shQuattro Castella", "#shReggiolo", "#shReggio nell'Emilia", "#shRio Saliceto", "#shRolo", "#shRubiera", "#shSan Martino in Rio", "#shSan Polo d'Enza", "#shSant'Ilario d'Enza", "#shScandiano", "#shToano", "#shVetto", "#shVezzano sul Crostolo", "#shViano", "#shVilla Minozzo", "#shVentasso", "#shAccumoli", "#shAmatrice", "#shAntrodoco", "#shAscrea", "#shBelmonte in Sabina", "#shBorbona", "#shBorgorose", "#shBorgo Velino", "#shCantalice", "#shCantalupo in Sabina", "#shCasaprota", "#shCasperia", "#shCastel di Tora", "#shCastelnuovo di Farfa", "#shCastel Sant'Angelo", "#shCittaducale", "#shCittareale", "#shCollalto Sabino", "#shColle di Tora", "#shCollegiove", "#shCollevecchio", "#shColli sul Velino", "#shConcerviano", "#shConfigni", "#shContigliano", "#shCottanello", "#shFara in Sabina", "#shFiamignano", "#shForano", "#shFrasso Sabino", "#shGreccio", "#shLabro", "#shLeonessa", "#shLongone Sabino", "#shMagliano Sabina", "#shMarcetelli", "#shMicigliano", "#shMompeo", "#shMontasola", "#shMontebuono", "#shMonteleone Sabino", "#shMontenero Sabino", "#shMonte San Giovanni in Sabina", "#shMontopoli di Sabina", "#shMorro Reatino", "#shNespolo", "#shOrvinio", "#shPaganico Sabino", "#shPescorocchiano", "#shPetrella Salto", "#shPoggio Bustone", "#shPoggio Catino", "#shPoggio Mirteto", "#shPoggio Moiano", "#shPoggio Nativo", "#shPoggio San Lorenzo", "#shPosta", "#shPozzaglia Sabina", "#shRieti", "#shRivodutri", "#shRoccantica", "#shRocca Sinibalda", "#shSalisano", "#shScandriglia", "#shSelci", "#shStimigliano", "#shTarano", "#shToffia", "#shTorricella in Sabina", "#shTorri in Sabina", "#shTurania", "#shVacone", "#shVarco Sabino", "#shBellaria-Igea Marina", "#shCattolica", "#shCoriano", "#shGemmano", "#shMisano Adriatico", "#shMondaino", "#shMontefiore Conca", "#shMontegridolfo", "#shMorciano di Romagna", "#shRiccione", "#shRimini", "#shSaludecio", "#shSan Clemente", "#shSan Giovanni in Marignano", "#shSantarcangelo di Romagna", "#shVerucchio", "#shCasteldelci", "#shMaiolo", "#shNovafeltria", "#shPennabilli", "#shSan Leo", "#shSant'Agata Feltria", "#shTalamello", "#shPoggio Torriana", "#shMontescudo-Monte Colombo", "#shAffile", "#shAgosta", "#shAlbano Laziale", "#shAllumiere", "#shAnguillara Sabazia", "#shAnticoli Corrado", "#shAnzio", "#shArcinazzo Romano", "#shAriccia", "#shArsoli", "#shArtena", "#shBellegra", "#shBracciano", "#shCamerata Nuova", "#shCampagnano di Roma", "#shCanale Monterano", "#shCanterano", "#shCapena", "#shCapranica Prenestina", "#shCarpineto Romano", "#shCasape", "#shCastel Gandolfo", "#shCastel Madama", "#shCastelnuovo di Porto", "#shCastel San Pietro Romano", "#shCave", "#shCerreto Laziale", "#shCervara di Roma", "#shCerveteri", "#shCiciliano", "#shCineto Romano", "#shCivitavecchia", "#shCivitella San Paolo", "#shColleferro", "#shColonna", "#shFiano Romano", "#shFilacciano", "#shFormello", "#shFrascati", "#shGallicano nel Lazio", "#shGavignano", "#shGenazzano", "#shGenzano di Roma", "#shGerano", "#shGorga", "#shGrottaferrata", "#shGuidonia Montecelio", "#shJenne", "#shLabico", "#shLanuvio", "#shLicenza", "#shMagliano Romano", "#shMandela", "#shManziana", "#shMarano Equo", "#shMarcellina", "#shMarino", "#shMazzano Romano", "#shMentana", "#shMonte Compatri", "#shMonteflavio", "#shMontelanico", "#shMontelibretti", "#shMonte Porzio Catone", "#shMonterotondo", "#shMontorio Romano", "#shMoricone", "#shMorlupo", "#shNazzano", "#shNemi", "#shNerola", "#shNettuno", "#shOlevano Romano", "#shPalestrina", "#shPalombara Sabina", "#shPercile", "#shPisoniano", "#shPoli", "#shPomezia", "#shPonzano Romano", "#shRiano", "#shRignano Flaminio", "#shRiofreddo", "#shRocca Canterano", "#shRocca di Cave", "#shRocca di Papa", "#shRoccagiovine", "#shRocca Priora", "#shRocca Santo Stefano", "#shRoiate", "#shRoma", "#shRoviano", "#shSacrofano", "#shSambuci", "#shSan Gregorio da Sassola", "#shSan Polo dei Cavalieri", "#shSanta Marinella", "#shSant'Angelo Romano", "#shSant'Oreste", "#shSan Vito Romano", "#shSaracinesco", "#shSegni", "#shSubiaco", "#shTivoli", "#shTolfa", "#shTorrita Tiberina", "#shTrevignano Romano", "#shVallepietra", "#shVallinfreda", "#shValmontone", "#shVelletri", "#shVicovaro", "#shVivaro Romano", "#shZagarolo", "#shLariano", "#shLadispoli", "#shArdea", "#shCiampino", "#shSan Cesareo", "#shFiumicino", "#shFonte Nuova", "#shAdria", "#shAriano nel Polesine", "#shArquà Polesine", "#shBadia Polesine", "#shBagnolo di Po", "#shBergantino", "#shBosaro", "#shCalto", "#shCanaro", "#shCanda", "#shCastelguglielmo", "#shCastelmassa", "#shCastelnovo Bariano", "#shCeneselli", "#shCeregnano", "#shCorbola", "#shCosta di Rovigo", "#shCrespino", "#shFicarolo", "#shFiesso Umbertiano", "#shFrassinelle Polesine", "#shFratta Polesine", "#shGaiba", "#shGavello", "#shGiacciano con Baruchella", "#shGuarda Veneta", "#shLendinara", "#shLoreo", "#shLusia", "#shMelara", "#shOcchiobello", "#shPapozze", "#shPettorazza Grimani", "#shPincara", "#shPolesella", "#shPontecchio Polesine", "#shPorto Tolle", "#shRosolina", "#shRovigo", "#shSalara", "#shSan Bellino", "#shSan Martino di Venezze", "#shStienta", "#shTaglio di Po", "#shTrecenta", "#shVilladose", "#shVillamarzana", "#shVillanova del Ghebbo", "#shVillanova Marchesana", "#shPorto Viro", "#shAcerno", "#shAgropoli", "#shAlbanella", "#shAlfano", "#shAltavilla Silentina", "#shAmalfi", "#shAngri", "#shAquara", "#shAscea", "#shAtena Lucana", "#shAtrani", "#shAuletta", "#shBaronissi", "#shBattipaglia", "#shBellosguardo", "#shBracigliano", "#shBuccino", "#shBuonabitacolo", "#shCaggiano", "#shCalvanico", "#shCamerota", "#shCampagna", "#shCampora", "#shCannalonga", "#shCapaccio Paestum", "#shCasalbuono", "#shCasaletto Spartano", "#shCasal Velino", "#shCaselle in Pittari", "#shCastelcivita", "#shCastellabate", "#shCastelnuovo Cilento", "#shCastelnuovo di Conza", "#shCastel San Giorgio", "#shCastel San Lorenzo", "#shCastiglione del Genovesi", "#shCava de' Tirreni", "#shCelle di Bulgheria", "#shCentola", "#shCeraso", "#shCetara", "#shCicerale", "#shColliano", "#shConca dei Marini", "#shControne", "#shContursi Terme", "#shCorbara", "#shCorleto Monforte", "#shCuccaro Vetere", "#shEboli", "#shFelitto", "#shFisciano", "#shFurore", "#shFutani", "#shGiffoni Sei Casali", "#shGiffoni Valle Piana", "#shGioi", "#shGiungano", "#shIspani", "#shLaureana Cilento", "#shLaurino", "#shLaurito", "#shLaviano", "#shLustra", "#shMagliano Vetere", "#shMaiori", "#shMercato San Severino", "#shMinori", "#shMoio della Civitella", "#shMontano Antilia", "#shMontecorice", "#shMontecorvino Pugliano", "#shMontecorvino Rovella", "#shMonteforte Cilento", "#shMonte San Giacomo", "#shMontesano sulla Marcellana", "#shMorigerati", "#shNocera Inferiore", "#shNocera Superiore", "#shNovi Velia", "#shOgliastro Cilento", "#shOlevano sul Tusciano", "#shOliveto Citra", "#shOmignano", "#shOrria", "#shOttati", "#shPadula", "#shPagani", "#shPalomonte", "#shPellezzano", "#shPerdifumo", "#shPerito", "#shPertosa", "#shPetina", "#shPiaggine", "#shPisciotta", "#shPolla", "#shPollica", "#shPontecagnano Faiano", "#shPositano", "#shPostiglione", "#shPraiano", "#shPrignano Cilento", "#shRavello", "#shRicigliano", "#shRoccadaspide", "#shRoccagloriosa", "#shRoccapiemonte", "#shRofrano", "#shRomagnano al Monte", "#shRoscigno", "#shRutino", "#shSacco", "#shSala Consilina", "#shSalento", "#shSalerno", "#shSalvitelle", "#shSan Cipriano Picentino", "#shSan Giovanni a Piro", "#shSan Gregorio Magno", "#shSan Mango Piemonte", "#shSan Marzano sul Sarno", "#shSan Mauro Cilento", "#shSan Mauro la Bruca", "#shSan Pietro al Tanagro", "#shSan Rufo", "#shSanta Marina", "#shSant'Angelo a Fasanella", "#shSant'Arsenio", "#shSant'Egidio del Monte Albino", "#shSantomenna", "#shSan Valentino Torio", "#shSanza", "#shSapri", "#shSarno", "#shSassano", "#shScafati", "#shScala", "#shSerramezzana", "#shSerre", "#shSessa Cilento", "#shSiano", "#shSicignano degli Alburni", "#shStella Cilento", "#shStio", "#shTeggiano", "#shTorchiara", "#shTorraca", "#shTorre Orsaia", "#shTortorella", "#shTramonti", "#shTrentinara", "#shValle dell'Angelo", "#shVallo della Lucania", "#shValva", "#shVibonati", "#shVietri sul Mare", "#shBellizzi", "#shAggius", "#shAlà dei Sardi", "#shAlghero", "#shAnela", "#shArdara", "#shArzachena", "#shBanari", "#shBenetutti", "#shBerchidda", "#shBessude", "#shBonnanaro", "#shBono", "#shBonorva", "#shBortigiadas", "#shBorutta", "#shBottidda", "#shBuddusò", "#shBultei", "#shBulzi", "#shBurgos", "#shCalangianus", "#shCargeghe", "#shCastelsardo", "#shCheremule", "#shChiaramonti", "#shCodrongianos", "#shCossoine", "#shEsporlatu", "#shFlorinas", "#shGiave", "#shIllorai", "#shIttireddu", "#shIttiri", "#shLaerru", "#shLa Maddalena", "#shLuogosanto", "#shLuras", "#shMara", "#shMartis", "#shMonteleone Rocca Doria", "#shMonti", "#shMores", "#shMuros", "#shNughedu San Nicolò", "#shNule", "#shNulvi", "#shOlbia", "#shOlmedo", "#shOschiri", "#shOsilo", "#shOssi", "#shOzieri", "#shPadria", "#shPalau", "#shPattada", "#shPerfugas", "#shPloaghe", "#shPorto Torres", "#shPozzomaggiore", "#shPutifigari", "#shRomana", "#shAglientu", "#shSanta Teresa Gallura", "#shSassari", "#shSedini", "#shSemestene", "#shSennori", "#shSiligo", "#shSorso", "#shTempio Pausania", "#shThiesi", "#shTissi", "#shTorralba", "#shTrinità d'Agultu e Vignola", "#shTula", "#shUri", "#shUsini", "#shVillanova Monteleone", "#shValledoria", "#shTelti", "#shBadesi", "#shViddalba", "#shGolfo Aranci", "#shLoiri Porto San Paolo", "#shSant'Antonio di Gallura", "#shTergu", "#shSanta Maria Coghinas", "#shErula", "#shStintino", "#shPadru", "#shBudoni", "#shSan Teodoro", "#shAlassio", "#shAlbenga", "#shAlbissola Marina", "#shAlbisola Superiore", "#shAltare", "#shAndora", "#shArnasco", "#shBalestrino", "#shBardineto", "#shBergeggi", "#shBoissano", "#shBorghetto Santo Spirito", "#shBorgio Verezzi", "#shBormida", "#shCairo Montenotte", "#shCalice Ligure", "#shCalizzano", "#shCarcare", "#shCasanova Lerrone", "#shCastelbianco", "#shCastelvecchio di Rocca Barbena", "#shCelle Ligure", "#shCengio", "#shCeriale", "#shCisano sul Neva", "#shCosseria", "#shDego", "#shErli", "#shFinale Ligure", "#shGarlenda", "#shGiustenice", "#shGiusvalla", "#shLaigueglia", "#shLoano", "#shMagliolo", "#shMallare", "#shMassimino", "#shMillesimo", "#shMioglia", "#shMurialdo", "#shNasino", "#shNoli", "#shOnzo", "#shOrco Feglino", "#shOrtovero", "#shOsiglia", "#shPallare", "#shPiana Crixia", "#shPietra Ligure", "#shPlodio", "#shPontinvrea", "#shQuiliano", "#shRialto", "#shRoccavignale", "#shSassello", "#shSavona", "#shSpotorno", "#shStella", "#shStellanello", "#shTestico", "#shToirano", "#shTovo San Giacomo", "#shUrbe", "#shVado Ligure", "#shVarazze", "#shVendone", "#shVezzi Portio", "#shVillanova d'Albenga", "#shZuccarello", "#shAbbadia San Salvatore", "#shAsciano", "#shBuonconvento", "#shCasole d'Elsa", "#shCastellina in Chianti", "#shCastelnuovo Berardenga", "#shCastiglione d'Orcia", "#shCetona", "#shChianciano Terme", "#shChiusdino", "#shChiusi", "#shColle di Val d'Elsa", "#shGaiole in Chianti", "#shMontepulciano", "#shMonteriggioni", "#shMonteroni d'Arbia", "#shMonticiano", "#shMurlo", "#shPiancastagnaio", "#shPienza", "#shPoggibonsi", "#shRadda in Chianti", "#shRadicofani", "#shRadicondoli", "#shRapolano Terme", "#shSan Casciano dei Bagni", "#shSan Gimignano", "#shSan Quirico d'Orcia", "#shSarteano", "#shSiena", "#shSinalunga", "#shSovicille", "#shTorrita di Siena", "#shTrequanda", "#shMontalcino", "#shAugusta", "#shAvola", "#shBuccheri", "#shBuscemi", "#shCanicattini Bagni", "#shCarlentini", "#shCassaro", "#shFerla", "#shFloridia", "#shFrancofonte", "#shLentini", "#shMelilli", "#shNoto", "#shPachino", "#shPalazzolo Acreide", "#shRosolini", "#shSiracusa", "#shSolarino", "#shSortino", "#shPortopalo di Capo Passero", "#shPriolo Gargallo", "#shAlbaredo per San Marco", "#shAlbosaggia", "#shAndalo Valtellino", "#shAprica", "#shArdenno", "#shBema", "#shBerbenno di Valtellina", "#shBianzone", "#shBormio", "#shBuglio in Monte", "#shCaiolo", "#shCampodolcino", "#shCaspoggio", "#shCastello dell'Acqua", "#shCastione Andevenno", "#shCedrasco", "#shCercino", "#shChiavenna", "#shChiesa in Valmalenco", "#shChiuro", "#shCino", "#shCivo", "#shColorina", "#shCosio Valtellino", "#shDazio", "#shDelebio", "#shDubino", "#shFaedo Valtellino", "#shForcola", "#shFusine", "#shGerola Alta", "#shGordona", "#shGrosio", "#shGrosotto", "#shMadesimo", "#shLanzada", "#shLivigno", "#shLovero", "#shMantello", "#shMazzo di Valtellina", "#shMello", "#shMese", "#shMontagna in Valtellina", "#shMorbegno", "#shNovate Mezzola", "#shPedesina", "#shPiantedo", "#shPiateda", "#shPiuro", "#shPoggiridenti", "#shPonte in Valtellina", "#shPostalesio", "#shPrata Camportaccio", "#shRasura", "#shRogolo", "#shSamolaco", "#shSan Giacomo Filippo", "#shSernio", "#shSondalo", "#shSondrio", "#shSpriana", "#shTalamona", "#shTartano", "#shTeglio", "#shTirano", "#shTorre di Santa Maria", "#shTovo di Sant'Agata", "#shTraona", "#shTresivio", "#shValdidentro", "#shValdisotto", "#shValfurva", "#shVal Masino", "#shVerceia", "#shVervio", "#shVilla di Chiavenna", "#shVilla di Tirano", "#shArbus", "#shArmungia", "#shBallao", "#shBarrali", "#shBarumini", "#shBuggerru", "#shBurcei", "#shCalasetta", "#shCarbonia", "#shCarloforte", "#shCastiadas", "#shCollinas", "#shDecimoputzu", "#shDolianova", "#shDomus de Maria", "#shDomusnovas", "#shDonori", "#shEscalaplano", "#shEscolca", "#shEsterzili", "#shFluminimaggiore", "#shFurtei", "#shGenoni", "#shGenuri", "#shGergei", "#shGesico", "#shGesturi", "#shGiba", "#shGoni", "#shGonnesa", "#shGonnosfanadiga", "#shGuamaggiore", "#shGuasila", "#shGuspini", "#shIglesias", "#shIsili", "#shLas Plassas", "#shLunamatrona", "#shMandas", "#shMasainas", "#shMonastir", "#shMuravera", "#shMusei", "#shNarcao", "#shNuragus", "#shNurallao", "#shNuraminis", "#shNurri", "#shNuxis", "#shOrroli", "#shOrtacesus", "#shPabillonis", "#shPauli Arbarei", "#shPerdaxius", "#shPimentel", "#shPiscinas", "#shPortoscuso", "#shSadali", "#shSamassi", "#shSamatzai", "#shSan Basilio", "#shSan Gavino Monreale", "#shSan Giovanni Suergiu", "#shSan Nicolò Gerrei", "#shSan Sperate", "#shSan Vito", "#shSanluri", "#shSantadi", "#shSant'Andrea Frius", "#shSant'Anna Arresi", "#shSant'Antioco", "#shSardara", "#shSegariu", "#shSelegas", "#shSenorbì", "#shSerdiana", "#shSerramanna", "#shSerrenti", "#shSerri", "#shSetzu", "#shSeui", "#shSeulo", "#shSiddi", "#shSiliqua", "#shSilius", "#shSiurgus Donigala", "#shSoleminis", "#shSuelli", "#shTeulada", "#shTratalias", "#shTuili", "#shTurri", "#shUssana", "#shUssaramanna", "#shVallermosa", "#shVillacidro", "#shVillamar", "#shVillamassargia", "#shVillanova Tulo", "#shVillanovaforru", "#shVillanovafranca", "#shVillaperuccio", "#shVillaputzu", "#shVillasalto", "#shVillasimius", "#shVillasor", "#shVillaspeciosa", "#shAvetrana", "#shCarosino", "#shCastellaneta", "#shCrispiano", "#shFaggiano", "#shFragagnano", "#shGinosa", "#shGrottaglie", "#shLaterza", "#shLeporano", "#shLizzano", "#shManduria", "#shMartina Franca", "#shMaruggio", "#shMassafra", "#shMonteiasi", "#shMontemesola", "#shMonteparano", "#shMottola", "#shPalagianello", "#shPalagiano", "#shPulsano", "#shRoccaforzata", "#shSan Giorgio Ionico", "#shSan Marzano di San Giuseppe", "#shSava", "#shTaranto", "#shTorricella", "#shStatte", "#shAlba Adriatica", "#shAncarano", "#shArsita", "#shAtri", "#shBasciano", "#shBellante", "#shBisenti", "#shCampli", "#shCanzano", "#shCastel Castagna", "#shCastellalto", "#shCastelli", "#shCastiglione Messer Raimondo", "#shCastilenti", "#shCellino Attanasio", "#shCermignano", "#shCivitella del Tronto", "#shColledara", "#shColonnella", "#shControguerra", "#shCorropoli", "#shCortino", "#shCrognaleto", "#shFano Adriano", "#shGiulianova", "#shIsola del Gran Sasso d'Italia", "#shMontefino", "#shMontorio al Vomano", "#shMorro d'Oro", "#shMosciano Sant'Angelo", "#shNereto", "#shNotaresco", "#shPenna Sant'Andrea", "#shPietracamela", "#shPineto", "#shRocca Santa Maria", "#shRoseto degli Abruzzi", "#shSant'Egidio alla Vibrata", "#shSant'Omero", "#shSilvi", "#shTeramo", "#shTorano Nuovo", "#shTorricella Sicura", "#shTortoreto", "#shTossicia", "#shValle Castellana", "#shMartinsicuro", "#shAcquasparta", "#shAllerona", "#shAlviano", "#shAmelia", "#shArrone", "#shAttigliano", "#shBaschi", "#shCalvi dell'Umbria", "#shCastel Giorgio", "#shCastel Viscardo", "#shFabro", "#shFerentillo", "#shFiculle", "#shGiove", "#shGuardea", "#shLugnano in Teverina", "#shMontecastrilli", "#shMontecchio", "#shMontefranco", "#shMontegabbione", "#shMonteleone d'Orvieto", "#shNarni", "#shOrvieto", "#shOtricoli", "#shParrano", "#shPenna in Teverina", "#shPolino", "#shPorano", "#shSan Gemini", "#shSan Venanzo", "#shStroncone", "#shTerni", "#shAvigliano Umbro", "#shAgliè", "#shAirasca", "#shAla di Stura", "#shAlbiano d'Ivrea", "#shAlmese", "#shAlpette", "#shAlpignano", "#shAndezeno", "#shAndrate", "#shAngrogna", "#shArignano", "#shAvigliana", "#shAzeglio", "#shBairo", "#shBalangero", "#shBaldissero Canavese", "#shBaldissero Torinese", "#shBalme", "#shBanchette", "#shBarbania", "#shBardonecchia", "#shBarone Canavese", "#shBeinasco", "#shBibiana", "#shBobbio Pellice", "#shBollengo", "#shBorgaro Torinese", "#shBorgiallo", "#shBorgofranco d'Ivrea", "#shBorgomasino", "#shBorgone Susa", "#shBosconero", "#shBrandizzo", "#shBricherasio", "#shBrosso", "#shBrozolo", "#shBruino", "#shBrusasco", "#shBruzolo", "#shBuriasco", "#shBurolo", "#shBusano", "#shBussoleno", "#shButtigliera Alta", "#shCafasse", "#shCaluso", "#shCambiano", "#shCampiglione Fenile", "#shCandia Canavese", "#shCandiolo", "#shCanischio", "#shCantalupa", "#shCantoira", "#shCaprie", "#shCaravino", "#shCarema", "#shCarignano", "#shCarmagnola", "#shCasalborgone", "#shCascinette d'Ivrea", "#shCaselette", "#shCaselle Torinese", "#shCastagneto Po", "#shCastagnole Piemonte", "#shCastellamonte", "#shCastelnuovo Nigra", "#shCastiglione Torinese", "#shCavagnolo", "#shCavour", "#shCercenasco", "#shCeres", "#shCeresole Reale", "#shCesana Torinese", "#shChialamberto", "#shChianocco", "#shChiaverano", "#shChieri", "#shChiesanuova", "#shChiomonte", "#shChiusa di San Michele", "#shChivasso", "#shCiconio", "#shCintano", "#shCinzano", "#shCiriè", "#shClaviere", "#shCoassolo Torinese", "#shCoazze", "#shCollegno", "#shColleretto Castelnuovo", "#shColleretto Giacosa", "#shCondove", "#shCorio", "#shCossano Canavese", "#shCuceglio", "#shCumiana", "#shCuorgnè", "#shDruento", "#shExilles", "#shFavria", "#shFeletto", "#shFenestrelle", "#shFiano", "#shFiorano Canavese", "#shFoglizzo", "#shForno Canavese", "#shFrassinetto", "#shFront", "#shFrossasco", "#shGarzigliana", "#shGassino Torinese", "#shGermagnano", "#shGiaglione", "#shGiaveno", "#shGivoletto", "#shGravere", "#shGroscavallo", "#shGrosso", "#shGrugliasco", "#shIngria", "#shInverso Pinasca", "#shIsolabella", "#shIssiglio", "#shIvrea", "#shLa Cassa", "#shLa Loggia", "#shLanzo Torinese", "#shLauriano", "#shLeini", "#shLemie", "#shLessolo", "#shLevone", "#shLocana", "#shLombardore", "#shLombriasco", "#shLoranzè", "#shLuserna San Giovanni", "#shLusernetta", "#shLusigliè", "#shMacello", "#shMaglione", "#shMarentino", "#shMassello", "#shMathi", "#shMattie", "#shMazzè", "#shMeana di Susa", "#shMercenasco", "#shMezzenile", "#shMombello di Torino", "#shMompantero", "#shMonastero di Lanzo", "#shMoncalieri", "#shMoncenisio", "#shMontaldo Torinese", "#shMontalenghe", "#shMontalto Dora", "#shMontanaro", "#shMonteu da Po", "#shMoriondo Torinese", "#shNichelino", "#shNoasca", "#shNole", "#shNomaglio", "#shNone", "#shNovalesa", "#shOglianico", "#shOrbassano", "#shOrio Canavese", "#shOsasco", "#shOsasio", "#shOulx", "#shOzegna", "#shPalazzo Canavese", "#shPancalieri", "#shParella", "#shPavarolo", "#shPavone Canavese", "#shPecetto Torinese", "#shPerosa Argentina", "#shPerosa Canavese", "#shPerrero", "#shPertusio", "#shPessinetto", "#shPianezza", "#shPinasca", "#shPinerolo", "#shPino Torinese", "#shPiobesi Torinese", "#shPiossasco", "#shPiscina", "#shPiverone", "#shPoirino", "#shPomaretto", "#shPont-Canavese", "#shPorte", "#shPragelato", "#shPrali", "#shPralormo", "#shPramollo", "#shPrarostino", "#shPrascorsano", "#shPratiglione", "#shQuagliuzzo", "#shQuassolo", "#shQuincinetto", "#shReano", "#shRibordone", "#shRivalba", "#shRivalta di Torino", "#shRiva presso Chieri", "#shRivara", "#shRivarolo Canavese", "#shRivarossa", "#shRivoli", "#shRobassomero", "#shRocca Canavese", "#shRoletto", "#shRomano Canavese", "#shRonco Canavese", "#shRondissone", "#shRorà", "#shRoure", "#shRosta", "#shRubiana", "#shRueglio", "#shSalassa", "#shSalbertrand", "#shSalerano Canavese", "#shSalza di Pinerolo", "#shSamone ", "#shSan Benigno Canavese", "#shSan Carlo Canavese", "#shSan Colombano Belmonte", "#shSan Didero", "#shSan Francesco al Campo", "#shSangano", "#shSan Germano Chisone", "#shSan Gillio", "#shSan Giorgio Canavese", "#shSan Giorio di Susa", "#shSan Giusto Canavese", "#shSan Martino Canavese", "#shSan Maurizio Canavese", "#shSan Mauro Torinese", "#shSan Pietro Val Lemina", "#shSan Ponso", "#shSan Raffaele Cimena", "#shSan Sebastiano da Po", "#shSan Secondo di Pinerolo", "#shSant'Ambrogio di Torino", "#shSant'Antonino di Susa", "#shSantena", "#shSauze di Cesana", "#shSauze d'Oulx", "#shScalenghe", "#shScarmagno", "#shSciolze", "#shSestriere", "#shSettimo Rottaro", "#shSettimo Torinese", "#shSettimo Vittone", "#shSparone", "#shStrambinello", "#shStrambino", "#shSusa", "#shTavagnasco", "#shTorino", "#shTorrazza Piemonte", "#shTorre Canavese", "#shTorre Pellice", "#shTrana", "#shTraversella", "#shTraves", "#shTrofarello", "#shUsseaux", "#shUsseglio", "#shVaie", "#shVal della Torre", "#shValgioie", "#shVallo Torinese", "#shValperga", "#shValprato Soana", "#shVarisella", "#shVauda Canavese", "#shVenaus", "#shVenaria Reale", "#shVerolengo", "#shVerrua Savoia", "#shVestignè", "#shVialfrè", "#shVidracco", "#shVigone", "#shVillafranca Piemonte", "#shVillanova Canavese", "#shVillarbasse", "#shVillar Dora", "#shVillareggia", "#shVillar Focchiardo", "#shVillar Pellice", "#shVillar Perosa", "#shVillastellone", "#shVinovo", "#shVirle Piemonte", "#shVische", "#shVistrorio", "#shViù", "#shVolpiano", "#shVolvera", "#shMappano", "#shVal di Chy", "#shValchiusa", "#shAlcamo", "#shBuseto Palizzolo", "#shCalatafimi-Segesta", "#shCampobello di Mazara", "#shCastellammare del Golfo", "#shCastelvetrano", "#shCustonaci", "#shErice", "#shFavignana", "#shGibellina", "#shMarsala", "#shMazara del Vallo", "#shPaceco", "#shPantelleria", "#shPartanna", "#shPoggioreale", "#shSalaparuta", "#shSalemi", "#shSanta Ninfa", "#shSan Vito Lo Capo", "#shTrapani", "#shValderice", "#shVita", "#shPetrosino", "#shAla", "#shAlbiano", "#shAldeno", "#shAndalo", "#shArco", "#shAvio", "#shBaselga di Pinè", "#shBedollo", "#shBesenello", "#shBieno", "#shBleggio Superiore", "#shBocenago", "#shBondone", "#shBorgo Valsugana", "#shBrentonico", "#shBresimo", "#shCaderzone Terme", "#shCalceranica al Lago", "#shCaldes", "#shCaldonazzo", "#shCalliano", "#shCampitello di Fassa", "#shCampodenno", "#shCanal San Bovo", "#shCanazei", "#shCapriana", "#shCarisolo", "#shCarzano", "#shCastel Condino", "#shCastello-Molina di Fiemme", "#shCastello Tesino", "#shCastelnuovo", "#shCavalese", "#shCavareno", "#shCavedago", "#shCavedine", "#shCavizzana", "#shCimone", "#shCinte Tesino", "#shCis", "#shCivezzano", "#shCles", "#shCommezzadura", "#shCroviana", "#shDambel", "#shDenno", "#shDrena", "#shDro", "#shFai della Paganella", "#shFiavè", "#shFierozzo", "#shFolgaria", "#shFornace", "#shFrassilongo", "#shGarniga Terme", "#shGiovo", "#shGiustino", "#shGrigno", "#shImer", "#shIsera", "#shLavarone", "#shLavis", "#shLevico Terme", "#shLivo", "#shLona-Lases", "#shLuserna", "#shMalé", "#shMassimeno", "#shMazzin", "#shMezzana", "#shMezzano", "#shMezzocorona", "#shMezzolombardo", "#shMoena", "#shMolveno", "#shMori", "#shNago-Torbole", "#shNogaredo", "#shNomi", "#shNovaledo", "#shOspedaletto", "#shOssana", "#shPalù del Fersina", "#shPanchià", "#shRonzo-Chienis", "#shPeio", "#shPellizzano", "#shPelugo", "#shPergine Valsugana", "#shPieve Tesino", "#shPinzolo", "#shPomarolo", "#shPredazzo", "#shRabbi", "#shRiva del Garda", "#shRomeno", "#shRoncegno Terme", "#shRonchi Valsugana", "#shRonzone", "#shRoverè della Luna", "#shRovereto", "#shRuffrè-Mendola", "#shRumo", "#shSagron Mis", "#shSamone", "#shSan Michele all'Adige", "#shSant'Orsola Terme", "#shSanzeno", "#shSarnonico", "#shScurelle", "#shSegonzano", "#shSfruz", "#shSoraga di Fassa", "#shSover", "#shSpiazzo", "#shSpormaggiore", "#shSporminore", "#shStenico", "#shStoro", "#shStrembo", "#shTelve", "#shTelve di Sopra", "#shTenna", "#shTenno", "#shTerragnolo", "#shTerzolas", "#shTesero", "#shTione di Trento", "#shTon", "#shTorcegno", "#shTrambileno", "#shTrento", "#shValfloriana", "#shVallarsa", "#shVermiglio", "#shVignola-Falesina", "#shVilla Lagarina", "#shVolano", "#shZiano di Fiemme", "#shComano Terme", "#shLedro", "#shPredaia", "#shSan Lorenzo Dorsino", "#shValdaone", "#shDimaro Folgarida", "#shPieve di Bono-Prezzo", "#shAltavalle", "#shAltopiano della Vigolana", "#shAmblar-Don", "#shBorgo Chiese", "#shBorgo Lares", "#shCastel Ivano", "#shCembra Lisignago", "#shContà", "#shMadruzzo", "#shPorte di Rendena", "#shPrimiero San Martino di Castrozza", "#shSella Giudicarie", "#shTre Ville", "#shVallelaghi", "#shVille d'Anaunia", "#shSan Giovanni di Fassa", "#shTerre d'Adige", "#shBorgo d'Anaunia", "#shNovella", "#shVille di Fiemme", "#shAltivole", "#shArcade", "#shAsolo", "#shBorso del Grappa", "#shBreda di Piave", "#shCaerano di San Marco", "#shCappella Maggiore", "#shCarbonera", "#shCasale sul Sile", "#shCasier", "#shCastelcucco", "#shCastelfranco Veneto", "#shCastello di Godego", "#shCavaso del Tomba", "#shCessalto", "#shChiarano", "#shCimadolmo", "#shCison di Valmarino", "#shCodognè", "#shColle Umberto", "#shConegliano", "#shCordignano", "#shCornuda", "#shCrocetta del Montello", "#shFarra di Soligo", "#shFollina", "#shFontanelle", "#shFonte", "#shFregona", "#shGaiarine", "#shGiavera del Montello", "#shGodega di Sant'Urbano", "#shGorgo al Monticano", "#shIstrana", "#shLoria", "#shMansuè", "#shMareno di Piave", "#shMaser", "#shMaserada sul Piave", "#shMeduna di Livenza", "#shMiane", "#shMogliano Veneto", "#shMonastier di Treviso", "#shMonfumo", "#shMontebelluna", "#shMorgano", "#shMoriago della Battaglia", "#shMotta di Livenza", "#shNervesa della Battaglia", "#shOderzo", "#shOrmelle", "#shOrsago", "#shPaese", "#shPederobba", "#shPieve di Soligo", "#shPonte di Piave", "#shPonzano Veneto", "#shPortobuffolè", "#shPossagno", "#shPovegliano", "#shPreganziol", "#shQuinto di Treviso", "#shRefrontolo", "#shResana", "#shRevine Lago", "#shRiese Pio X", "#shRoncade", "#shSalgareda", "#shSan Biagio di Callalta", "#shSan Fior", "#shSan Pietro di Feletto", "#shSan Polo di Piave", "#shSanta Lucia di Piave", "#shSan Vendemiano", "#shSan Zenone degli Ezzelini", "#shSarmede", "#shSegusino", "#shSernaglia della Battaglia", "#shSilea", "#shSpresiano", "#shSusegana", "#shTarzo", "#shTrevignano", "#shTreviso", "#shValdobbiadene", "#shVazzola", "#shVedelago", "#shVidor", "#shVillorba", "#shVittorio Veneto", "#shVolpago del Montello", "#shZenson di Piave", "#shZero Branco", "#shPieve del Grappa", "#shDuino Aurisina", "#shMonrupino", "#shMuggia", "#shSan Dorligo della Valle", "#shSgonico", "#shTrieste", "#shAiello del Friuli", "#shAmaro", "#shAmpezzo", "#shAquileia", "#shArta Terme", "#shArtegna", "#shAttimis", "#shBagnaria Arsa", "#shBasiliano", "#shBertiolo", "#shBicinicco", "#shBordano", "#shBuja", "#shButtrio", "#shCamino al Tagliamento", "#shCampoformido", "#shCarlino", "#shCassacco", "#shCastions di Strada", "#shCavazzo Carnico", "#shCercivento", "#shCervignano del Friuli", "#shChiopris-Viscone", "#shChiusaforte", "#shCividale del Friuli", "#shCodroipo", "#shColloredo di Monte Albano", "#shComeglians", "#shCorno di Rosazzo", "#shCoseano", "#shDignano", "#shDogna", "#shDrenchia", "#shEnemonzo", "#shFaedis", "#shFagagna", "#shFlaibano", "#shForni Avoltri", "#shForni di Sopra", "#shForni di Sotto", "#shGemona del Friuli", "#shGonars", "#shGrimacco", "#shLatisana", "#shLauco", "#shLestizza", "#shLignano Sabbiadoro", "#shLusevera", "#shMagnano in Riviera", "#shMajano", "#shMalborghetto Valbruna", "#shManzano", "#shMarano Lagunare", "#shMartignacco", "#shMereto di Tomba", "#shMoggio Udinese", "#shMoimacco", "#shMontenars", "#shMortegliano", "#shMoruzzo", "#shMuzzana del Turgnano", "#shNimis", "#shOsoppo", "#shOvaro", "#shPagnacco", "#shPalazzolo dello Stella", "#shPalmanova", "#shPaluzza", "#shPasian di Prato", "#shPaularo", "#shPavia di Udine", "#shPocenia", "#shPontebba", "#shPorpetto", "#shPovoletto", "#shPozzuolo del Friuli", "#shPradamano", "#shPrato Carnico", "#shPrecenicco", "#shPremariacco", "#shPreone", "#shPrepotto", "#shPulfero", "#shRagogna", "#shRavascletto", "#shRaveo", "#shReana del Rojale", "#shRemanzacco", "#shResia", "#shResiutta", "#shRigolato", "#shRive d'Arcano", "#shRonchis", "#shRuda", "#shSan Daniele del Friuli", "#shSan Giorgio di Nogaro", "#shSan Giovanni al Natisone", "#shSan Leonardo", "#shSan Pietro al Natisone", "#shSanta Maria la Longa", "#shSan Vito al Torre", "#shSan Vito di Fagagna", "#shSauris", "#shSavogna", "#shSedegliano", "#shSocchieve", "#shStregna", "#shSutrio", "#shTaipana", "#shTalmassons", "#shTarcento", "#shTarvisio", "#shTavagnacco", "#shTerzo d'Aquileia", "#shTolmezzo", "#shTorreano", "#shTorviscosa", "#shTrasaghis", "#shTreppo Grande", "#shTricesimo", "#shTrivignano Udinese", "#shUdine", "#shVarmo", "#shVenzone", "#shVerzegnis", "#shVilla Santina", "#shVisco", "#shZuglio", "#shForgaria nel Friuli", "#shCampolongo Tapogliano", "#shRivignano Teor", "#shSappada", "#shFiumicello Villa Vicentina", "#shTreppo Ligosullo", "#shAllein", "#shAntey-Saint-André", "#shAosta", "#shArnad", "#shArvier", "#shAvise", "#shAyas", "#shAymavilles", "#shBard", "#shBionaz", "#shBrissogne", "#shBrusson", "#shChalland-Saint-Anselme", "#shChalland-Saint-Victor", "#shChambave", "#shChamois", "#shChampdepraz", "#shChamporcher", "#shCharvensod", "#shChâtillon", "#shCogne", "#shCourmayeur", "#shDonnas", "#shDoues", "#shEmarèse", "#shEtroubles", "#shFénis", "#shFontainemore", "#shGaby", "#shGignod", "#shGressan", "#shGressoney-La-Trinité", "#shGressoney-Saint-Jean", "#shHône", "#shIntrod", "#shIssime", "#shIssogne", "#shJovençan", "#shLa Magdeleine", "#shLa Salle", "#shLa Thuile", "#shLillianes", "#shMontjovet", "#shMorgex", "#shNus", "#shOllomont", "#shOyace", "#shPerloz", "#shPollein", "#shPontboset", "#shPontey", "#shPont-Saint-Martin", "#shPré-Saint-Didier", "#shQuart", "#shRhêmes-Notre-Dame", "#shRhêmes-Saint-Georges", "#shRoisan", "#shSaint-Christophe", "#shSaint-Denis", "#shSaint-Marcel", "#shSaint-Nicolas", "#shSaint-Oyen", "#shSaint-Pierre", "#shSaint-Rhémy-en-Bosses", "#shSaint-Vincent", "#shSarre", "#shTorgnon", "#shValgrisenche", "#shValpelline", "#shValsavarenche", "#shValtournenche", "#shVerrayes", "#shVerrès", "#shVilleneuve", "#shAgra", "#shAlbizzate", "#shAngera", "#shArcisate", "#shArsago Seprio", "#shAzzate", "#shAzzio", "#shBarasso", "#shBardello", "#shBedero Valcuvia", "#shBesano", "#shBesnate", "#shBesozzo", "#shBiandronno", "#shBisuschio", "#shBodio Lomnago", "#shBrebbia", "#shBregano", "#shBrenta", "#shBrezzo di Bedero", "#shBrinzio", "#shBrissago-Valtravaglia", "#shBrunello", "#shBrusimpiano", "#shBuguggiate", "#shBusto Arsizio", "#shCadegliano-Viconago", "#shCairate", "#shCantello", "#shCaravate", "#shCardano al Campo", "#shCarnago", "#shCaronno Pertusella", "#shCaronno Varesino", "#shCasale Litta", "#shCasalzuigno", "#shCasciago", "#shCasorate Sempione", "#shCassano Magnago", "#shCassano Valcuvia", "#shCastellanza", "#shCastello Cabiaglio", "#shCastelseprio", "#shCastelveccana", "#shCastiglione Olona", "#shCastronno", "#shCavaria con Premezzo", "#shCazzago Brabbia", "#shCislago", "#shCittiglio", "#shClivio", "#shCocquio-Trevisago", "#shComabbio", "#shComerio", "#shCremenaga", "#shCrosio della Valle", "#shCuasso al Monte", "#shCugliate-Fabiasco", "#shCunardo", "#shCuriglia con Monteviasco", "#shCuveglio", "#shCuvio", "#shDaverio", "#shDumenza", "#shDuno", "#shFagnano Olona", "#shFerno", "#shFerrera di Varese", "#shGallarate", "#shGalliate Lombardo", "#shGavirate", "#shGazzada Schianno", "#shGemonio", "#shGerenzano", "#shGermignaga", "#shGolasecca", "#shGorla Maggiore", "#shGorla Minore", "#shGornate Olona", "#shGrantola", "#shInarzo", "#shInduno Olona", "#shIspra", "#shJerago con Orago", "#shLavena Ponte Tresa", "#shLaveno-Mombello", "#shLeggiuno", "#shLonate Ceppino", "#shLonate Pozzolo", "#shLozza", "#shLuino", "#shLuvinate", "#shMalgesso", "#shMalnate", "#shMarchirolo", "#shMarnate", "#shMarzio", "#shMasciago Primo", "#shMercallo", "#shMesenzana", "#shMontegrino Valtravaglia", "#shMonvalle", "#shMorazzone", "#shMornago", "#shOggiona con Santo Stefano", "#shOlgiate Olona", "#shOriggio", "#shOrino", "#shPorto Ceresio", "#shPorto Valtravaglia", "#shRancio Valcuvia", "#shRanco", "#shSaltrio", "#shSamarate", "#shSaronno", "#shSesto Calende", "#shSolbiate Arno", "#shSolbiate Olona", "#shSomma Lombardo", "#shSumirago", "#shTaino", "#shTernate", "#shTradate", "#shTravedona-Monate", "#shTronzano Lago Maggiore", "#shUboldo", "#shValganna", "#shVarano Borghi", "#shVarese", "#shVedano Olona", "#shVenegono Inferiore", "#shVenegono Superiore", "#shVergiate", "#shViggiù", "#shVizzola Ticino", "#shSangiano", "#shMaccagno con Pino e Veddasca", "#shCadrezzate con Osmate", "#shAnnone Veneto", "#shCampagna Lupia", "#shCampolongo Maggiore", "#shCamponogara", "#shCaorle", "#shCavarzere", "#shCeggia", "#shChioggia", "#shCinto Caomaggiore", "#shCona", "#shConcordia Sagittaria", "#shDolo", "#shEraclea", "#shFiesso d'Artico", "#shFossalta di Piave", "#shFossalta di Portogruaro", "#shFossò", "#shGruaro", "#shJesolo", "#shMarcon", "#shMartellago", "#shMeolo", "#shMira", "#shMirano", "#shMusile di Piave", "#shNoale", "#shNoventa di Piave", "#shPianiga", "#shPortogruaro", "#shPramaggiore", "#shQuarto d'Altino", "#shSalzano", "#shSan Donà di Piave", "#shSan Michele al Tagliamento", "#shSanta Maria di Sala", "#shSan Stino di Livenza", "#shScorzè", "#shSpinea", "#shStra", "#shTeglio Veneto", "#shTorre di Mosto", "#shVenezia", "#shVigonovo", "#shCavallino-Treporti", "#shAntrona Schieranco", "#shAnzola d'Ossola", "#shArizzano", "#shArola", "#shAurano", "#shBaceno", "#shBannio Anzino", "#shBaveno", "#shBee", "#shBelgirate", "#shBeura-Cardezza", "#shBognanco", "#shBrovello-Carpugnino", "#shCalasca-Castiglione", "#shCambiasca", "#shCannero Riviera", "#shCannobio", "#shCaprezzo", "#shCasale Corte Cerro", "#shCeppo Morelli", "#shCesara", "#shCossogno", "#shCraveggia", "#shCrevoladossola", "#shCrodo", "#shDomodossola", "#shDruogno", "#shFormazza", "#shGermagno", "#shGhiffa", "#shGignese", "#shGravellona Toce", "#shGurro", "#shIntragna", "#shLoreglia", "#shMacugnaga", "#shMadonna del Sasso", "#shMalesco", "#shMasera", "#shMassiola", "#shMergozzo", "#shMiazzina", "#shMontecrestese", "#shMontescheno", "#shNonio", "#shOggebbio", "#shOmegna", "#shOrnavasso", "#shPallanzeno", "#shPiedimulera", "#shPieve Vergonte", "#shPremeno", "#shPremia", "#shPremosello-Chiovenda", "#shQuarna Sopra", "#shQuarna Sotto", "#shRe", "#shSan Bernardino Verbano", "#shSanta Maria Maggiore", "#shStresa", "#shToceno", "#shTrarego Viggiona", "#shTrasquera", "#shTrontano", "#shValstrona", "#shVanzone con San Carlo", "#shVarzo", "#shVerbania", "#shVignone", "#shVilladossola", "#shVillette", "#shVogogna", "#shBorgomezzavalle", "#shValle Cannobina", "#shAlagna Valsesia", "#shAlbano Vercellese", "#shAlice Castello", "#shArborio", "#shAsigliano Vercellese", "#shBalmuccia", "#shBalocco", "#shBianzè", "#shBoccioleto", "#shBorgo d'Ale", "#shBorgosesia", "#shBorgo Vercelli", "#shBuronzo", "#shCampertogno", "#shCarcoforo", "#shCaresana", "#shCaresanablot", "#shCarisio", "#shCasanova Elvo", "#shSan Giacomo Vercellese", "#shCervatto", "#shCigliano", "#shCiviasco", "#shCollobiano", "#shCostanzana", "#shCravagliana", "#shCrescentino", "#shCrova", "#shDesana", "#shFobello", "#shFontanetto Po", "#shFormigliana", "#shGattinara", "#shGhislarengo", "#shGreggio", "#shGuardabosone", "#shLamporo", "#shLenta", "#shLignana", "#shLivorno Ferraris", "#shLozzolo", "#shMollia", "#shMoncrivello", "#shMotta de' Conti", "#shOlcenengo", "#shOldenico", "#shPalazzolo Vercellese", "#shPertengo", "#shPezzana", "#shPila", "#shPiode", "#shPostua", "#shPrarolo", "#shQuarona", "#shQuinto Vercellese", "#shRassa", "#shRimella", "#shRive", "#shRoasio", "#shRonsecco", "#shRossa", "#shRovasenda", "#shSalasco", "#shSali Vercellese", "#shSaluggia", "#shSan Germano Vercellese", "#shSanthià", "#shScopa", "#shScopello", "#shSerravalle Sesia", "#shStroppiana", "#shTricerro", "#shTrino", "#shTronzano Vercellese", "#shValduggia", "#shVarallo", "#shVercelli", "#shVillarboit", "#shVillata", "#shVocca", "#shAlto Sermenza", "#shCellio con Breia", "#shAffi", "#shAlbaredo d'Adige", "#shAngiari", "#shArcole", "#shBadia Calavena", "#shBardolino", "#shBelfiore", "#shBevilacqua", "#shBonavigo", "#shBoschi Sant'Anna", "#shBosco Chiesanuova", "#shBovolone", "#shBrentino Belluno", "#shBrenzone sul Garda", "#shBussolengo", "#shButtapietra", "#shCaldiero", "#shCaprino Veronese", "#shCasaleone", "#shCastagnaro", "#shCastel d'Azzano", "#shCastelnuovo del Garda", "#shCavaion Veronese", "#shCazzano di Tramigna", "#shCerea", "#shCerro Veronese", "#shCologna Veneta", "#shColognola ai Colli", "#shConcamarise", "#shCostermano sul Garda", "#shDolcè", "#shErbè", "#shErbezzo", "#shFerrara di Monte Baldo", "#shFumane", "#shGarda", "#shGazzo Veronese", "#shGrezzana", "#shIllasi", "#shIsola della Scala", "#shIsola Rizza", "#shLavagno", "#shLazise", "#shLegnago", "#shMalcesine", "#shMarano di Valpolicella", "#shMezzane di Sotto", "#shMinerbe", "#shMontecchia di Crosara", "#shMonteforte d'Alpone", "#shMozzecane", "#shNegrar di Valpolicella", "#shNogara", "#shNogarole Rocca", "#shOppeano", "#shPalù", "#shPastrengo", "#shPescantina", "#shPeschiera del Garda", "#shPovegliano Veronese", "#shPressana", "#shRivoli Veronese", "#shRoncà", "#shRonco all'Adige", "#shRoverchiara", "#shRoveredo di Guà", "#shRoverè Veronese", "#shSalizzole", "#shSan Bonifacio", "#shSan Giovanni Ilarione", "#shSan Giovanni Lupatoto", "#shSanguinetto", "#shSan Martino Buon Albergo", "#shSan Mauro di Saline", "#shSan Pietro di Morubio", "#shSan Pietro in Cariano", "#shSant'Ambrogio di Valpolicella", "#shSant'Anna d'Alfaedo", "#shSan Zeno di Montagna", "#shSelva di Progno", "#shSoave", "#shSommacampagna", "#shSona", "#shSorgà", "#shTerrazzo", "#shTorri del Benaco", "#shTregnago", "#shTrevenzuolo", "#shValeggio sul Mincio", "#shVelo Veronese", "#shVerona", "#shVeronella", "#shVestenanova", "#shVigasio", "#shVilla Bartolomea", "#shVillafranca di Verona", "#shZevio", "#shZimella", "#shAcquaro", "#shArena", "#shBriatico", "#shBrognaturo", "#shCapistrano", "#shCessaniti", "#shDasà", "#shDinami", "#shDrapia", "#shFabrizia", "#shFiladelfia", "#shFilandari", "#shFilogaso", "#shFrancavilla Angitola", "#shFrancica", "#shGerocarne", "#shIonadi", "#shJoppolo", "#shLimbadi", "#shMaierato", "#shMileto", "#shMongiana", "#shMonterosso Calabro", "#shNardodipace", "#shNicotera", "#shParghelia", "#shPizzo", "#shPizzoni", "#shPolia", "#shRicadi", "#shRombiolo", "#shSan Calogero", "#shSan Costantino Calabro", "#shSan Gregorio d'Ippona", "#shSan Nicola da Crissa", "#shSant'Onofrio", "#shSerra San Bruno", "#shSimbario", "#shSorianello", "#shSoriano Calabro", "#shSpadola", "#shSpilinga", "#shStefanaconi", "#shTropea", "#shVallelonga", "#shVazzano", "#shVibo Valentia", "#shZaccanopoli", "#shZambrone", "#shZungri", "#shAgugliaro", "#shAlbettone", "#shAlonte", "#shAltavilla Vicentina", "#shAltissimo", "#shArcugnano", "#shArsiero", "#shArzignano", "#shAsiago", "#shAsigliano Veneto", "#shBassano del Grappa", "#shBolzano Vicentino", "#shBreganze", "#shBrendola", "#shBressanvido", "#shBrogliano", "#shCaldogno", "#shCaltrano", "#shCalvene", "#shCamisano Vicentino", "#shCampiglia dei Berici", "#shCarrè", "#shCartigliano", "#shCassola", "#shCastegnero", "#shCastelgomberto", "#shChiampo", "#shChiuppano", "#shCogollo del Cengio", "#shCornedo Vicentino", "#shCostabissara", "#shCreazzo", "#shCrespadoro", "#shDueville", "#shEnego", "#shFara Vicentino", "#shFoza", "#shGallio", "#shGambellara", "#shGambugliano", "#shGrisignano di Zocco", "#shGrumolo delle Abbadesse", "#shIsola Vicentina", "#shLaghi", "#shLastebasse", "#shLongare", "#shLonigo", "#shLugo di Vicenza", "#shMalo", "#shMarano Vicentino", "#shMarostica", "#shMontebello Vicentino", "#shMontecchio Maggiore", "#shMontecchio Precalcino", "#shMonte di Malo", "#shMontegalda", "#shMontegaldella", "#shMonteviale", "#shMonticello Conte Otto", "#shMontorso Vicentino", "#shMussolente", "#shNanto", "#shNogarole Vicentino", "#shNove", "#shNoventa Vicentina", "#shOrgiano", "#shPedemonte", "#shPianezze", "#shPiovene Rocchette", "#shPojana Maggiore", "#shPosina", "#shPove del Grappa", "#shPozzoleone", "#shQuinto Vicentino", "#shRecoaro Terme", "#shRoana", "#shRomano d'Ezzelino", "#shRosà", "#shRossano Veneto", "#shRotzo", "#shSalcedo", "#shSandrigo", "#shSan Pietro Mussolino", "#shSantorso", "#shSan Vito di Leguzzano", "#shSarcedo", "#shSarego", "#shSchiavon", "#shSchio", "#shSolagna", "#shSossano", "#shSovizzo", "#shTezze sul Brenta", "#shThiene", "#shTonezza del Cimone", "#shTorrebelvicino", "#shTorri di Quartesolo", "#shTrissino", "#shValdagno", "#shValdastico", "#shValli del Pasubio", "#shVelo d'Astico", "#shVicenza", "#shVillaga", "#shVillaverla", "#shZanè", "#shZermeghedo", "#shZovencedo", "#shZugliano", "#shVal Liona", "#shBarbarano Mossano", "#shValbrenta", "#shColceresa", "#shLusiana Conco", "#shAcquapendente", "#shArlena di Castro", "#shBagnoregio", "#shBarbarano Romano", "#shBassano Romano", "#shBassano in Teverina", "#shBlera", "#shBolsena", "#shBomarzo", "#shCalcata", "#shCanepina", "#shCanino", "#shCapodimonte", "#shCapranica", "#shCaprarola", "#shCarbognano", "#shCastel Sant'Elia", "#shCastiglione in Teverina", "#shCelleno", "#shCellere", "#shCivita Castellana", "#shCivitella d'Agliano", "#shCorchiano", "#shFabrica di Roma", "#shFaleria", "#shFarnese", "#shGallese", "#shGradoli", "#shGraffignano", "#shGrotte di Castro", "#shIschia di Castro", "#shLatera", "#shLubriano", "#shMarta", "#shMontalto di Castro", "#shMontefiascone", "#shMonte Romano", "#shMonterosi", "#shNepi", "#shOnano", "#shOriolo Romano", "#shOrte", "#shPiansano", "#shProceno", "#shRonciglione", "#shVilla San Giovanni in Tuscia", "#shSan Lorenzo Nuovo", "#shSoriano nel Cimino", "#shSutri", "#shTarquinia", "#shTessennano", "#shTuscania", "#shValentano", "#shVallerano", "#shVasanello", "#shVejano", "#shVetralla", "#shVignanello", "#shViterbo", "#shVitorchiano" };

ansId=system.getProperty("ans7");

if(ansId==0) { for(int i=0,42) { opt=comuniBase.get(i); comuni.set(i,opt);}  }
if(ansId==1) { for(int i=43,229) { opt=comuniBase.get(i); comuni.set(i,opt);}  }
if(ansId==2) { for(int i=230,276) { opt=comuniBase.get(i); comuni.set(i,opt);}  }
if(ansId==3) { for(int i=277,312) { opt=comuniBase.get(i); comuni.set(i,opt);}  }
if(ansId==4) { for(int i=313,345) { opt=comuniBase.get(i); comuni.set(i,opt);}  }
if(ansId==5) { for(int i=346,463) { opt=comuniBase.get(i); comuni.set(i,opt);}  }
if(ansId==6) { for(int i=464,581) { opt=comuniBase.get(i); comuni.set(i,opt);}  }
if(ansId==7) { for(int i=582,622) { opt=comuniBase.get(i); comuni.set(i,opt);}  }
if(ansId==8) { for(int i=623,632) { opt=comuniBase.get(i); comuni.set(i,opt);}  }
if(ansId==9) { for(int i=633,693) { opt=comuniBase.get(i); comuni.set(i,opt);}  }
if(ansId==10) { for(int i=694,771) { opt=comuniBase.get(i); comuni.set(i,opt);}  }
if(ansId==11) { for(int i=772,1014) { opt=comuniBase.get(i); comuni.set(i,opt);}  }
if(ansId==12) { for(int i=1015,1088) { opt=comuniBase.get(i); comuni.set(i,opt);}  }
if(ansId==13) { for(int i=1089,1143) { opt=comuniBase.get(i); comuni.set(i,opt);}  }
if(ansId==14) { for(int i=1144,1259) { opt=comuniBase.get(i); comuni.set(i,opt);}  }
if(ansId==15) { for(int i=1260,1464) { opt=comuniBase.get(i); comuni.set(i,opt);}  }
if(ansId==16) { for(int i=1465,1484) { opt=comuniBase.get(i); comuni.set(i,opt);}  }
if(ansId==17) { for(int i=1485,1501) { opt=comuniBase.get(i); comuni.set(i,opt);}  }
if(ansId==18) { for(int i=1502,1523) { opt=comuniBase.get(i); comuni.set(i,opt);}  }
if(ansId==19) { for(int i=1524,1607) { opt=comuniBase.get(i); comuni.set(i,opt);}  }
if(ansId==20) { for(int i=1608,1711) { opt=comuniBase.get(i); comuni.set(i,opt);}  }
if(ansId==21) { for(int i=1712,1769) { opt=comuniBase.get(i); comuni.set(i,opt);}  }
if(ansId==22) { for(int i=1770,1849) { opt=comuniBase.get(i); comuni.set(i,opt);}  }
if(ansId==23) { for(int i=1850,1953) { opt=comuniBase.get(i); comuni.set(i,opt);}  }
if(ansId==24) { for(int i=1954,2101) { opt=comuniBase.get(i); comuni.set(i,opt);}  }
if(ansId==25) { for(int i=2102,2251) { opt=comuniBase.get(i); comuni.set(i,opt);}  }
if(ansId==26) { for(int i=2252,2364) { opt=comuniBase.get(i); comuni.set(i,opt);}  }
if(ansId==27) { for(int i=2365,2391) { opt=comuniBase.get(i); comuni.set(i,opt);}  }
if(ansId==28) { for(int i=2392,2638) { opt=comuniBase.get(i); comuni.set(i,opt);}  }
if(ansId==29) { for(int i=2639,2658) { opt=comuniBase.get(i); comuni.set(i,opt);}  }
if(ansId==30) { for(int i=2659,2698) { opt=comuniBase.get(i); comuni.set(i,opt);}  }
if(ansId==31) { for(int i=2699,2719) { opt=comuniBase.get(i); comuni.set(i,opt);}  }
if(ansId==32) { for(int i=2720,2760) { opt=comuniBase.get(i); comuni.set(i,opt);}  }
if(ansId==33) { for(int i=2761,2821) { opt=comuniBase.get(i); comuni.set(i,opt);}  }
if(ansId==34) { for(int i=2822,2851) { opt=comuniBase.get(i); comuni.set(i,opt);}  }
if(ansId==35) { for(int i=2852,2942) { opt=comuniBase.get(i); comuni.set(i,opt);}  }
if(ansId==36) { for(int i=2943,3009) { opt=comuniBase.get(i); comuni.set(i,opt);}  }
if(ansId==37) { for(int i=3010,3034) { opt=comuniBase.get(i); comuni.set(i,opt);}  }
if(ansId==38) { for(int i=3035,3062) { opt=comuniBase.get(i); comuni.set(i,opt);}  }
if(ansId==39) { for(int i=3063,3128) { opt=comuniBase.get(i); comuni.set(i,opt);}  }
if(ansId==40) { for(int i=3129,3180) { opt=comuniBase.get(i); comuni.set(i,opt);}  }
if(ansId==41) { for(int i=3181,3212) { opt=comuniBase.get(i); comuni.set(i,opt);}  }
if(ansId==42) { for(int i=3213,3320) { opt=comuniBase.get(i); comuni.set(i,opt);}  }
if(ansId==43) { for(int i=3321,3353) { opt=comuniBase.get(i); comuni.set(i,opt);}  }
if(ansId==44) { for(int i=3354,3449) { opt=comuniBase.get(i); comuni.set(i,opt);}  }
if(ansId==45) { for(int i=3450,3533) { opt=comuniBase.get(i); comuni.set(i,opt);}  }
if(ansId==46) { for(int i=3534,3552) { opt=comuniBase.get(i); comuni.set(i,opt);}  }
if(ansId==47) { for(int i=3553,3612) { opt=comuniBase.get(i); comuni.set(i,opt);}  }
if(ansId==48) { for(int i=3613,3645) { opt=comuniBase.get(i); comuni.set(i,opt);}  }
if(ansId==49) { for(int i=3646,3700) { opt=comuniBase.get(i); comuni.set(i,opt);}  }
if(ansId==50) { for(int i=3701,3764) { opt=comuniBase.get(i); comuni.set(i,opt);}  }
if(ansId==51) { for(int i=3765,3781) { opt=comuniBase.get(i); comuni.set(i,opt);}  }
if(ansId==52) { for(int i=3782,3812) { opt=comuniBase.get(i); comuni.set(i,opt);}  }
if(ansId==53) { for(int i=3813,3920) { opt=comuniBase.get(i); comuni.set(i,opt);}  }
if(ansId==54) { for(int i=3921,4053) { opt=comuniBase.get(i); comuni.set(i,opt);}  }
if(ansId==55) { for(int i=4054,4100) { opt=comuniBase.get(i); comuni.set(i,opt);}  }
if(ansId==56) { for(int i=4101,4155) { opt=comuniBase.get(i); comuni.set(i,opt);}  }
if(ansId==57) { for(int i=4156,4247) { opt=comuniBase.get(i); comuni.set(i,opt);}  }
if(ansId==58) { for(int i=4248,4334) { opt=comuniBase.get(i); comuni.set(i,opt);}  }
if(ansId==59) { for(int i=4335,4408) { opt=comuniBase.get(i); comuni.set(i,opt);}  }
if(ansId==60) { for(int i=4409,4495) { opt=comuniBase.get(i); comuni.set(i,opt);}  }
if(ansId==61) { for(int i=4496,4597) { opt=comuniBase.get(i); comuni.set(i,opt);}  }
if(ansId==62) { for(int i=4598,4679) { opt=comuniBase.get(i); comuni.set(i,opt);}  }
if(ansId==63) { for(int i=4680,4723) { opt=comuniBase.get(i); comuni.set(i,opt);}  }
if(ansId==64) { for(int i=4724,4909) { opt=comuniBase.get(i); comuni.set(i,opt);}  }
if(ansId==65) { for(int i=4910,4968) { opt=comuniBase.get(i); comuni.set(i,opt);}  }
if(ansId==66) { for(int i=4969,5020) { opt=comuniBase.get(i); comuni.set(i,opt);}  }
if(ansId==67) { for(int i=5021,5066) { opt=comuniBase.get(i); comuni.set(i,opt);}  }
if(ansId==68) { for(int i=5067,5112) { opt=comuniBase.get(i); comuni.set(i,opt);}  }
if(ansId==69) { for(int i=5113,5149) { opt=comuniBase.get(i); comuni.set(i,opt);}  }
if(ansId==70) { for(int i=5150,5169) { opt=comuniBase.get(i); comuni.set(i,opt);}  }
if(ansId==71) { for(int i=5170,5219) { opt=comuniBase.get(i); comuni.set(i,opt);}  }
if(ansId==72) { for(int i=5220,5319) { opt=comuniBase.get(i); comuni.set(i,opt);}  }
if(ansId==73) { for(int i=5320,5326) { opt=comuniBase.get(i); comuni.set(i,opt);}  }
if(ansId==74) { for(int i=5327,5338) { opt=comuniBase.get(i); comuni.set(i,opt);}  }
if(ansId==75) { for(int i=5339,5356) { opt=comuniBase.get(i); comuni.set(i,opt);}  }
if(ansId==76) { for(int i=5357,5453) { opt=comuniBase.get(i); comuni.set(i,opt);}  }
if(ansId==77) { for(int i=5454,5495) { opt=comuniBase.get(i); comuni.set(i,opt);}  }
if(ansId==78) { for(int i=5496,5568) { opt=comuniBase.get(i); comuni.set(i,opt);}  }
if(ansId==79) { for(int i=5569,5593) { opt=comuniBase.get(i); comuni.set(i,opt);}  }
if(ansId==80) { for(int i=5594,5714) { opt=comuniBase.get(i); comuni.set(i,opt);}  }
if(ansId==81) { for(int i=5715,5764) { opt=comuniBase.get(i); comuni.set(i,opt);}  }
if(ansId==82) { for(int i=5765,5922) { opt=comuniBase.get(i); comuni.set(i,opt);}  }
if(ansId==83) { for(int i=5923,6014) { opt=comuniBase.get(i); comuni.set(i,opt);}  }
if(ansId==84) { for(int i=6015,6083) { opt=comuniBase.get(i); comuni.set(i,opt);}  }
if(ansId==85) { for(int i=6084,6118) { opt=comuniBase.get(i); comuni.set(i,opt);}  }
if(ansId==86) { for(int i=6119,6139) { opt=comuniBase.get(i); comuni.set(i,opt);}  }
if(ansId==87) { for(int i=6140,6216) { opt=comuniBase.get(i); comuni.set(i,opt);}  }
if(ansId==88) { for(int i=6217,6323) { opt=comuniBase.get(i); comuni.set(i,opt);}  }
if(ansId==89) { for(int i=6324,6352) { opt=comuniBase.get(i); comuni.set(i,opt);}  }
if(ansId==90) { for(int i=6353,6399) { opt=comuniBase.get(i); comuni.set(i,opt);}  }
if(ansId==91) { for(int i=6400,6432) { opt=comuniBase.get(i); comuni.set(i,opt);}  }
if(ansId==92) { for(int i=6433,6744) { opt=comuniBase.get(i); comuni.set(i,opt);}  }
if(ansId==93) { for(int i=6745,6768) { opt=comuniBase.get(i); comuni.set(i,opt);}  }
if(ansId==94) { for(int i=6769,6934) { opt=comuniBase.get(i); comuni.set(i,opt);}  }
if(ansId==95) { for(int i=6935,7028) { opt=comuniBase.get(i); comuni.set(i,opt);}  }
if(ansId==96) { for(int i=7029,7034) { opt=comuniBase.get(i); comuni.set(i,opt);}  }
if(ansId==97) { for(int i=7035,7168) { opt=comuniBase.get(i); comuni.set(i,opt);}  }
if(ansId==98) { for(int i=7169,7242) { opt=comuniBase.get(i); comuni.set(i,opt);}  }
if(ansId==99) { for(int i=7243,7380) { opt=comuniBase.get(i); comuni.set(i,opt);}  }
if(ansId==100) { for(int i=7381,7424) { opt=comuniBase.get(i); comuni.set(i,opt);}  }
if(ansId==101) { for(int i=7425,7498) { opt=comuniBase.get(i); comuni.set(i,opt);}  }
if(ansId==102) { for(int i=7499,7580) { opt=comuniBase.get(i); comuni.set(i,opt);}  }
if(ansId==103) { for(int i=7581,7678) { opt=comuniBase.get(i); comuni.set(i,opt);}  }
if(ansId==104) { for(int i=7679,7728) { opt=comuniBase.get(i); comuni.set(i,opt);}  }
if(ansId==105) { for(int i=7729,7842) { opt=comuniBase.get(i); comuni.set(i,opt);}  }
if(ansId==106) { for(int i=7843,7902) { opt=comuniBase.get(i); comuni.set(i,opt);}  }



qst = new question("choice", 8);
qst.setProperty("text", "E in che comune?");
qst.setProperty("code", "qda");
qst.setProperty("options", comuni);
if (autotest!="1") { qst.setProperty("view", "menu"); }
send qst;

reCod=0;
ansId=system.getProperty("ans8");

switch(ansId)
{
case 1,3,4,5,6,7,12,13,14,15,18,21,23,24,31,34,36,38,39,41,42,44,46,47,48,49,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,81,82,83,84,85,86,87,88,89,90,91,92,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,152,153,154,155,156,157,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,197,198,199,200,201,202,203,204,205,206,207,208,209,211,212,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,232,233,234,236,239,240,241,243,244,248,252,253,254,256,258,259,260,263,264,265,266,267,268,269,272,273,274,275,279,283,284,285,286,289,290,295,296,297,298,301,302,306,308,313,314,315,316,318,320,321,322,323,324,327,329,330,331,332,333,334,335,336,338,339,340,341,342,345,346,347,348,349,351,352,353,354,355,356,357,358,359,360,361,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,461,462,463,464,465,466,467,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,489,490,491,492,493,494,495,496,498,499,500,502,503,504,505,506,508,509,510,511,514,515,516,518,519,521,523,524,525,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,560,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,587,610,633,634,635,636,637,639,640,641,642,643,644,645,646,648,649,650,652,653,654,655,656,658,659,660,661,662,663,664,666,667,668,669,670,672,673,674,676,677,678,679,680,681,682,683,684,685,686,687,688,689,692,695,697,698,699,700,702,703,704,705,706,707,708,709,710,711,712,713,714,715,716,717,718,719,720,721,722,723,724,725,726,727,728,729,730,731,732,733,734,735,737,738,739,740,741,742,743,744,745,746,747,748,749,750,752,753,754,755,756,757,758,759,760,761,762,764,765,766,768,769,770,771,772,773,780,781,782,783,784,785,786,788,789,790,791,792,793,794,796,797,798,803,804,806,807,811,816,817,818,819,821,823,824,825,826,827,828,829,831,832,833,834,835,836,837,838,839,840,846,848,849,850,851,852,853,855,856,858,860,861,862,864,865,866,867,868,869,870,871,872,873,874,876,877,882,884,885,887,888,889,890,891,892,893,895,896,897,900,901,902,903,904,905,906,907,910,911,912,913,914,915,916,919,920,921,923,924,926,927,928,929,930,931,932,933,936,938,939,940,941,942,944,945,946,948,949,950,951,952,954,955,958,959,960,962,963,964,966,968,971,972,973,974,978,979,980,984,986,987,988,989,990,991,992,995,996,997,998,999,1002,1004,1005,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1019,1020,1021,1022,1023,1024,1026,1027,1028,1029,1030,1031,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1079,1080,1081,1082,1083,1084,1085,1086,1087,1094,1097,1099,1100,1101,1102,1103,1111,1112,1115,1117,1118,1124,1128,1133,1144,1145,1146,1148,1149,1150,1152,1153,1155,1157,1159,1161,1163,1164,1166,1167,1168,1169,1170,1171,1173,1174,1175,1176,1177,1178,1179,1182,1185,1186,1187,1188,1190,1191,1192,1193,1195,1196,1197,1198,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1229,1230,1231,1232,1233,1235,1236,1237,1238,1239,1240,1241,1242,1243,1244,1245,1246,1247,1248,1250,1251,1252,1253,1254,1255,1257,1258,1259,1260,1262,1263,1264,1265,1266,1267,1269,1270,1271,1272,1274,1275,1276,1277,1278,1281,1283,1285,1286,1287,1289,1290,1292,1294,1295,1296,1303,1306,1307,1308,1309,1310,1312,1313,1314,1316,1317,1319,1322,1323,1327,1330,1332,1333,1335,1338,1341,1342,1343,1345,1346,1348,1349,1350,1352,1353,1354,1356,1357,1358,1359,1360,1363,1364,1365,1367,1368,1369,1370,1371,1374,1375,1377,1378,1379,1380,1381,1382,1383,1385,1387,1388,1389,1390,1391,1393,1394,1396,1397,1398,1399,1400,1401,1403,1404,1405,1407,1410,1411,1412,1415,1416,1418,1420,1422,1426,1427,1429,1430,1431,1433,1434,1435,1436,1438,1439,1440,1441,1442,1443,1447,1449,1450,1451,1452,1454,1455,1456,1458,1460,1461,1463,1464,1498,1502,1503,1504,1506,1507,1509,1511,1512,1515,1521,1522,1523,1524,1525,1527,1528,1530,1531,1532,1534,1535,1536,1537,1538,1539,1540,1541,1542,1543,1544,1545,1546,1547,1548,1549,1550,1551,1553,1555,1556,1557,1558,1559,1560,1561,1562,1563,1564,1565,1566,1567,1568,1570,1571,1572,1573,1574,1575,1576,1577,1578,1579,1581,1582,1583,1584,1585,1586,1587,1588,1589,1590,1591,1592,1593,1594,1595,1596,1597,1598,1599,1600,1602,1603,1604,1605,1606,1607,1608,1610,1613,1615,1618,1621,1630,1631,1632,1633,1635,1637,1638,1640,1641,1642,1643,1645,1646,1647,1648,1651,1652,1657,1658,1662,1663,1665,1666,1668,1670,1671,1672,1673,1675,1676,1677,1678,1679,1680,1683,1686,1687,1691,1693,1700,1703,1704,1708,1712,1724,1725,1731,1733,1737,1739,1746,1747,1751,1754,1757,1767,1768,1769,1770,1771,1772,1773,1774,1775,1776,1779,1780,1781,1783,1784,1785,1787,1788,1789,1790,1793,1794,1795,1796,1797,1798,1799,1802,1803,1804,1805,1806,1807,1808,1809,1810,1811,1812,1814,1815,1816,1817,1818,1819,1820,1821,1822,1823,1824,1825,1826,1827,1828,1829,1830,1831,1832,1834,1835,1836,1837,1838,1840,1841,1842,1843,1844,1845,1846,1847,1848,1850,1851,1852,1853,1855,1856,1858,1859,1860,1861,1862,1863,1865,1867,1868,1869,1870,1872,1873,1874,1875,1876,1877,1878,1879,1880,1881,1883,1885,1886,1887,1888,1889,1890,1891,1893,1894,1896,1897,1898,1899,1900,1901,1902,1903,1904,1905,1906,1908,1909,1910,1911,1912,1913,1914,1915,1916,1917,1918,1919,1920,1921,1922,1923,1924,1925,1926,1927,1928,1929,1931,1933,1934,1936,1937,1938,1939,1940,1941,1942,1943,1944,1945,1946,1947,1949,1950,1951,1952,1953,1955,1956,1957,1958,1959,1961,1963,1964,1965,1966,1967,1968,1969,1970,1972,1973,1974,1975,1978,1979,1983,1984,1985,1986,1988,1989,1990,1991,1992,1993,1994,1997,1998,1999,2001,2002,2003,2004,2005,2006,2007,2008,2010,2011,2012,2013,2016,2017,2018,2019,2020,2023,2024,2025,2026,2027,2028,2030,2031,2033,2034,2036,2038,2040,2041,2042,2043,2044,2046,2047,2049,2050,2051,2053,2054,2055,2056,2057,2058,2059,2060,2061,2062,2063,2064,2065,2066,2067,2070,2071,2073,2074,2075,2076,2077,2078,2080,2081,2083,2084,2085,2086,2087,2088,2089,2090,2091,2093,2094,2095,2096,2099,2100,2101,2102,2103,2105,2106,2107,2108,2109,2110,2112,2113,2114,2115,2117,2119,2120,2121,2122,2123,2124,2125,2127,2128,2130,2132,2134,2135,2136,2137,2138,2139,2141,2142,2143,2145,2148,2149,2150,2151,2152,2153,2154,2155,2156,2158,2159,2160,2161,2162,2163,2164,2165,2166,2167,2168,2170,2171,2172,2173,2174,2175,2176,2177,2179,2181,2182,2183,2184,2185,2186,2187,2188,2189,2191,2192,2193,2194,2195,2196,2197,2198,2201,2204,2205,2206,2207,2208,2209,2210,2211,2212,2213,2214,2215,2217,2218,2221,2222,2223,2224,2225,2226,2227,2228,2230,2231,2232,2233,2234,2236,2237,2239,2240,2241,2242,2243,2246,2247,2249,2252,2253,2254,2255,2256,2257,2258,2259,2260,2261,2262,2263,2264,2265,2266,2267,2268,2269,2270,2272,2273,2274,2277,2278,2279,2280,2281,2282,2283,2284,2287,2288,2289,2290,2291,2292,2293,2294,2295,2296,2297,2298,2299,2300,2301,2302,2303,2304,2305,2306,2307,2308,2309,2310,2312,2313,2314,2315,2317,2318,2319,2320,2321,2322,2323,2325,2326,2327,2328,2329,2330,2331,2333,2334,2335,2336,2337,2338,2339,2340,2341,2342,2343,2344,2347,2348,2349,2351,2352,2353,2354,2355,2356,2357,2358,2359,2360,2361,2362,2363,2364,2365,2366,2367,2368,2369,2370,2371,2375,2378,2380,2382,2384,2385,2386,2387,2388,2390,2391,2392,2393,2395,2396,2397,2398,2399,2401,2402,2404,2405,2406,2407,2408,2409,2410,2411,2412,2413,2414,2415,2417,2418,2421,2422,2423,2424,2426,2428,2429,2431,2432,2433,2434,2435,2436,2437,2438,2439,2440,2441,2442,2443,2444,2445,2446,2447,2449,2451,2452,2454,2457,2458,2459,2460,2461,2462,2463,2464,2465,2466,2468,2469,2470,2472,2473,2474,2475,2476,2477,2479,2480,2481,2482,2483,2484,2485,2486,2487,2488,2489,2490,2491,2492,2493,2494,2495,2496,2497,2498,2499,2500,2501,2502,2503,2504,2505,2506,2507,2508,2509,2510,2511,2512,2513,2514,2515,2516,2517,2518,2520,2521,2522,2523,2524,2525,2526,2527,2528,2529,2530,2531,2532,2533,2534,2535,2536,2537,2538,2539,2540,2541,2542,2543,2544,2545,2546,2547,2548,2549,2550,2551,2553,2554,2555,2556,2557,2558,2559,2560,2561,2562,2563,2564,2565,2566,2567,2569,2570,2571,2572,2573,2574,2575,2576,2577,2578,2579,2580,2581,2582,2583,2584,2585,2586,2587,2588,2589,2590,2591,2593,2594,2595,2596,2597,2598,2599,2600,2601,2602,2603,2605,2606,2607,2608,2609,2610,2612,2613,2614,2615,2616,2617,2618,2619,2620,2621,2622,2623,2624,2625,2626,2627,2629,2630,2631,2632,2634,2635,2636,2637,2638,2640,2643,2644,2646,2648,2651,2655,2658,2659,2660,2661,2662,2663,2665,2666,2667,2668,2669,2670,2671,2672,2673,2674,2677,2678,2679,2680,2681,2683,2684,2685,2686,2687,2688,2689,2690,2693,2694,2696,2697,2698,2706,2707,2708,2714,2715,2733,2735,2739,2740,2741,2744,2751,2761,2762,2763,2766,2767,2769,2771,2772,2773,2774,2775,2776,2777,2778,2779,2781,2782,2783,2785,2786,2791,2793,2794,2796,2797,2798,2799,2800,2801,2802,2803,2806,2810,2811,2818,2819,2820,2821,2824,2828,2829,2832,2838,2839,2840,2842,2843,2844,2846,2847,2849,2850,2851,2852,2853,2855,2856,2860,2862,2863,2864,2866,2867,2868,2869,2871,2872,2873,2874,2878,2879,2880,2881,2882,2883,2885,2887,2888,2890,2891,2892,2893,2896,2898,2899,2900,2901,2902,2904,2905,2906,2908,2910,2912,2913,2914,2915,2916,2917,2918,2920,2921,2922,2923,2924,2926,2927,2928,2929,2930,2931,2932,2933,2934,2935,2937,2938,2939,2940,2941,2942,2944,2945,2946,2947,2950,2952,2954,2955,2956,2958,2961,2962,2963,2964,2965,2966,2968,2969,2971,2972,2973,2974,2975,2976,2977,2978,2979,2980,2981,2982,2983,2984,2985,2986,2987,2990,2991,2992,2993,2994,2995,2998,2999,3002,3003,3004,3005,3006,3007,3008,3009,3010,3012,3013,3014,3015,3019,3020,3022,3023,3024,3026,3028,3029,3030,3031,3033,3034,3035,3036,3037,3038,3039,3041,3042,3046,3047,3051,3053,3054,3056,3057,3058,3059,3060,3061,3062,3063,3064,3065,3066,3067,3068,3069,3071,3072,3074,3075,3076,3077,3078,3079,3080,3081,3082,3083,3084,3085,3086,3087,3089,3090,3091,3093,3094,3095,3096,3097,3098,3099,3100,3101,3102,3103,3104,3105,3106,3107,3108,3109,3110,3111,3112,3113,3114,3116,3117,3118,3120,3121,3122,3124,3126,3127,3128,3129,3130,3131,3132,3133,3134,3135,3136,3137,3138,3139,3140,3141,3142,3143,3144,3145,3146,3147,3148,3149,3150,3152,3153,3154,3155,3156,3157,3158,3159,3160,3161,3162,3163,3164,3165,3166,3167,3168,3169,3170,3171,3172,3173,3174,3175,3176,3177,3178,3179,3181,3183,3185,3186,3187,3188,3189,3190,3192,3194,3198,3199,3201,3202,3203,3204,3205,3208,3209,3210,3212,3213,3214,3215,3216,3217,3219,3220,3221,3222,3223,3224,3225,3226,3227,3228,3229,3230,3231,3233,3234,3235,3236,3238,3239,3241,3242,3243,3245,3246,3247,3248,3249,3250,3251,3252,3253,3254,3255,3256,3257,3258,3259,3260,3262,3264,3265,3266,3267,3268,3269,3270,3271,3272,3273,3274,3275,3276,3277,3278,3279,3280,3281,3282,3283,3284,3285,3286,3288,3289,3290,3291,3292,3293,3294,3295,3296,3297,3298,3299,3300,3301,3302,3303,3304,3305,3306,3307,3308,3309,3312,3313,3315,3316,3317,3318,3319,3320,3322,3323,3324,3332,3333,3336,3338,3340,3341,3342,3343,3350,3351,3353,3357,3359,3360,3361,3364,3365,3367,3369,3370,3377,3379,3384,3385,3393,3397,3398,3399,3401,3402,3403,3406,3408,3410,3412,3417,3418,3422,3423,3425,3426,3428,3429,3431,3432,3433,3437,3442,3445,3446,3447,3450,3451,3452,3453,3454,3456,3457,3458,3459,3460,3463,3464,3466,3467,3468,3469,3470,3471,3473,3474,3475,3476,3477,3478,3479,3480,3481,3482,3483,3484,3486,3487,3488,3489,3491,3493,3495,3498,3499,3500,3501,3502,3503,3504,3508,3509,3510,3511,3512,3513,3514,3515,3516,3517,3519,3520,3521,3522,3523,3524,3525,3526,3528,3529,3530,3532,3533,3534,3536,3537,3538,3543,3544,3546,3550,3551,3552,3553,3554,3555,3556,3557,3558,3559,3560,3562,3563,3564,3565,3566,3567,3568,3570,3571,3572,3573,3574,3575,3576,3577,3578,3579,3580,3583,3584,3585,3586,3587,3588,3589,3590,3592,3593,3594,3595,3596,3597,3598,3599,3601,3602,3603,3604,3605,3607,3608,3609,3610,3612,3618,3620,3622,3625,3626,3629,3630,3631,3632,3633,3635,3637,3639,3640,3642,3643,3644,3645,3646,3647,3648,3649,3650,3652,3653,3654,3655,3658,3660,3661,3662,3663,3664,3665,3668,3670,3672,3673,3675,3677,3678,3679,3680,3681,3682,3687,3688,3690,3691,3692,3693,3694,3697,3698,3699,3700,3701,3704,3705,3706,3707,3708,3709,3710,3714,3715,3716,3718,3719,3720,3724,3727,3729,3731,3732,3735,3737,3738,3740,3742,3743,3747,3749,3751,3752,3753,3755,3756,3757,3760,3764,3766,3768,3769,3770,3772,3773,3776,3777,3779,3780,3781,3782,3783,3785,3786,3787,3788,3790,3791,3792,3793,3794,3796,3800,3803,3804,3805,3806,3807,3808,3810,3811,3813,3814,3815,3816,3818,3820,3822,3823,3824,3825,3826,3827,3828,3829,3830,3831,3832,3833,3834,3835,3836,3837,3838,3839,3840,3841,3842,3843,3846,3847,3848,3849,3850,3851,3852,3854,3855,3856,3857,3858,3859,3862,3863,3864,3865,3866,3867,3868,3869,3870,3871,3872,3873,3874,3875,3877,3879,3880,3881,3882,3883,3884,3885,3886,3887,3890,3891,3892,3893,3894,3895,3897,3898,3899,3900,3903,3904,3905,3906,3907,3908,3912,3913,3914,3915,3916,3920,3922,3928,3930,3931,3932,3934,3937,3939,3942,3945,3947,3951,3959,3961,3967,3970,3975,3976,3982,3987,3991,3993,3996,3998,4000,4001,4017,4019,4028,4039,4044,4048,4054,4057,4064,4067,4069,4070,4071,4077,4078,4079,4082,4084,4085,4086,4088,4091,4096,4100,4102,4113,4114,4122,4131,4137,4138,4142,4147,4155,4170,4173,4177,4184,4193,4195,4224,4233,4240,4243,4248,4249,4250,4252,4254,4255,4256,4257,4258,4261,4262,4263,4265,4266,4267,4268,4269,4270,4272,4273,4274,4276,4277,4278,4279,4280,4281,4282,4283,4285,4286,4287,4289,4290,4291,4292,4293,4294,4295,4296,4297,4298,4299,4300,4301,4302,4303,4306,4307,4308,4309,4310,4311,4312,4313,4314,4315,4316,4318,4319,4320,4321,4322,4323,4324,4325,4326,4327,4329,4330,4331,4332,4333,4335,4336,4337,4338,4339,4340,4341,4342,4343,4344,4345,4346,4347,4349,4350,4351,4352,4353,4354,4355,4356,4357,4358,4359,4361,4362,4363,4364,4365,4366,4368,4369,4370,4373,4374,4375,4376,4377,4378,4379,4381,4382,4383,4384,4385,4386,4387,4388,4389,4390,4391,4392,4394,4395,4396,4397,4398,4399,4400,4402,4403,4404,4405,4406,4407,4408,4409,4410,4411,4412,4413,4414,4415,4416,4417,4418,4419,4420,4421,4422,4423,4424,4425,4427,4428,4429,4430,4431,4432,4433,4434,4435,4436,4437,4438,4439,4440,4441,4442,4443,4444,4445,4447,4448,4449,4450,4451,4452,4453,4454,4455,4456,4457,4458,4459,4460,4461,4462,4463,4464,4465,4466,4467,4468,4469,4470,4471,4472,4474,4475,4476,4477,4478,4479,4480,4481,4482,4483,4484,4485,4486,4488,4489,4490,4491,4492,4493,4494,4495,4497,4499,4500,4501,4502,4503,4504,4505,4506,4507,4509,4513,4516,4517,4519,4520,4522,4524,4533,4534,4535,4536,4540,4542,4544,4545,4553,4554,4558,4559,4560,4562,4563,4565,4569,4570,4573,4574,4578,4580,4584,4585,4586,4587,4588,4592,4595,4598,4599,4600,4605,4607,4608,4609,4612,4613,4615,4616,4621,4622,4623,4626,4627,4629,4630,4634,4635,4636,4637,4638,4639,4641,4644,4648,4649,4652,4653,4655,4656,4657,4658,4659,4662,4663,4665,4666,4669,4671,4672,4673,4674,4675,4677,4678,4679,4680,4681,4682,4683,4684,4687,4690,4691,4700,4702,4704,4706,4707,4711,4712,4713,4714,4715,4718,4719,4720,4722,4724,4725,4726,4727,4728,4729,4730,4731,4732,4733,4734,4736,4737,4738,4739,4740,4741,4742,4743,4744,4745,4747,4748,4749,4750,4751,4752,4753,4754,4757,4759,4760,4761,4763,4764,4765,4766,4768,4769,4770,4772,4773,4774,4775,4776,4777,4778,4779,4780,4781,4782,4783,4784,4785,4786,4789,4791,4792,4793,4794,4795,4797,4798,4799,4800,4801,4802,4803,4804,4805,4807,4808,4809,4810,4811,4812,4813,4814,4815,4816,4817,4818,4819,4821,4822,4823,4824,4825,4826,4827,4829,4830,4831,4832,4833,4834,4835,4836,4837,4838,4839,4842,4843,4844,4845,4846,4847,4848,4849,4850,4851,4852,4853,4856,4857,4858,4859,4860,4861,4862,4863,4864,4865,4866,4868,4869,4871,4872,4873,4874,4875,4876,4877,4878,4879,4880,4881,4882,4883,4884,4885,4886,4887,4888,4889,4890,4891,4894,4895,4896,4897,4899,4900,4901,4902,4903,4904,4905,4906,4907,4908,4909,4912,4913,4914,4915,4916,4917,4919,4920,4923,4925,4928,4929,4930,4934,4937,4938,4940,4941,4942,4944,4945,4949,4950,4951,4952,4954,4955,4956,4957,4958,4964,4966,4967,4968,4969,4970,4971,4972,4974,4975,4980,4981,4982,4984,4985,4986,4987,4988,4989,4990,4991,4993,4994,4995,4996,4997,4999,5000,5003,5004,5005,5006,5007,5008,5009,5010,5011,5012,5013,5020,5021,5022,5023,5024,5025,5026,5027,5028,5029,5030,5033,5034,5036,5037,5038,5039,5040,5043,5045,5046,5049,5051,5052,5053,5054,5055,5056,5057,5058,5059,5060,5062,5063,5064,5065,5066,5067,5068,5069,5070,5071,5074,5075,5077,5080,5081,5082,5083,5084,5085,5087,5089,5090,5091,5093,5094,5096,5097,5099,5104,5105,5106,5107,5108,5109,5110,5111,5112,5118,5121,5122,5123,5124,5125,5126,5127,5128,5129,5131,5132,5133,5138,5142,5144,5154,5164,5167,5168,5170,5171,5174,5176,5179,5180,5182,5183,5184,5186,5187,5188,5191,5193,5194,5195,5197,5198,5202,5205,5206,5207,5209,5212,5213,5214,5215,5216,5218,5219,5220,5221,5222,5223,5224,5225,5227,5228,5229,5230,5231,5232,5233,5234,5235,5236,5237,5238,5239,5240,5241,5242,5243,5244,5245,5246,5247,5248,5249,5250,5251,5252,5253,5254,5256,5257,5259,5260,5263,5264,5266,5268,5269,5270,5271,5273,5274,5275,5276,5277,5279,5280,5283,5284,5286,5287,5288,5289,5290,5291,5292,5293,5294,5295,5296,5297,5298,5300,5301,5302,5303,5305,5306,5307,5309,5310,5311,5312,5313,5315,5316,5317,5318,5319,5320,5330,5333,5341,5343,5355,5356,5357,5358,5359,5360,5362,5364,5365,5366,5367,5369,5370,5371,5372,5373,5374,5375,5376,5377,5378,5379,5380,5382,5385,5386,5387,5388,5389,5390,5391,5392,5393,5396,5397,5398,5400,5402,5403,5404,5405,5407,5408,5412,5414,5415,5416,5418,5420,5422,5424,5426,5427,5428,5429,5430,5431,5432,5433,5434,5435,5436,5437,5438,5439,5440,5441,5442,5443,5445,5446,5447,5448,5450,5451,5453,5456,5463,5465,5470,5484,5490,5491,5492,5493,5494,5495,5496,5497,5498,5499,5500,5501,5502,5503,5504,5505,5506,5507,5508,5509,5510,5512,5513,5514,5515,5516,5517,5518,5519,5520,5521,5523,5524,5525,5526,5527,5528,5529,5530,5531,5532,5533,5534,5535,5536,5537,5538,5539,5540,5541,5542,5543,5544,5545,5546,5547,5549,5550,5551,5552,5553,5555,5556,5557,5558,5559,5560,5561,5562,5563,5564,5565,5566,5567,5568,5572,5574,5575,5576,5580,5585,5586,5588,5589,5590,5591,5594,5595,5597,5599,5601,5603,5605,5607,5609,5610,5612,5613,5614,5618,5620,5621,5623,5624,5626,5628,5630,5634,5637,5638,5641,5644,5645,5646,5648,5651,5654,5655,5659,5660,5662,5663,5664,5669,5670,5671,5673,5676,5677,5678,5680,5682,5683,5685,5687,5688,5689,5691,5692,5693,5694,5698,5699,5701,5702,5705,5706,5716,5717,5719,5720,5721,5722,5723,5724,5725,5726,5727,5728,5729,5730,5731,5732,5733,5734,5735,5736,5737,5738,5739,5740,5742,5743,5744,5746,5747,5748,5749,5750,5754,5755,5756,5757,5759,5760,5761,5762,5763,5765,5768,5772,5774,5775,5776,5779,5781,5782,5783,5784,5787,5788,5790,5791,5793,5794,5796,5797,5799,5800,5802,5804,5805,5806,5807,5808,5809,5810,5811,5812,5813,5815,5817,5818,5821,5822,5823,5824,5825,5826,5827,5828,5829,5832,5833,5834,5835,5838,5839,5841,5844,5845,5847,5848,5849,5850,5853,5855,5856,5857,5858,5859,5860,5862,5864,5865,5866,5867,5868,5869,5871,5873,5874,5875,5876,5877,5879,5881,5883,5884,5885,5887,5888,5889,5890,5891,5892,5893,5895,5897,5900,5902,5903,5904,5905,5907,5908,5909,5911,5912,5913,5914,5915,5916,5917,5919,5920,5923,5924,5926,5927,5929,5930,5931,5932,5933,5934,5935,5936,5937,5938,5939,5940,5941,5942,5943,5944,5946,5947,5948,5949,5950,5951,5952,5953,5954,5956,5958,5959,5960,5961,5962,5963,5964,5965,5966,5967,5968,5970,5971,5972,5975,5976,5977,5978,5979,5981,5982,5983,5984,5987,5988,5990,5993,5994,5995,5996,5997,5998,5999,6000,6001,6002,6003,6004,6005,6006,6007,6008,6009,6010,6011,6012,6019,6021,6022,6023,6024,6025,6026,6027,6028,6030,6031,6033,6034,6035,6037,6039,6040,6041,6042,6044,6045,6046,6047,6049,6050,6051,6052,6053,6054,6055,6056,6057,6058,6059,6060,6061,6062,6064,6065,6067,6068,6069,6071,6072,6073,6074,6075,6076,6077,6080,6081,6082,6083,6086,6087,6088,6090,6091,6093,6096,6100,6101,6102,6103,6105,6106,6107,6109,6111,6112,6117,6121,6122,6125,6126,6138,6140,6141,6142,6143,6144,6145,6146,6147,6148,6149,6150,6151,6152,6153,6154,6155,6156,6158,6159,6160,6161,6162,6164,6165,6166,6167,6168,6169,6170,6171,6172,6173,6174,6175,6177,6178,6179,6180,6181,6182,6184,6185,6186,6187,6188,6189,6190,6191,6192,6193,6194,6195,6196,6197,6198,6200,6201,6202,6203,6205,6206,6207,6208,6209,6210,6211,6212,6213,6214,6215,6216,6218,6219,6220,6221,6222,6223,6224,6227,6228,6229,6231,6233,6234,6235,6236,6237,6238,6239,6240,6241,6242,6243,6244,6245,6246,6248,6249,6252,6253,6254,6255,6256,6257,6259,6260,6261,6262,6263,6264,6265,6266,6267,6268,6269,6270,6271,6272,6273,6274,6276,6277,6280,6282,6284,6285,6286,6288,6289,6290,6291,6292,6294,6295,6296,6297,6298,6299,6300,6301,6302,6303,6304,6305,6306,6307,6308,6309,6310,6311,6313,6314,6315,6316,6317,6318,6319,6320,6321,6323,6328,6340,6341,6346,6351,6354,6355,6357,6359,6361,6362,6364,6365,6366,6367,6368,6369,6370,6371,6372,6374,6375,6376,6378,6379,6381,6385,6386,6388,6394,6395,6397,6398,6400,6401,6402,6404,6405,6406,6407,6408,6409,6410,6411,6412,6413,6414,6415,6416,6417,6418,6419,6420,6423,6424,6425,6426,6427,6428,6429,6430,6432,6433,6434,6435,6436,6438,6440,6441,6442,6443,6445,6446,6447,6448,6449,6450,6451,6452,6453,6454,6456,6457,6458,6460,6461,6462,6463,6464,6466,6467,6468,6470,6471,6472,6473,6474,6477,6480,6481,6483,6484,6485,6486,6487,6488,6491,6492,6493,6495,6496,6498,6500,6502,6503,6504,6505,6506,6507,6508,6510,6511,6512,6514,6515,6516,6518,6519,6520,6522,6523,6524,6525,6526,6527,6531,6533,6534,6535,6536,6537,6538,6539,6540,6541,6542,6544,6545,6547,6548,6549,6550,6552,6553,6554,6555,6557,6559,6560,6562,6563,6564,6565,6566,6567,6568,6570,6571,6572,6573,6574,6575,6576,6577,6578,6579,6580,6581,6582,6583,6584,6586,6587,6588,6589,6591,6592,6594,6596,6598,6599,6601,6602,6603,6604,6605,6606,6607,6608,6609,6610,6611,6612,6613,6614,6615,6616,6618,6621,6623,6624,6626,6627,6628,6629,6630,6631,6632,6633,6634,6635,6636,6637,6638,6639,6640,6641,6643,6644,6646,6648,6649,6650,6651,6652,6653,6654,6655,6657,6658,6659,6660,6661,6662,6663,6665,6666,6667,6668,6669,6670,6671,6672,6673,6674,6675,6678,6679,6680,6681,6682,6683,6684,6686,6687,6688,6689,6690,6691,6692,6694,6695,6696,6699,6701,6702,6703,6704,6705,6706,6708,6709,6710,6711,6712,6713,6714,6715,6716,6717,6718,6720,6721,6722,6723,6724,6726,6727,6728,6729,6730,6731,6732,6733,6734,6736,6737,6738,6739,6743,6744,6746,6753,6754,6760,6761,6763,6764,6767,6770,6771,6772,6774,6776,6777,6778,6779,6780,6781,6783,6784,6785,6786,6787,6788,6789,6790,6791,6792,6793,6794,6795,6796,6797,6798,6799,6800,6801,6802,6803,6804,6805,6806,6807,6808,6809,6811,6812,6813,6814,6815,6817,6818,6819,6820,6821,6822,6823,6824,6825,6826,6827,6828,6829,6832,6833,6834,6835,6836,6837,6838,6839,6842,6843,6845,6846,6847,6848,6849,6850,6851,6852,6853,6854,6855,6856,6858,6859,6860,6861,6862,6864,6865,6866,6867,6868,6870,6871,6872,6873,6874,6875,6876,6877,6878,6879,6880,6881,6882,6883,6884,6885,6886,6887,6888,6889,6890,6891,6892,6893,6894,6895,6896,6897,6898,6899,6901,6902,6903,6904,6905,6906,6907,6908,6911,6912,6913,6914,6915,6917,6918,6919,6920,6921,6922,6923,6924,6926,6927,6929,6930,6931,6932,6933,6934,6936,6941,6945,6948,6949,6950,6951,6952,6960,6963,6967,6974,6975,6977,6978,6980,6981,6985,6986,6992,6993,6997,6999,7006,7010,7011,7016,7022,7026,7030,7033,7035,7036,7037,7038,7039,7040,7041,7042,7044,7045,7046,7048,7049,7051,7052,7053,7054,7055,7057,7058,7061,7062,7063,7064,7065,7066,7067,7068,7069,7071,7072,7073,7074,7076,7077,7079,7080,7082,7083,7085,7087,7089,7090,7091,7092,7093,7094,7095,7096,7097,7098,7100,7102,7104,7106,7107,7108,7111,7112,7113,7114,7115,7116,7117,7118,7119,7120,7121,7123,7124,7125,7126,7127,7128,7132,7133,7134,7135,7136,7137,7138,7139,7140,7141,7142,7143,7144,7146,7148,7150,7151,7152,7153,7155,7157,7158,7159,7160,7161,7162,7163,7164,7166,7168,7169,7170,7172,7173,7174,7175,7176,7177,7178,7179,7180,7181,7182,7183,7184,7185,7186,7187,7188,7189,7190,7191,7192,7193,7194,7195,7196,7197,7198,7199,7200,7201,7202,7203,7204,7205,7206,7207,7208,7209,7210,7211,7212,7213,7214,7215,7216,7217,7218,7219,7220,7221,7222,7223,7224,7225,7226,7227,7228,7229,7230,7231,7232,7233,7234,7235,7236,7237,7238,7239,7240,7241,7242,7243,7247,7248,7249,7250,7251,7252,7253,7256,7257,7258,7259,7260,7261,7262,7263,7264,7265,7266,7267,7269,7271,7272,7276,7277,7278,7279,7282,7284,7285,7286,7290,7292,7293,7294,7295,7296,7297,7298,7299,7300,7301,7302,7303,7304,7305,7306,7307,7310,7312,7314,7315,7317,7318,7319,7321,7322,7323,7329,7332,7334,7335,7337,7339,7340,7341,7342,7343,7344,7345,7346,7347,7350,7351,7352,7353,7354,7355,7359,7363,7364,7366,7367,7369,7370,7377,7378,7379,7380,7381,7389,7390,7395,7398,7410,7420,7421,7425,7426,7427,7428,7429,7430,7431,7432,7433,7434,7435,7436,7437,7438,7439,7440,7442,7443,7444,7445,7446,7447,7448,7449,7451,7452,7453,7454,7455,7457,7458,7459,7460,7461,7462,7463,7464,7465,7466,7467,7468,7469,7470,7472,7473,7474,7475,7476,7477,7478,7479,7480,7481,7482,7483,7484,7485,7486,7487,7488,7489,7490,7491,7493,7495,7496,7497,7498,7499,7500,7501,7502,7503,7504,7505,7506,7507,7508,7510,7511,7512,7513,7514,7515,7516,7517,7518,7519,7520,7521,7522,7523,7524,7526,7527,7528,7529,7530,7532,7533,7534,7535,7536,7537,7538,7539,7540,7541,7542,7543,7544,7545,7546,7547,7548,7549,7550,7551,7552,7553,7554,7555,7556,7557,7558,7559,7560,7561,7562,7563,7564,7566,7567,7568,7569,7570,7572,7573,7576,7577,7578,7579,7580,7581,7583,7585,7587,7588,7589,7590,7591,7593,7594,7600,7604,7606,7609,7610,7611,7612,7613,7614,7615,7616,7621,7625,7626,7627,7628,7629,7634,7636,7637,7641,7642,7643,7645,7646,7647,7648,7652,7654,7655,7658,7659,7660,7664,7665,7666,7667,7668,7670,7673,7678,7679,7680,7681,7682,7683,7684,7685,7686,7687,7688,7690,7691,7692,7693,7694,7695,7696,7697,7698,7700,7701,7702,7704,7706,7707,7708,7709,7710,7711,7712,7713,7714,7716,7717,7718,7719,7720,7721,7723,7724,7726,7727,7728,7729,7730,7731,7733,7735,7738,7743,7744,7746,7747,7749,7750,7751,7753,7756,7757,7761,7763,7764,7765,7766,7767,7768,7769,7770,7772,7773,7776,7783,7784,7785,7786,7788,7790,7791,7792,7794,7795,7796,7798,7799,7800,7801,7804,7808,7809,7811,7813,7816,7818,7819,7823,7828,7829,7830,7832,7835,7836,7838,7842,7844,7845,7846,7847,7848,7849,7850,7851,7852,7853,7855,7858,7859,7860,7861,7862,7864,7865,7867,7868,7869,7870,7871,7872,7873,7874,7875,7876,7879,7880,7882,7883,7885,7886,7888,7889,7893,7895,7896,7897,7898,7900:{reCod=0;}
case 2,8,9,11,17,19,25,28,33,35,37,50,93,196,235,237,247,251,255,257,262,270,276,277,282,288,291,293,294,299,303,307,310,311,312,319,325,326,344,394,440,460,470,488,497,501,507,513,520,522,526,559,595,615,616,619,628,630,647,657,665,671,690,691,694,696,751,767,774,776,777,778,787,799,800,802,805,808,809,810,812,813,814,815,820,841,842,843,844,845,854,857,863,875,878,879,880,881,883,886,894,898,908,917,922,925,934,937,943,953,956,957,965,967,969,975,976,977,981,985,993,994,1000,1001,1003,1006,1007,1025,1078,1090,1091,1092,1104,1108,1110,1113,1119,1120,1122,1125,1127,1131,1132,1134,1138,1140,1143,1158,1160,1162,1165,1172,1180,1181,1189,1199,1215,1228,1234,1249,1256,1261,1279,1280,1284,1293,1297,1299,1300,1304,1315,1318,1321,1325,1328,1329,1331,1339,1344,1361,1373,1395,1402,1406,1408,1409,1413,1414,1417,1421,1423,1425,1437,1444,1445,1448,1453,1459,1462,1468,1470,1477,1478,1479,1482,1484,1488,1489,1490,1492,1495,1497,1500,1518,1519,1520,1526,1533,1552,1554,1569,1580,1609,1611,1614,1616,1617,1619,1623,1624,1627,1628,1636,1639,1644,1649,1667,1669,1674,1692,1696,1697,1702,1705,1707,1709,1710,1711,1721,1723,1727,1732,1736,1738,1742,1755,1756,1758,1759,1763,1764,1765,1766,1777,1778,1786,1791,1792,1800,1801,1813,1833,1839,1857,1864,1866,1882,1892,1935,1954,1960,1962,1971,1976,1977,1981,1982,1987,1995,1996,2014,2015,2021,2022,2029,2035,2037,2045,2048,2068,2069,2072,2079,2082,2092,2097,2098,2116,2126,2131,2140,2146,2147,2157,2169,2178,2199,2202,2203,2219,2220,2229,2238,2244,2245,2248,2250,2275,2276,2311,2316,2324,2332,2345,2346,2350,2373,2379,2381,2383,2389,2400,2403,2419,2427,2430,2448,2450,2453,2455,2456,2471,2552,2568,2611,2628,2633,2639,2641,2645,2653,2654,2656,2657,2675,2682,2709,2710,2711,2713,2716,2717,2718,2719,2725,2729,2745,2748,2749,2755,2756,2765,2768,2770,2787,2790,2808,2812,2813,2815,2816,2822,2825,2834,2835,2837,2841,2858,2859,2861,2865,2876,2877,2897,2903,2909,2911,2919,2948,2949,2951,2953,2959,2960,2989,2996,2997,3000,3011,3017,3018,3027,3032,3040,3044,3048,3049,3055,3073,3088,3123,3184,3191,3193,3197,3200,3211,3232,3237,3240,3263,3287,3311,3314,3335,3346,3349,3354,3355,3356,3358,3362,3371,3373,3375,3376,3378,3380,3386,3388,3392,3396,3405,3407,3409,3411,3413,3415,3416,3419,3420,3421,3424,3427,3440,3444,3448,3449,3455,3461,3472,3485,3492,3497,3505,3506,3507,3518,3531,3539,3549,3582,3591,3606,3611,3614,3615,3616,3621,3623,3624,3636,3651,3656,3667,3669,3671,3674,3683,3696,3703,3712,3722,3723,3726,3728,3730,3733,3734,3736,3741,3744,3745,3746,3748,3754,3761,3763,3771,3778,3789,3797,3798,3799,3809,3812,3819,3844,3845,3876,3888,3889,3901,3902,3910,3911,3917,3918,3919,3923,3926,3929,3933,3940,3943,3948,3954,3966,3969,3971,3973,3977,3979,3985,3986,3994,4003,4008,4011,4012,4013,4014,4018,4020,4022,4024,4026,4027,4033,4036,4040,4041,4042,4043,4045,4047,4049,4050,4051,4053,4056,4062,4063,4073,4074,4087,4089,4092,4094,4095,4103,4105,4106,4111,4116,4117,4118,4120,4125,4126,4129,4132,4136,4141,4143,4146,4148,4151,4152,4158,4159,4168,4169,4174,4180,4183,4194,4197,4201,4209,4220,4225,4226,4230,4232,4236,4246,4247,4253,4260,4271,4275,4288,4317,4334,4348,4360,4367,4372,4380,4426,4487,4508,4510,4515,4518,4521,4523,4526,4528,4529,4531,4532,4537,4538,4539,4541,4543,4548,4551,4556,4567,4571,4572,4577,4579,4581,4582,4591,4594,4596,4597,4601,4604,4610,4611,4614,4619,4625,4633,4640,4642,4643,4647,4654,4660,4661,4685,4686,4689,4692,4694,4695,4696,4698,4708,4710,4716,4717,4721,4735,4746,4755,4756,4758,4762,4767,4771,4787,4788,4790,4796,4806,4840,4841,4854,4855,4867,4892,4921,4926,4931,4939,4943,4946,4947,4959,4962,4963,4973,4976,4978,4979,4983,4998,5001,5014,5015,5019,5035,5041,5042,5050,5072,5073,5076,5079,5088,5092,5098,5100,5101,5103,5113,5114,5115,5117,5135,5146,5147,5149,5151,5152,5153,5155,5160,5162,5166,5169,5172,5175,5177,5178,5181,5196,5201,5203,5210,5217,5255,5258,5265,5272,5278,5281,5299,5304,5308,5326,5328,5342,5344,5346,5347,5349,5353,5361,5363,5368,5381,5383,5395,5401,5409,5410,5411,5421,5423,5454,5455,5458,5459,5461,5462,5467,5469,5472,5473,5474,5476,5479,5481,5483,5486,5487,5511,5548,5577,5581,5582,5587,5592,5593,5615,5616,5617,5633,5635,5642,5647,5649,5656,5657,5661,5666,5686,5695,5696,5700,5751,5752,5758,5767,5769,5770,5773,5780,5785,5792,5795,5803,5819,5830,5840,5846,5851,5861,5870,5872,5882,5894,5898,5906,5910,5918,5921,5945,5955,5973,5985,5989,6013,6014,6017,6018,6020,6032,6036,6038,6063,6066,6078,6084,6085,6089,6092,6094,6099,6108,6110,6116,6118,6123,6133,6136,6137,6157,6163,6176,6204,6217,6226,6230,6232,6247,6258,6275,6278,6279,6281,6283,6293,6322,6324,6325,6329,6333,6334,6337,6339,6343,6348,6358,6360,6363,6373,6380,6382,6383,6384,6390,6391,6437,6465,6469,6475,6476,6478,6479,6482,6489,6497,6499,6501,6528,6529,6530,6532,6543,6558,6569,6590,6595,6597,6620,6656,6664,6697,6698,6725,6741,6742,6747,6751,6758,6768,6769,6775,6782,6810,6816,6830,6831,6840,6841,6844,6909,6910,6916,6925,6928,6935,6937,6938,6939,6940,6947,6953,6954,6956,6957,6958,6959,6961,6962,6964,6965,6966,6968,6969,6970,6971,6972,6973,6983,6988,6990,6994,6996,6998,7002,7004,7005,7007,7008,7009,7012,7020,7028,7029,7032,7043,7047,7050,7070,7081,7084,7086,7088,7099,7101,7103,7105,7109,7110,7122,7129,7130,7131,7145,7154,7165,7167,7244,7245,7254,7255,7270,7274,7280,7287,7288,7289,7309,7313,7320,7325,7326,7327,7328,7330,7338,7349,7360,7362,7372,7373,7374,7375,7376,7382,7387,7394,7396,7397,7402,7407,7411,7419,7423,7441,7456,7494,7525,7531,7565,7571,7574,7582,7584,7586,7596,7597,7598,7599,7603,7607,7608,7617,7619,7622,7623,7630,7631,7633,7640,7644,7650,7661,7672,7675,7689,7699,7703,7705,7715,7722,7734,7737,7740,7741,7742,7754,7759,7774,7778,7780,7782,7787,7789,7793,7797,7802,7803,7807,7810,7812,7814,7815,7820,7824,7826,7833,7834,7837,7839,7840,7841,7843,7854,7856,7857,7866,7877,7881,7884,7887,7890,7891,7894,7902:{reCod=1;}
case 22,26,27,29,30,32,43,151,158,210,213,238,242,246,250,280,281,287,292,300,304,305,309,328,337,362,423,468,469,512,517,561,581,582,583,584,588,590,591,592,593,594,596,598,599,601,602,604,607,608,609,611,612,613,614,617,618,620,621,622,626,627,629,632,651,675,693,736,763,775,779,801,822,830,847,859,899,909,918,935,947,961,970,983,1032,1088,1089,1095,1096,1105,1106,1107,1109,1114,1121,1123,1126,1129,1130,1135,1137,1139,1141,1147,1154,1156,1183,1184,1268,1273,1282,1291,1298,1301,1302,1305,1311,1320,1324,1326,1334,1336,1337,1340,1347,1351,1355,1362,1366,1372,1376,1384,1386,1392,1419,1424,1428,1432,1446,1457,1466,1467,1469,1473,1474,1475,1480,1481,1483,1485,1487,1493,1494,1496,1499,1501,1510,1513,1514,1516,1517,1620,1622,1625,1626,1634,1650,1653,1654,1659,1660,1661,1664,1681,1682,1684,1685,1688,1689,1694,1695,1698,1699,1701,1706,1713,1714,1716,1718,1719,1720,1728,1729,1730,1734,1741,1743,1745,1748,1749,1750,1752,1753,1760,1761,1762,1854,1884,1907,1930,1932,2009,2032,2039,2052,2104,2111,2118,2129,2133,2180,2190,2216,2235,2271,2372,2376,2377,2416,2420,2425,2478,2519,2592,2604,2642,2647,2649,2650,2652,2676,2691,2692,2695,2699,2700,2702,2703,2704,2712,2720,2721,2722,2723,2726,2727,2728,2731,2734,2736,2737,2738,2742,2743,2746,2747,2750,2754,2757,2758,2759,2760,2764,2792,2795,2804,2805,2807,2814,2817,2823,2827,2831,2833,2836,2845,2848,2854,2857,2875,2884,2886,2894,2895,2907,2925,2936,2943,2957,2970,2988,3001,3021,3025,3043,3050,3052,3070,3119,3125,3151,3180,3182,3196,3206,3207,3244,3310,3326,3329,3330,3334,3337,3339,3344,3345,3347,3348,3363,3366,3368,3372,3374,3381,3382,3383,3389,3390,3391,3394,3395,3400,3414,3430,3434,3435,3436,3438,3439,3441,3443,3462,3465,3494,3496,3527,3535,3540,3541,3547,3561,3569,3600,3613,3628,3634,3638,3659,3676,3684,3685,3686,3689,3695,3702,3711,3713,3717,3721,3739,3750,3758,3759,3762,3765,3775,3784,3801,3802,3821,3853,3878,3896,3909,3924,3925,3927,3936,3938,3941,3944,3946,3949,3950,3952,3955,3956,3957,3962,3963,3964,3968,3972,3974,3978,3980,3983,3984,3988,3989,3990,3995,3997,3999,4004,4005,4006,4007,4009,4015,4029,4031,4034,4035,4037,4038,4046,4052,4055,4060,4061,4065,4066,4072,4075,4080,4081,4083,4090,4097,4098,4099,4101,4104,4107,4108,4109,4110,4115,4121,4124,4130,4134,4135,4140,4144,4145,4149,4150,4153,4154,4161,4162,4163,4164,4165,4167,4171,4175,4176,4181,4182,4185,4186,4187,4188,4190,4191,4192,4198,4199,4202,4206,4207,4208,4210,4211,4213,4216,4217,4221,4227,4229,4231,4235,4237,4241,4244,4245,4251,4259,4264,4284,4305,4328,4393,4401,4473,4496,4498,4511,4512,4514,4525,4527,4530,4546,4547,4549,4550,4555,4557,4561,4564,4566,4568,4575,4576,4583,4589,4590,4593,4602,4606,4617,4620,4624,4628,4631,4632,4645,4664,4667,4668,4670,4676,4688,4693,4697,4699,4701,4703,4709,4723,4820,4870,4910,4911,4918,4924,4932,4935,4936,4953,4961,4965,4992,5016,5017,5018,5031,5032,5047,5061,5078,5086,5102,5116,5120,5130,5136,5137,5140,5141,5143,5145,5148,5150,5156,5157,5158,5159,5163,5165,5173,5185,5189,5190,5192,5199,5204,5208,5211,5226,5261,5262,5267,5285,5314,5321,5322,5323,5325,5327,5331,5334,5336,5337,5339,5340,5345,5351,5354,5384,5394,5399,5406,5413,5417,5425,5444,5449,5452,5457,5460,5464,5466,5468,5471,5475,5477,5478,5480,5485,5488,5489,5522,5569,5570,5571,5573,5583,5584,5598,5602,5604,5606,5608,5611,5619,5627,5629,5631,5632,5636,5639,5643,5652,5653,5667,5668,5674,5675,5679,5681,5690,5703,5707,5708,5712,5715,5718,5741,5745,5764,5766,5777,5786,5789,5798,5816,5820,5831,5836,5837,5843,5854,5863,5878,5886,5896,5922,5928,5957,5974,5980,5991,5992,6015,6016,6029,6043,6048,6079,6095,6097,6098,6104,6114,6115,6124,6127,6128,6129,6130,6131,6132,6134,6139,6183,6199,6225,6250,6251,6287,6312,6326,6327,6330,6332,6342,6344,6345,6347,6349,6352,6353,6356,6377,6387,6389,6392,6396,6399,6403,6421,6422,6439,6444,6455,6459,6490,6494,6513,6517,6546,6556,6561,6600,6617,6622,6625,6642,6645,6676,6677,6685,6707,6735,6740,6748,6749,6752,6757,6759,6762,6766,6773,6857,6863,6942,6943,6944,6976,6982,6984,6987,6989,6991,6995,7000,7001,7003,7013,7014,7015,7017,7019,7021,7023,7024,7025,7027,7031,7056,7059,7060,7075,7078,7147,7149,7246,7273,7275,7281,7283,7291,7308,7316,7324,7331,7333,7336,7348,7356,7358,7361,7365,7368,7383,7384,7385,7386,7391,7392,7393,7399,7400,7401,7404,7405,7406,7408,7409,7412,7414,7415,7416,7417,7418,7424,7450,7471,7509,7592,7595,7601,7602,7605,7618,7620,7624,7632,7635,7638,7639,7649,7651,7653,7656,7657,7662,7663,7669,7674,7677,7732,7736,7745,7748,7752,7755,7758,7760,7762,7771,7775,7777,7779,7781,7805,7806,7821,7822,7825,7827,7863,7878,7892,7899:{reCod=2;}
case 0,10,16,20,40,45,80,245,249,261,271,278,317,343,350,471,585,589,597,600,603,605,606,623,624,625,631,638,701,982,1018,1098,1116,1136,1142,1194,1465,1471,1472,1476,1491,1505,1508,1529,1601,1612,1629,1655,1656,1690,1715,1717,1722,1735,1740,1744,1782,1849,1871,1895,1948,1980,2000,2144,2200,2251,2285,2286,2374,2394,2467,2664,2701,2724,2730,2752,2753,2780,2788,2789,2809,2826,2870,2889,3016,3045,3092,3115,3195,3218,3261,3321,3325,3327,3328,3352,3387,3404,3490,3545,3548,3581,3617,3619,3627,3641,3657,3666,3725,3767,3774,3795,3817,3861,3921,3935,3953,3958,3960,3965,3981,4002,4010,4016,4021,4023,4025,4030,4032,4058,4059,4068,4093,4112,4119,4123,4127,4128,4139,4156,4157,4160,4166,4172,4178,4179,4196,4200,4203,4205,4212,4214,4215,4218,4219,4222,4223,4228,4234,4238,4239,4242,4371,4446,4603,4618,4646,4651,4828,4893,4898,4922,4927,4933,4960,4977,5002,5044,5119,5134,5139,5161,5200,5282,5329,5332,5335,5338,5348,5350,5554,5578,5596,5600,5622,5625,5640,5650,5658,5665,5672,5697,5704,5709,5710,5711,5713,5714,5753,5771,5778,5801,5814,5842,5852,5899,5901,5925,5969,6070,6113,6119,6120,6331,6335,6336,6338,6393,6509,6521,6551,6585,6593,6619,6647,6693,6719,6745,6750,6755,6756,6765,6869,6946,6955,6979,7018,7156,7171,7268,7311,7357,7371,7388,7403,7413,7492,7575,7676,7725,7739,7817,7901:{reCod=3;}
case 231,795,1151,1288,1486,2705,2784,2830,3331,3542,3860,4076,4133,4189,4304,4552,4705,4948,5048,5095,5324,5352,5419,5482,5579,5880,5986,6135,6350,6431,6900,7034,7831:{reCod=4;}
case 586,1093,1726,2732,7422,7671:{reCod=5;}
case 2967,3992,4204,4650,5684,6700:{reCod=6;}
}


//system.out("<div>ansId: "+ansId+"</div>"); 

qst = new question("choice", 9);
qst.setProperty("text", "Ricodificare automaticamente i comuni nelle seguenti classi di ampiezza centro");
qst.setProperty("code", "qd");
vector q9_opts = new vector {
"Fino 5.000 abitanti",
"5/10.000 abitanti",
"10/30.000 abitanti",
"30/100.000 abitanti",
"100/250.000 abitanti",
"250/500.000 abitanti",
"Oltre 500.000 abitanti"
};
qst.setProperty("options", q9_opts);
qst.setProperty("default_answer","{ 'selection': ["+reCod+"]}");
qst.setProperty("hidden", true);
send qst;

cmd=q9_opts.get(reCod);
//system.out("<div>Ampiezza: "+cmd+"</div>"); 

switch(prv)
{
case 23,42,67,90:{reCod=0;}
case 52,72:{reCod=1;}
case 22,25,27,76,104:{reCod=2;}
case 6,10,20,57,82:{reCod=3;}
case 13,31,34,55,63,68,75,77,79:{reCod=4;}
case 37,71,96,97:{reCod=5;}
case 35,43,78,80,106:{reCod=6;}
case 36,39,41,84:{reCod=7;}
case 11,15,24,26,45,47,50,54,56,64,87,99:{reCod=8;}
case 2,4,30,49,66:{reCod=9;}
case 19,40:{reCod=10;}
case 1,5,12,28,58,92,101,102:{reCod=11;}
case 7,8,16,33,44,89:{reCod=12;}
case 17,59,60,83,88:{reCod=13;}
case 0,18,21,29,53,62,74,86,93:{reCod=14;}
case 3,32,38,46,48,51,69,70,73,85:{reCod=15;}
case 14,94:{reCod=16;}
case 65,91:{reCod=17;}
case 98:{reCod=18;}
case 9,61,81,95,100,103,105:{reCod=19;}
}

qst = new question("choice", 9222);
qst.setProperty("text", "Regione");
qst.setProperty("code", "qddb");
vector q9222_opts = new vector {
"Abruzzo",
"Basilicata",
"Calabria",
"Campania",
"Emilia-Romagna",
"Friuli-Venezia Giulia",
"Lazio",
"Liguria",
"Lombardia",
"Marche",
"Molise",
"Piemonte",
"Puglia",
"Sardegna",
"Sicilia",
"Toscana",
"Trentino-Alto Adige/Südtirol",
"Umbria",
"Valle d'Aosta/Vallée d'Aoste",
"Veneto"
};
qst.setProperty("options", q9222_opts);
qst.setProperty("default_answer","{ 'selection': ["+reCod+"]}");
qst.setProperty("hidden", true);
send qst;

cmd=q9222_opts.get(reCod);
//system.out("<div>Regione: "+cmd+"</div>"); 

int regione=system.getProperty("ans9222");
////// RICODIFICA REGIONE IN AREA ///////

reCod=3;
switch(regione)
		{
		case 7,8,11,18:{reCod=0;}
		case 4,5,16,19:{reCod=1;}
		case 6,9,15,17:{reCod=2;}
		}	


	qst = new question("choice", 9333);
	qst.setProperty("text", "In quale regione vive?");
	qst.setProperty("code", "qdddc");
	vector q9333_opts = new vector {
		"Nord-Ovest",
		"Nord-est",
		"Centro",
		"Sud + Isole "
	};
	qst.setProperty("options", q9333_opts);
	qst.setProperty("default_answer","{ 'selection': ["+reCod+"]}");
	qst.setProperty("hidden", true);
	send qst;	


cmd=q9333_opts.get(reCod);
//system.out("<div>Area: "+cmd+"</div>"); 




// Q40: CONCEPT
qst = new question("open", 40);
qst.setProperty("text", "Il suo CAP di residenza:");
qst.setProperty("code", "cap");
qst.setProperty("view", "numeric");
if(autotest !="1")
{
    qst.setProperty("validation_rule", "^[0-9]{5}$");
    qst.setProperty("validation_error", "Inserire un CAP valido");
}

send qst;

// Q60: CHOICE
qst = new question("choice", 60);
qst.setProperty("text", "<p>Il seguente studio è svolto da Ipsos, un istituto di ricerche di mercato indipendente.</p> <p> Prima di procedere con l'intervista desidero informarla del fatto che l’intervista verrà svolta nel pieno rispetto del codice deontologico internazionale delle ricerche di mercato. La informo inoltre che manterremo il massimo riserbo su tutte le informazioni che ci fornirà e non riveleremo al committente dell'indagine il suo nome / i suoi dati personali senza il suo preventivo consenso. Le risposte raccolte verranno integrate con quelle di altri intervistati prima di presentare i risultati della ricerca. </p> <p> La informiamo inoltre che è libero/a di abbandonare l’intervista in qualsiasi momento. </p> <p> Si prega di notare che lo studio è condotto per conto di un produttore/distributore di prodotti a base di tabacco e/o nicotina al fine di comprendere le abitudini dei consumatori. </p> <p> Si prega di notare inoltre che lo studio è rivolto esclusivamente a maggiorenni consumatori di nicotina. </p> <p> Accettando di partecipare a questa indagine, lei si impegna a: </p> <ul> <li> Non condividere nessuna delle informazioni incluse in questa indagine come immagini, video, annunci pubblicitari e concetti tecnici, idee, servizi, prodotti o imballaggi; </li> <li> Non fotografare, registrare, pubblicare su Internet, copiare o riprodurre in altro modo le informazioni incluse in questa indagine; </li> <li> Non utilizzare le informazioni riservate dei nostri clienti a proprio vantaggio, a vantaggio di terzi o in alcun modo che possano avere un impatto negativo sul nostro cliente o sulla sua immagine pubblica. </li> </ul> <p> Dichiara di aver letto e di accettare le dichiarazioni di cui sopra? </p> ");
qst.setProperty("code", "agr");
qst.setProperty("show_rand", false);
vector q60_opts = new vector {
"Sì, sono d’accordo e desidero partecipare a questa indagine",
"No, non sono d‘accordo"
};
qst.setProperty("options", q60_opts);
send qst;

ansId=system.getProperty("ans60");
if (ansId==1  && autotest !="1") { return 4;}

// Q70: CHOICE
qst = new question("choice", 70);
qst.setProperty("text", "Lei o un membro della sua famiglia lavora in uno dei seguenti settori?");
qst.setProperty("code", "S6");
qst.setProperty("show_rand", true);
qst.setProperty("selection", "multiple");
vector q70_opts = new vector {
"Banche",
"Giornali / TV / Radio",
"Pubbliche relazioni",
"Ricerche di mercato",
"Pubblicità",
"Commercializzazione / Produzione di prodotti a base di tabacco",
"Commercializzazione / Produzione di birra o alcolici",
"Nessuno di questi#se#sf"
};
qst.setProperty("options", q70_opts);
send qst;

count=0;
for(int i=1,6)
{
sel=system.getProperty("ans70_"+i);
if (sel==true) { count=count+1; }
}

//if(count>0 && autotest !="1") { return 4; }

// Q80: CHOICE
qst = new question("choice", 80);
qst.setProperty("text", "Per favore, indichi se soffre di qualcuno dei seguenti disturbi o se si trova in qualcuno dei seguenti stati.");
qst.setProperty("code", "s7");
qst.setProperty("selection", "multiple");
qst.setProperty("show_rand", true);
vector q80_opts = new vector {
"Cancro",
"Raffreddore",
"Disturbi cronici ai seni frontali",
"Enfisema o altri disturbi polmonari",
"Disturbi cardiaci",
"Gravidanza",
"Allattamento",
"Nessuno di questi#se#sf"
};
qst.setProperty("options", q80_opts);
qst.setProperty("default_answer","{ 'selection': [7]}");
qst.setProperty("hidden", true);
send qst;

sel=system.getProperty("ans80_7");
//if(sel==false && autotest !="1") { return 4;}

// Q90: CHOICE
qst = new question("choice", 90);
qst.setProperty("text", "Quali dei seguenti prodotti ha acquistato e consumato negli ultimi 12 mesi?");
qst.setProperty("code", "S8");
qst.setProperty("selection", "multiple");
//qst.setProperty("show_rand", true);
vector q90_opts = new vector {
"Prodotti contenenti nicotina (sigarette confezionate tradizionali, tabacco trinciato da rollare, sigarette elettroniche / da svapare, stick con o senza tabacco da scaldare, sacchetti di nicotina – senza tabacco)",
"Birra (Chiare/Lager, Speciali – doppio malto, Radler, Bianche, Rosse, Artigianali, Analcoliche) ",
"Vino (Rosso, Bianco, Rosato)",
"Spumante / Prosecco ",
"Bevande gasate (Coca-Cola, aranciata, tonica, ecc.)",
"Bevande energetiche (Redbull, Monster,ecc.)",
"Nessuno di questi#se#sf"
};
qst.setProperty("options", q90_opts);
send qst;

sel=system.getProperty("ans90_0");
if (sel==false && autotest !="1") { return 4;}

// Q120: CHOICE
qst = new question("choice", 120);
qst.setProperty("text", "Da quanto tempo utilizza <b>prodotti a base di nicotina?</b>");
qst.setProperty("code", "S9");
qst.setProperty("show_rand", false);
vector q120_opts = new vector {
"Da 6 mesi o meno",
"Da più di 6 mesi, fino ai 2 anni",
"Da più di 2 anni, fino ai 5 anni",
"Da più di 5 anni"
};
qst.setProperty("options", q120_opts);
send qst;

ansId=system.getProperty("ans120");
//if (ansId==0 && autotest !="1") { return 4;}


string sortOrder="[2,0,1,3,4,5,6,7]";


// Q100: CHOICE
qst = new question("choice", 92);
qst.setProperty("text", "Quale tra i prodotti a base di nicotina riportati in elenco ha <b>ACQUISTATO e UTILIZZATO ALMENO UNA VOLTA</b> (anche se solo in passato, anche solo per provarla)?  <p>Selezioni tutti i prodotti a base di nicotina che ha utilizzato almeno una volta, anche se solo in passato.  </p>");
qst.setProperty("code", "S10.0");
qst.setProperty("show_rand", false);
qst.setProperty("selection", "multiple");
vector q92_opts = new vector {
"<b>Sigarette confezionate tradizionali</b>",
"<b>Sigarette arrotolate</b> (preparate a mano o realizzate con apposite macchinette)",
"<span style='font-size:16px'><b>Prodotti che scaldano stick – con o senza tabacco</b></span> (dispositivi alimentati a batteria che riscaldano stick – con o senza tabacco - anziché bruciarli; non contengono alcun liquido)",
"<b>Sigarette elettroniche ricaricabili con pod/cartucce preriempiti:</b> quando si svuotano, i pod/le cartucce vengono smaltiti e sostituiti con pod/cartucce nuovi, non possono essere ricaricate con liquidi in flaconcino",
"<b>Sigarette elettroniche utilizzate con flaconcini di liquido:</b> sigarette elettroniche ricaricabili che si ricavano versando il liquido direttamente dal flaconcino all'interno della sigaretta elettronica.",
"<b>Sigarette elettroniche monouso:</b> dispositivi per sigarette elettroniche preriempiti e quando il liquido termina si smaltisce l'intero dispositivo.",
"<b>Sacchetti di nicotina </b>(non contengono tabacco e si consumano mettendo il sacchetto con nicotina tra il labbro e la gengiva, da non confondere con i sacchetti di tabacco)",
"Nessuno di questi#se#sf"
};
qst.setProperty("options", q92_opts);
qst.setProperty("sortorder", sortOrder);
if (autotest =="1")
{
qst.setProperty("default_answer","{ 'selection': [2]}");
qst.setProperty("hidden", true);
}
send qst;


sel=system.getProperty("ans92_2");
if (sel==false) { return 4;}

vector q100_opts = new vector {
"<b>Sigarette confezionate tradizionali</b>",
"<b>Sigarette arrotolate</b> (preparate a mano o realizzate con apposite macchinette)",
"<span style='font-size:16px'><b>Prodotti che scaldano stick – con o senza tabacco</b></span> (dispositivi alimentati a batteria che riscaldano stick – con o senza tabacco - anziché bruciarli; non contengono alcun liquido)",
"<b>Sigarette elettroniche ricaricabili con pod/cartucce preriempiti:</b> quando si svuotano, i pod/le cartucce vengono smaltiti e sostituiti con pod/cartucce nuovi, non possono essere ricaricate con liquidi in flaconcino",
"<b>Sigarette elettroniche utilizzate con flaconcini di liquido:</b> sigarette elettroniche ricaricabili che si ricavano versando il liquido direttamente dal flaconcino all'interno della sigaretta elettronica.",
"<b>Sigarette elettroniche monouso:</b> dispositivi per sigarette elettroniche preriempiti e quando il liquido termina si smaltisce l'intero dispositivo.",
"<b>Sacchetti di nicotina </b>(non contengono tabacco e si consumano mettendo il sacchetto con nicotina tra il labbro e la gengiva, da non confondere con i sacchetti di tabacco)",
"Nessuno di questi#se#sf"
};

for(int i=0,6)
{
sel=system.getProperty("ans92_"+i);
if (sel==false)  {  opt ="#shopt"+i; q100_opts.set(i,opt); }
else { cmd=q100_opts.get(i); system.out("<div>S10.0_ANS: "+cmd+"</div>");}
}

qst = new question("choice", 93);
qst.setProperty("text", "Quale tra i prodotti a base di nicotina riportati in elenco ha <b>ACQUISTATO</b> e <b>UTILIZZATO NEGLI ULTIMI 3 MESI</b>?");
qst.setProperty("code", "S10.1");
qst.setProperty("show_rand", false);
qst.setProperty("selection", "multiple");
qst.setProperty("options", q100_opts);
qst.setProperty("sortorder", sortOrder);
if (autotest =="1")
{
qst.setProperty("default_answer","{ 'selection': [2]}");
qst.setProperty("hidden", true);
}
send qst;

selS101_1=system.getProperty("ans93_0");

sel=system.getProperty("ans93_2");
if (sel==false) { return 4;}


for(int i=0,6)
{
sel=system.getProperty("ans93_"+i);
if (sel==false)  {  opt ="#shopt"+i; q100_opts.set(i,opt); }
else { cmd=q100_opts.get(i); system.out("<div>S10.1_ANS: "+cmd+"</div>");}
}

// Q100: CHOICE
qst = new question("choice", 100);
qst.setProperty("text", "Quale tra i prodotti a base di nicotina riportati in elenco ha <b>ACQUISTATO</b> e<b> UTILIZZATO NEGLI ULTIMI 30 GIORNI</b>?  ");
qst.setProperty("code", "S10");
qst.setProperty("show_rand", false);
qst.setProperty("selection", "multiple");
qst.setProperty("options", q100_opts);
qst.setProperty("sortorder", sortOrder);
if (autotest =="1")
{
qst.setProperty("default_answer","{ 'selection': [2]}");
qst.setProperty("hidden", true);
}
send qst;


selS10_1=system.getProperty("ans100_0");
selS10_2=system.getProperty("ans100_1");
selS10_3=system.getProperty("ans100_2");
selS10_4=system.getProperty("ans100_3");
selS10_5=system.getProperty("ans100_4");
selS10_6=system.getProperty("ans100_5");
selS10_7=system.getProperty("ans100_6");

if (selS10_3==false) { return 4;}

//DEBUG CONTROLS
for(int i=0,6)
{
cmd=q100_opts.get(i);
sel=system.getProperty("ans100_"+i);
if (sel==true) {system.out("<div>S10_ANS: "+cmd+"</div>"); }
}



qst = new question("choice", 103);
qst.setProperty("text", "Con quale frequenza utilizza <b>prodotti che scaldano stick con o senza tabacco</b>?");
qst.setProperty("code", "s11");
vector q103_opts = new vector {
"Almeno una volta al giorno",
"Almeno una volta alla settimana/mese",
"Meno di una volta al mese"
};
qst.setProperty("options", q103_opts);
send qst;

ansId=system.getProperty("ans103");
if (ansId==2) { return 4;}


valControl=system.getProperty("valControl");
//system.out("<div>valcontrol1: "+valControl+"</div>"); 

qtext="Tra le marche di <b>stick (con o senza tabacco) scaldati da dispositivi alimentati a batteria</b> che ha dichiarato di aver utilizzato almeno una volta in passato, quali ha <b>ACQUISTATO</b> e <b>UTILIZZATO NEGLI ULTIMI 30 GIORNI</b>? Selezioni tutte le marche che ha <b>UTILIZZATO ALMENO UNA VOLTA NEGLI ULTIMI 30 GIORNI.</b> "+allinea;

qst = new question("choice", 210);
qst.setProperty("text", qtext);
qst.setProperty("selection", "multiple");
qst.setProperty("show_rand", true);
qst.setProperty("code", "s12");
vector q210_opts = new vector {
    "LUCKY STRIKE Designed for Glo <img class='img-responsive logos' src='https://www.primisoft.com/fields/IPS/R2501014/resources/br1.jpg'/>",
    "NEO <img class='img-responsive logos' src='https://www.primisoft.com/fields/IPS/R2501014/resources/br2.jpg'/>",
    "VEO <img class='img-responsive logos' src='https://www.primisoft.com/fields/IPS/R2501014/resources/br3.jpg'/>",
    "FiiT <img class='img-responsive logos' src='https://www.primisoft.com/fields/IPS/R2501014/resources/br4.jpg'/>",
    "HEETS <img class='img-responsive logos' src='https://www.primisoft.com/fields/IPS/R2501014/resources/br5.jpg'/>",
    "TEREA <img class='img-responsive logos' src='https://www.primisoft.com/fields/IPS/R2501014/resources/br6.jpg'/>",
    "LEVIA <img class='img-responsive logos' src='https://www.primisoft.com/fields/IPS/R2501014/resources/br7.jpg'/>",
    "DELIA <img class='img-responsive logos' src='https://www.primisoft.com/fields/IPS/R2501014/resources/br8.jpg'/>",
    "CAMEL for Ploom <img class='img-responsive logos' src='https://www.primisoft.com/fields/IPS/R2501014/resources/br9.jpg'/>",
    "iD <img class='img-responsive logos' src='https://www.primisoft.com/fields/IPS/R2501014/resources/br10.jpg'/>",
    "iSENZIA <img class='img-responsive logos' src='https://www.primisoft.com/fields/IPS/R2501014/resources/br11.jpg'/>",
    "Altra marca (specificare)#so#sf"
};

qst.setProperty("options", q210_opts);
send qst;
count=0;
for(int i=0,11)
{
sel=system.getProperty("ans210_"+i);
cmd=q210_opts.get(i);
if (sel==true) { system.out("<div>Q4_ANS: "+cmd+"</div>"); count=count+1; }
}


if (count>=3 && valControl=="null") 
{
system.setProperty("valControl","1");
//system.out("<div>valcontrol2: "+valControl+"</div>"); 

// elimina l'ultima risposta
system.setProperty("delete", "ans210");
// ripropone la domanda
qst.setProperty("text", "<p style='color: red'>Ci ha detto di aver acquistato 3 o più marche di stick negli ultimi 30 giorni. E' sicuro? <br/><br/> Se si, selezioni nuovamente i brand citati in precendenza, altrimenti faccia attenzione a selezionare soltanto quelli utilizzati almeno una volta negli <b>ultimi 30 giorni</b>. <p>"+qtext);
send qst;
}


// Duplicazione del vettore con rimozione del tag #so#sf
vector q210_opts_b = new vector {
    "LUCKY STRIKE Designed for Glo <img class='img-responsive logos' src='https://www.primisoft.com/fields/IPS/R2501014/resources/br1.jpg'/>",
    "NEO <img class='img-responsive logos' src='https://www.primisoft.com/fields/IPS/R2501014/resources/br2.jpg'/>",
    "VEO <img class='img-responsive logos' src='https://www.primisoft.com/fields/IPS/R2501014/resources/br3.jpg'/>",
    "FiiT <img class='img-responsive logos' src='https://www.primisoft.com/fields/IPS/R2501014/resources/br4.jpg'/>",
    "HEETS <img class='img-responsive logos' src='https://www.primisoft.com/fields/IPS/R2501014/resources/br5.jpg'/>",
    "TEREA <img class='img-responsive logos' src='https://www.primisoft.com/fields/IPS/R2501014/resources/br6.jpg'/>",
    "LEVIA <img class='img-responsive logos' src='https://www.primisoft.com/fields/IPS/R2501014/resources/br7.jpg'/>",
    "DELIA <img class='img-responsive logos' src='https://www.primisoft.com/fields/IPS/R2501014/resources/br8.jpg'/>",
    "CAMEL for Ploom <img class='img-responsive logos' src='https://www.primisoft.com/fields/IPS/R2501014/resources/br9.jpg'/>",
    "iD <img class='img-responsive logos' src='https://www.primisoft.com/fields/IPS/R2501014/resources/br10.jpg'/>",
    "iSENZIA <img class='img-responsive logos' src='https://www.primisoft.com/fields/IPS/R2501014/resources/br11.jpg'/>",
    "Altra marca#sf "
};

// Inizializzazione del contatore
count = 0;
// Ciclo per controllare e nascondere gli item
for (int i = 0, 11) {
    sel = system.getProperty("ans210_" + i);

    if (sel == false) {
        opt = "#shopt" + i; 
        q210_opts_b.set(i, opt);
        reCod = i; // Salva l'ultimo indice nascosto
    }

    if (sel == true) {
        s12Cod=s12Cod+i+",";

        if (i == 11) { // Indice con #so
            comp = system.getProperty("ans210_11_comp");
            q210_opts_b.set(i, comp);
        }
        count = count + 1;
    }
}

s12Cod=s12Cod+"99";

//system.out("<div>s12Cod: "+s12Cod+"</div>"); 

qst = new question("scale", 220);
qst.setProperty("text", "E con quale <b>frequenza</b> utilizza le <b>marche di stick (con o senza tabacco) scaldati da dispositivi alimentati a batteria</b> che ha dichiarato di aver utilizzato <b>NEGLI ULTIMI 30 GIORNI</b>?");
qst.setProperty("code", "s13");
qst.setProperty("show_rand", true);
qst.setProperty("rows", q210_opts_b);
vector q220_cols = new vector {
"La uso quotidianamente 	",
"La uso almeno una volta alla settimana	",
"La uso meno spesso"
};
qst.setProperty("cols", q220_cols);
send qst;

count=0;
for(int i=0,11)
{
ansId=system.getProperty("ans220_"+i);
if (ansId==0 || ansId==1) 
    { 
       if (i !=11) {count=count+1; } 
       reCod=i;

switch(i)
        {
            case 0: { cod0 = 0; selQ5_1=true;}
            case 1: { cod1 = 1; selQ5_2=true;}
            case 2: { cod2 = 2; selQ5_3=true;}
            case 3: { cod3 = 3; selQ5_4=true;}
            case 4: { cod4 = 4; selQ5_5=true;}
            case 5: { cod5 = 5; selQ5_6=true;}
            case 6: { cod6 = 6; selQ5_7=true;}
            case 7: { cod7 = 7; selQ5_8=true;}
            case 8: { cod8 = 8; selQ5_9=true;}
            case 9: { cod9 = 9; selQ5_10=true;}
            case 10: { cod10 = 10; selQ5_11=true;}
            case 11: { cod11 = 11; selQ5_12=true;}
        }

        cmd=q220_cols.get(ansId);
        label=q210_opts_b.get(i);
        system.out("<div>Q5_ANS: "+label+" - "+cmd+"</div>");

    }
if(ansId==2)
    {
        cmd=q220_cols.get(ansId);
        label=q210_opts_b.get(i);
        system.out("<div>Q5_ANS: "+label+" - "+cmd+"</div>");
    }
}

if (count==0) { return 4; }

qst = new question("choice", 225);
qst.setProperty("text", "INSERT HIDDEN qReportingTarget – check QUOTAS");
qst.setProperty("code", "s13.allocation");
qst.setProperty("selection", "multiple");
vector q225_opts = new vector {
    "LUCKY STRIKE Designed for Glo <img class='img-responsive logos' src='https://www.primisoft.com/fields/IPS/R2501014/resources/br1.jpg'/>",
    "NEO <img class='img-responsive logos' src='https://www.primisoft.com/fields/IPS/R2501014/resources/br2.jpg'/>",
    "VEO <img class='img-responsive logos' src='https://www.primisoft.com/fields/IPS/R2501014/resources/br3.jpg'/>",
    "FiiT <img class='img-responsive logos' src='https://www.primisoft.com/fields/IPS/R2501014/resources/br4.jpg'/>",
    "HEETS <img class='img-responsive logos' src='https://www.primisoft.com/fields/IPS/R2501014/resources/br5.jpg'/>",
    "TEREA <img class='img-responsive logos' src='https://www.primisoft.com/fields/IPS/R2501014/resources/br6.jpg'/>",
    "LEVIA <img class='img-responsive logos' src='https://www.primisoft.com/fields/IPS/R2501014/resources/br7.jpg'/>",
    "DELIA <img class='img-responsive logos' src='https://www.primisoft.com/fields/IPS/R2501014/resources/br8.jpg'/>",
    "CAMEL for Ploom <img class='img-responsive logos' src='https://www.primisoft.com/fields/IPS/R2501014/resources/br9.jpg'/>",
    "iD <img class='img-responsive logos' src='https://www.primisoft.com/fields/IPS/R2501014/resources/br10.jpg'/>",
    "iSENZIA <img class='img-responsive logos' src='https://www.primisoft.com/fields/IPS/R2501014/resources/br11.jpg'/>",
"ALTRA MARCA"
};

sel=system.getProperty("ans210_11");
if (sel==true) { comp = system.getProperty("ans210_11_comp"); q225_opts.set(11,comp); }

qst.setProperty("options", q225_opts);
qst.setProperty("default_answer","{ 'selection': ["+cod0+","+cod1+","+cod2+","+cod3+","+cod4+","+cod5+","+cod6+","+cod7+","+cod8+","+cod9+","+cod10+" ,"+cod11+"]}");
qst.setProperty("hidden", true);
send qst;

count=0;
for(int i=0,11)
{
sel=system.getProperty("ans225_"+i);
if (sel==true) { count=count+1; }
}



qst = new question("choice", 227);
qst.setProperty("text", "E tra quelle riportate in elenco, quale marca di stick (con o senza tabacco) scaldati da dispositivi alimentati a batteria ACQUISTA e UTILIZZA PIÙ SPESSO? ");
qst.setProperty("code", "s14");
qst.setProperty("controller", 225);
if(count==1)
{
    qst.setProperty("default_answer","{ 'selection': ["+reCod+"]}");
    qst.setProperty("hidden", true);
}
send qst;


if (selS10_1==true) 
{

    qst = new question("choice", 130);
    qst.setProperty("text", "Con quale frequenza utilizza <b>Sigarette confezionate tradizionali</b>?");
    qst.setProperty("code", "Q0A");
    qst.setProperty("show_rand", false);
    vector q130_opts = new vector {
    "Almeno una volta al giorno",
    "Almeno una volta a settimana",
    "Una volta al mese / meno di una volta al mese"
    };
    qst.setProperty("options", q130_opts);
    send qst;

    ansId=system.getProperty("ans130");

    cmd=q130_opts.get(ansId);
    system.out("<div>Q0A_ANS:"+cmd+"</div>"); 

}


if (selS10_2==true) 
{

    qst = new question("choice", 135);
    qst.setProperty("text", "Con quale frequenza utilizza <b>sigarette arrotolate (con tabacco trinciato)</b>?");
    qst.setProperty("code", "Q0B");
    qst.setProperty("show_rand", false);
    vector q135_opts = new vector {
    "Almeno una volta al giorno",
    "Almeno una volta a settimana",
    "Una volta al mese / meno di una volta al mese"
    };
    qst.setProperty("options", q135_opts);
    send qst;

    ansId=system.getProperty("ans135");

    cmd=q135_opts.get(ansId);
    system.out("<div>Q0B_ANS: "+cmd+"</div>"); 
}

if (selS10_4==true || selS10_5==true || selS10_6==true) 
{

    qst = new question("choice", 115);
    qst.setProperty("text", "Con quale frequenza utilizza <b>sigarette elettroniche/prodotti da svapare</b>?");
    qst.setProperty("code", "q0C");
    vector q115_opts = new vector {
    "Almeno una volta al giorno",
    "Almeno una volta alla settimana",
    "Una volta al mese / meno di una volta al mese"
    };
    qst.setProperty("options", q115_opts);
    send qst;

    ansId=system.getProperty("ans115");
    cmd=q115_opts.get(ansId);
    system.out("<div>Q0C_ANS: "+cmd+"</div>"); 

} 


if (selS10_7==true) 
{

    qst = new question("choice", 137);
    qst.setProperty("text", "Con quale frequenza utilizza <b>sacchetti di nicotina</b>?");
    qst.setProperty("code", "Q0D");
    qst.setProperty("show_rand", false);
    vector q137_opts = new vector {
    "Almeno una volta al giorno",
    "Almeno una volta a settimana",
    "Una volta al mese / meno di una volta al mese"
    };
    qst.setProperty("options", q137_opts);
    send qst;

    ansId=system.getProperty("ans137");
    cmd=q137_opts.get(ansId);
    system.out("<div>Q0D_ANS: "+cmd+"</div>"); 
}

// inizio controllo
reCod=0;
countS10=0;

for(int i=0,6)
{
    sel = system.getProperty("ans100_" + i);

    if (i == 0 || i == 1) 
    { // Per i codici 1 e 2
        if (sel == true && sel1_2 == false) 
        {
            sel1_2 = true; // Consideriamo il gruppo (1 e 2) come un'unica selezione
            countS10 = countS10 + 1;
        }
    } 
    if (i==3 || i==4 || i==5)
    {
        if (sel == true && sel1_456 == false) 
        {
            sel1_456 = true; // Consideriamo il gruppo (3 - 4e 5) come un'unica selezione
            countS10 = countS10 + 1;
        }
    }

    if (i==2 || i==6)
    { // Per gli altri codici
        if(sel==true) { countS10 = countS10 + 1;}
    }
}

system.out("<div><b>countS10 Pre:</b> "+countS10+"</div>"); 

if(selS10_1==true || selS10_2==true )
{
    // Q0A = CODE 1
    if(selS10_1==true)
    {
        ansId = system.getProperty("ans130");
        if (ansId == 0) { freq1 = true; }
    }


    if(selS10_2==true)
    {
        // Q0B = CODE 1
        ansId = system.getProperty("ans135");
        if (ansId == 0) { freq1 = true; }

    }

    if(freq1==false) { countS10 = countS10 - 1;}

}

if(selS10_4==true || selS10_5==true || selS10_6==true)
{

    // Q0C = CODE 1 OR 2
    ansId = system.getProperty("ans115");
    if (ansId == 0 || ansId == 1) { freq3 = true; }
    else { countS10 = countS10 - 1;}

}


if(selS10_7==true)
{
    // Q0D = CODE 1 OR 2
    ansId = system.getProperty("ans137");
    if (ansId == 0 || ansId == 1) { freq4 = true; }
    else { countS10 = countS10 - 1;}
}


reCod=0;

if (countS10>=3)
{
     reCod=2; 
}

if (countS10==2)
{
     reCod=1; 
}


//system.out("<div> countS10: "+countS10+"</div>"); 
//system.out("<div> freq1: "+freq1+"</div>"); 
//system.out("<div> freq2: "+freq2+"</div>"); 
//system.out("<div> freq3: "+freq3+"</div>"); 
//system.out("<div> freq4: "+freq4+"</div>"); 

qst = new question("choice", 139);
qst.setProperty("text", "CATEGORY ACTIVE USERS");
qst.setProperty("code", "cau");
vector q139_opts = new vector {
"Solus HP",
"Category Dualist",
"Category Polyuser"
};
qst.setProperty("options", q139_opts);
qst.setProperty("default_answer","{ 'selection': ["+reCod+"]}");
qst.setProperty("hidden", true);
send qst;

cmd=q139_opts.get(reCod);
system.out("<div><b>CATEGORY ACTIVE USERS:</b> "+cmd+"</div>"); 
system.out("<div><b>countS10 Post:</b> "+countS10+"</div>"); 

vector skubrands = new vector { "Benson&Hedges Blue 100'S", "Benson&Hedges Blue Dure Da 20", "Benson&Hedges Blue Morbide Da 20", "Benson & Hedges Gold", "Benson&Hedges Red 100'S", "Benson&Hedges Red Dure Da 20", "Benson&Hedges Red Morbide Da 20", "Benson&Hedges Blue Super Slim", "Benson&Hedges Yellow Super Slim", "Benson&Hedges White 100'S", "Benson&Hedges White Dure Da 20", "Benson&Hedges Yellow 100'S", "Benson&Hedges Yellow Dure Da 20", "Camel Activate (Freshness) Dure Da 20", "Camel Activate Connect Blue (No Caps) Dure Da 20", "Camel Blue Dure Da 20 100'S", "Camel Blue Dure Da 20", "Camel Blue Morbide Da 20", "Camel Compact Blue Dure Da 20", "Camel Essential Blue Dure Da 20", "Camel Filter 100'S Dure Da 20", "Camel Filter Dure Da 20", "Camel Filter Morbide Da 20", "Camel Orange Dure Da 20", "Camel Senso Gold 20", "Camel Silver Dure Da 20", "Camel White Dure Da 20", "Chesterfield Blu 100s", "Chesterfield Blu Dure Da 20", "Chesterfield Blu Morbide Da 20", "Chesterfield Tuned Blue Da 20", "Chesterfield Rosse 100s", "Chesterfield Rosse Dure Da 20", "Chesterfield Rosse Morbide Da 20", "Chesterfield Remix Da 20", "Chesterfield Silver Dure Da 20", "Lucky Strike Amber Dure Da 20", "Lucky Strike Compact Demi Da 20", "Lucky Strike Eclipse Dure Da 20", "Lucky Strike Red Dure Da 20", "Lucky Strike Red Morbide Da 20", "Lucky Strike Red 100s", "Lucky Strike Silver Bay Dure Da 20", "Marlboro Advance Touch Dure Da 20", "Marlboro Blue Line", "Marlboro Crafted Gold 100'S", "Marlboro Crafted Gold Dure Da 20", "Marlboro Crafted Red 100'S", "Marlboro Crafted Red Dure Da 20", "Marlboro Gold 100s", "Marlboro Gold Dure Da 20", "Marlboro Gold Morbide Da 20", "Marlboro Gold Line", "Marlboro Gold Pocket Pack Dure Da 20", "Marlboro Gold Touch Dure Da 20", "Marlboro Mix Da 20", "Marlboro Pocket Red Pack Morbide Da 20", "Marlboro Prime Dure Da 20", "Marlboro 100s Dure", "Marlboro Rosse Dure Da 20", "Marlboro Morbide Da 20", "Marlboro Red Touch Dure Da 20", "Marlboro Silver Dure Da 20", "Merit Bianca Dure Da 20", "Merit Blu 100s", "Merit Blu Dure Da 20", "Merit Bay Dure Da 20", "Merit Gialla 100s", "Merit Gialla Dure Da 20", "Merit Gialla Morbide Da 20", "Merit Uno Dure Da 20", "Ms/Dunhill Bianche (Extra Light) Dure Da 20", "Ms/Dunhill Bionde 100s", "Ms/Dunhill Bionde F Dure Da 20", "Ms/Dunhill Bionde F Morbide Da 20", "Ms/Dunhill Chiare (Leggere) Dure Da 20", "Ms/Dunhill Rosse Dure Da 20", "Ms/Dunhill Rosse Morbide Da 20", "Dunhill Club Bianca", "Dunhill Club Gold", "Dunhill International Da 20", "Dunhill Ssl Blue 20", "Dunhill Ssl Red 20", "Dunhill Ssl Gold 20", "Philip Morris Azure 100s", "Philip Morris Azure Dure Da 20", "Philip Morris Blue 100s", "Philip Morris Blue Dure Da 20", "Philip Morris Blue Morbide Da 20", "Philip Morris Filter Kings", "Philip Morris One Da 20 Premium", "Philip Morris Red 100s", "Philip Morris Red Dure Da 20", "Philip Morris Red Morbide Da 20", "Philip Morris Ssl Beige", "Philip Morris Ssl Blue", "Winston Blue 100s", "Winston Blue Dure Da 20", "Winston Blue Morbide Da 20", "Winston Blue Super Line", "Winston Caster 100s*20pz", "Winston Caster*Ast20", "Winston Classic Red 100'S", "Winston Classic Red Dure", "Winston Classic Red Morbide", "Winston Compact Demi Da 20", "Winston Expand Dure Da 20", "Winston Silver Dure Da 20 100'S", "Winston Silver Dure Da 20", "Winston Silver Super Line", "Winston White Dure Da 20", "Winston White Super Line", "Winston Xstyle Blue Dure Da 20", "Winston Xstyle White Dure Da 20","ROTHMANS Special Blue", "Rothmans of London D-Series Select dure da 20", "ROTHMANS of London Essence Blue dure da 20", "ROTHMANS of London EssenceBlue morbide da 20", "ROTHMANS of London Essence  Red 100S 20s", "ROTHMANS of London Essence Red dure da 20", "ROTHMANS of London EssenceRed morbide da 20", "ROTHMANS of London Essence  Silver dure da 20", "ROTHMANS of London Essence Silver morbide da 20", "Rothmans Slim  Sensora Super Slims da 20", "ROTHMANS of London Superslim  Blue Tube dure da 20", "ROTHMANS of London Superslim Silver Tube dure da 20", "ROTHMANS of London Superslim White Tube dure da 20", "Rothmans of London Surround dure", "ROTHMANS of London Tube Blue 100S 20s", "ROTHMANS of London Tube Blue dure da 20", "ROTHMANS of London Tube Silver 100S 20s", "ROTHMANS of London Tube Silver dure da 20", "ROTHMANS of London Tube White dure da 20", "ROTHMANS of London Tube White 100S da 20" };
vector skubrands8 = new vector { "Benson&Hedges Blue 100'S", "Benson&Hedges Blue Dure Da 20", "Benson&Hedges Blue Morbide Da 20", "Benson & Hedges Gold", "Benson&Hedges Red 100'S", "Benson&Hedges Red Dure Da 20", "Benson&Hedges Red Morbide Da 20", "Benson&Hedges Blue Super Slim", "Benson&Hedges Yellow Super Slim", "Benson&Hedges White 100'S", "Benson&Hedges White Dure Da 20", "Benson&Hedges Yellow 100'S", "Benson&Hedges Yellow Dure Da 20", "Camel Activate (Freshness) Dure Da 20", "Camel Activate Connect Blue (No Caps) Dure Da 20", "Camel Blue Dure Da 20 100'S", "Camel Blue Dure Da 20", "Camel Blue Morbide Da 20", "Camel Compact Blue Dure Da 20", "Camel Essential Blue Dure Da 20", "Camel Filter 100'S Dure Da 20", "Camel Filter Dure Da 20", "Camel Filter Morbide Da 20", "Camel Orange Dure Da 20", "Camel Senso Gold 20", "Camel Silver Dure Da 20", "Camel White Dure Da 20", "Chesterfield Blu 100s", "Chesterfield Blu Dure Da 20", "Chesterfield Blu Morbide Da 20", "Chesterfield Tuned Blue Da 20", "Chesterfield Rosse 100s", "Chesterfield Rosse Dure Da 20", "Chesterfield Rosse Morbide Da 20", "Chesterfield Remix Da 20", "Chesterfield Silver Dure Da 20", "Lucky Strike Amber Dure Da 20", "Lucky Strike Compact Demi Da 20", "Lucky Strike Eclipse Dure Da 20", "Lucky Strike Red Dure Da 20", "Lucky Strike Red Morbide Da 20", "Lucky Strike Red 100s", "Lucky Strike Silver Bay Dure Da 20", "Marlboro Advance Touch Dure Da 20", "Marlboro Blue Line", "Marlboro Crafted Gold 100'S", "Marlboro Crafted Gold Dure Da 20", "Marlboro Crafted Red 100'S", "Marlboro Crafted Red Dure Da 20", "Marlboro Gold 100s", "Marlboro Gold Dure Da 20", "Marlboro Gold Morbide Da 20", "Marlboro Gold Line", "Marlboro Gold Pocket Pack Dure Da 20", "Marlboro Gold Touch Dure Da 20", "Marlboro Mix Da 20", "Marlboro Pocket Red Pack Morbide Da 20", "Marlboro Prime Dure Da 20", "Marlboro 100s Dure", "Marlboro Rosse Dure Da 20", "Marlboro Morbide Da 20", "Marlboro Red Touch Dure Da 20", "Marlboro Silver Dure Da 20", "Merit Bianca Dure Da 20", "Merit Blu 100s", "Merit Blu Dure Da 20", "Merit Bay Dure Da 20", "Merit Gialla 100s", "Merit Gialla Dure Da 20", "Merit Gialla Morbide Da 20", "Merit Uno Dure Da 20", "Ms/Dunhill Bianche (Extra Light) Dure Da 20", "Ms/Dunhill Bionde 100s", "Ms/Dunhill Bionde F Dure Da 20", "Ms/Dunhill Bionde F Morbide Da 20", "Ms/Dunhill Chiare (Leggere) Dure Da 20", "Ms/Dunhill Rosse Dure Da 20", "Ms/Dunhill Rosse Morbide Da 20", "Dunhill Club Bianca", "Dunhill Club Gold", "Dunhill International Da 20", "Dunhill Ssl Blue 20", "Dunhill Ssl Red 20", "Dunhill Ssl Gold 20", "Philip Morris Azure 100s", "Philip Morris Azure Dure Da 20", "Philip Morris Blue 100s", "Philip Morris Blue Dure Da 20", "Philip Morris Blue Morbide Da 20", "Philip Morris Filter Kings", "Philip Morris One Da 20 Premium", "Philip Morris Red 100s", "Philip Morris Red Dure Da 20", "Philip Morris Red Morbide Da 20", "Philip Morris Ssl Beige", "Philip Morris Ssl Blue", "Winston Blue 100s", "Winston Blue Dure Da 20", "Winston Blue Morbide Da 20", "Winston Blue Super Line", "Winston Caster 100s*20pz", "Winston Caster*Ast20", "Winston Classic Red 100'S", "Winston Classic Red Dure", "Winston Classic Red Morbide", "Winston Compact Demi Da 20", "Winston Expand Dure Da 20", "Winston Silver Dure Da 20 100'S", "Winston Silver Dure Da 20", "Winston Silver Super Line", "Winston White Dure Da 20", "Winston White Super Line", "Winston Xstyle Blue Dure Da 20", "Winston Xstyle White Dure Da 20","ROTHMANS Special Blue", "Rothmans of London D-Series Select dure da 20", "ROTHMANS of London Essence Blue dure da 20", "ROTHMANS of London EssenceBlue morbide da 20", "ROTHMANS of London Essence  Red 100S 20s", "ROTHMANS of London Essence Red dure da 20", "ROTHMANS of London EssenceRed morbide da 20", "ROTHMANS of London Essence  Silver dure da 20", "ROTHMANS of London Essence Silver morbide da 20", "Rothmans Slim  Sensora Super Slims da 20", "ROTHMANS of London Superslim  Blue Tube dure da 20", "ROTHMANS of London Superslim Silver Tube dure da 20", "ROTHMANS of London Superslim White Tube dure da 20", "Rothmans of London Surround dure", "ROTHMANS of London Tube Blue 100S 20s", "ROTHMANS of London Tube Blue dure da 20", "ROTHMANS of London Tube Silver 100S 20s", "ROTHMANS of London Tube Silver dure da 20", "ROTHMANS of London Tube White dure da 20", "ROTHMANS of London Tube White 100S da 20" };
vector skubrandsOriginal = new vector { "Benson&Hedges Blue 100'S", "Benson&Hedges Blue Dure Da 20", "Benson&Hedges Blue Morbide Da 20", "Benson & Hedges Gold", "Benson&Hedges Red 100'S", "Benson&Hedges Red Dure Da 20", "Benson&Hedges Red Morbide Da 20", "Benson&Hedges Blue Super Slim", "Benson&Hedges Yellow Super Slim", "Benson&Hedges White 100'S", "Benson&Hedges White Dure Da 20", "Benson&Hedges Yellow 100'S", "Benson&Hedges Yellow Dure Da 20", "Camel Activate (Freshness) Dure Da 20", "Camel Activate Connect Blue (No Caps) Dure Da 20", "Camel Blue Dure Da 20 100'S", "Camel Blue Dure Da 20", "Camel Blue Morbide Da 20", "Camel Compact Blue Dure Da 20", "Camel Essential Blue Dure Da 20", "Camel Filter 100'S Dure Da 20", "Camel Filter Dure Da 20", "Camel Filter Morbide Da 20", "Camel Orange Dure Da 20", "Camel Senso Gold 20", "Camel Silver Dure Da 20", "Camel White Dure Da 20", "Chesterfield Blu 100s", "Chesterfield Blu Dure Da 20", "Chesterfield Blu Morbide Da 20", "Chesterfield Tuned Blue Da 20", "Chesterfield Rosse 100s", "Chesterfield Rosse Dure Da 20", "Chesterfield Rosse Morbide Da 20", "Chesterfield Remix Da 20", "Chesterfield Silver Dure Da 20", "Lucky Strike Amber Dure Da 20", "Lucky Strike Compact Demi Da 20", "Lucky Strike Eclipse Dure Da 20", "Lucky Strike Red Dure Da 20", "Lucky Strike Red Morbide Da 20", "Lucky Strike Red 100s", "Lucky Strike Silver Bay Dure Da 20", "Marlboro Advance Touch Dure Da 20", "Marlboro Blue Line", "Marlboro Crafted Gold 100'S", "Marlboro Crafted Gold Dure Da 20", "Marlboro Crafted Red 100'S", "Marlboro Crafted Red Dure Da 20", "Marlboro Gold 100s", "Marlboro Gold Dure Da 20", "Marlboro Gold Morbide Da 20", "Marlboro Gold Line", "Marlboro Gold Pocket Pack Dure Da 20", "Marlboro Gold Touch Dure Da 20", "Marlboro Mix Da 20", "Marlboro Pocket Red Pack Morbide Da 20", "Marlboro Prime Dure Da 20", "Marlboro 100s Dure", "Marlboro Rosse Dure Da 20", "Marlboro Morbide Da 20", "Marlboro Red Touch Dure Da 20", "Marlboro Silver Dure Da 20", "Merit Bianca Dure Da 20", "Merit Blu 100s", "Merit Blu Dure Da 20", "Merit Bay Dure Da 20", "Merit Gialla 100s", "Merit Gialla Dure Da 20", "Merit Gialla Morbide Da 20", "Merit Uno Dure Da 20", "Ms/Dunhill Bianche (Extra Light) Dure Da 20", "Ms/Dunhill Bionde 100s", "Ms/Dunhill Bionde F Dure Da 20", "Ms/Dunhill Bionde F Morbide Da 20", "Ms/Dunhill Chiare (Leggere) Dure Da 20", "Ms/Dunhill Rosse Dure Da 20", "Ms/Dunhill Rosse Morbide Da 20", "Dunhill Club Bianca", "Dunhill Club Gold", "Dunhill International Da 20", "Dunhill Ssl Blue 20", "Dunhill Ssl Red 20", "Dunhill Ssl Gold 20", "Philip Morris Azure 100s", "Philip Morris Azure Dure Da 20", "Philip Morris Blue 100s", "Philip Morris Blue Dure Da 20", "Philip Morris Blue Morbide Da 20", "Philip Morris Filter Kings", "Philip Morris One Da 20 Premium", "Philip Morris Red 100s", "Philip Morris Red Dure Da 20", "Philip Morris Red Morbide Da 20", "Philip Morris Ssl Beige", "Philip Morris Ssl Blue", "Winston Blue 100s", "Winston Blue Dure Da 20", "Winston Blue Morbide Da 20", "Winston Blue Super Line", "Winston Caster 100s*20pz", "Winston Caster*Ast20", "Winston Classic Red 100'S", "Winston Classic Red Dure", "Winston Classic Red Morbide", "Winston Compact Demi Da 20", "Winston Expand Dure Da 20", "Winston Silver Dure Da 20 100'S", "Winston Silver Dure Da 20", "Winston Silver Super Line", "Winston White Dure Da 20", "Winston White Super Line", "Winston Xstyle Blue Dure Da 20", "Winston Xstyle White Dure Da 20", "ROTHMANS Special Blue", "Rothmans of London D-Series Select dure da 20", "ROTHMANS of London Essence Blue dure da 20", "ROTHMANS of London EssenceBlue morbide da 20", "ROTHMANS of London Essence  Red 100S 20s", "ROTHMANS of London Essence Red dure da 20", "ROTHMANS of London EssenceRed morbide da 20", "ROTHMANS of London Essence  Silver dure da 20", "ROTHMANS of London Essence Silver morbide da 20", "Rothmans Slim  Sensora Super Slims da 20", "ROTHMANS of London Superslim  Blue Tube dure da 20", "ROTHMANS of London Superslim Silver Tube dure da 20", "ROTHMANS of London Superslim White Tube dure da 20", "Rothmans of London Surround dure", "ROTHMANS of London Tube Blue 100S 20s", "ROTHMANS of London Tube Blue dure da 20", "ROTHMANS of London Tube Silver 100S 20s", "ROTHMANS of London Tube Silver dure da 20", "ROTHMANS of London Tube White dure da 20", "ROTHMANS of London Tube White 100S da 20", "#shaltra Marca Di Sigarette Tradizionali#sf" };


if(selS101_1==true)
{
    // Q1BIS // 

        qst = new question("choice", 240);
        qst.setProperty("text", "Quali tra le seguenti marche di sigarette confezionate tradizionali ha acquistato e utilizzato <b>NEGLI ULTIMI 3 MESI</b> <p>Selezioni tutte le marche che ha utilizzato almeno una volta NEGLI ULTIMI 3 MESI.</p>? "+allinea);
        qst.setProperty("selection", "multiple");
        qst.setProperty("show_rand", true);
        qst.setProperty("code", "q1bis");
        vector q240_opts = new vector {
            "CAMEL <img style='width:250px' class='img-responsive logos' src='https://www.primisoft.com/fields/IPS/R2501014/resources/sig1.png'/>",
            "CHESTERFIELD <img style='width:250px' class='img-responsive logos' src='https://www.primisoft.com/fields/IPS/R2501014/resources/sig2.png'/>",
            "BENSON & HEDGES <img style='width:250px' class='img-responsive logos' src='https://www.primisoft.com/fields/IPS/R2501014/resources/sig3.png'/>",
            "LUCKY STRIKE <img style='width:250px' class='img-responsive logos' src='https://www.primisoft.com/fields/IPS/R2501014/resources/sig4.png'/>",
            "MARLBORO <img style='width:250px' class='img-responsive logos' src='https://www.primisoft.com/fields/IPS/R2501014/resources/sig5.png'/>",
            "MERIT <img style='width:250px' class='img-responsive logos' src='https://www.primisoft.com/fields/IPS/R2501014/resources/sig6.png'/>",
            "MS / DUNHILL <img style='width:250px' class='img-responsive logos' src='https://www.primisoft.com/fields/IPS/R2501014/resources/sig7.png'/>",
            "PHILIP MORRIS <img style='width:250px' class='img-responsive logos' src='https://www.primisoft.com/fields/IPS/R2501014/resources/sig8.png'/>",
            "WINSTON <img style='width:250px' class='img-responsive logos' src='https://www.primisoft.com/fields/IPS/R2501014/resources/sig9.png'/>",
            "ROTHMANS OF LONDON  <img style='width:250px' class='img-responsive logos' src='https://www.primisoft.com/fields/IPS/R2501014/resources/sig10.png'/>",
            "Altra marca di sigarette tradizionali#sf"
        };
        qst.setProperty("options", q240_opts);
        send qst;

        vector q2499_comps = new vector {"2405"};

        count=0;
        for(int i=0,9)
        {
        qid=2400+10*(i+1);
        if(i==9) { qid=2495; }

        sel=system.getProperty("ans240_"+i);
        if (sel==true) { opt=""+qid; countSku=countSku+1; q2499_comps.add(opt);  cmd=q240_opts.get(i);  system.out("<div>q1bis_ANS: "+cmd+"</div>");}
        }

        qst = new question("concept", 2405);
        qst.setProperty("text", " Quali tra le seguenti tipologie di <b>sigarette confezionate tradizionali</b> ha acquistato e utilizzato <b>NEGLI ULTIMI 3 MESI?</b> <p>Selezioni tutte le tipologie he che ha utilizzato almeno una volta <b>NEGLI ULTIMI 3 MESI</b>.</p>");

        for (int i = 0, 133) { 
            cmd = skubrandsOriginal.get(i);
            skubrands.set(i, cmd);
            if (i < 13 || i > 26) {
                opt = "#shopt" + i;
                skubrands.set(i, opt);
            }
        }

        qst = new question("choice", 2410);
        qst.setProperty("text", "<b>CAMEL</b>");
        qst.setProperty("code", "q1bisCamel");
        qst.setProperty("selection", "multiple");
        qst.setProperty("options", skubrands);

        for (int i = 0, 133) { 
            cmd = skubrandsOriginal.get(i);
            skubrands.set(i, cmd);
            if (i < 27 || i > 35) {
                opt = "#shopt" + i;
                skubrands.set(i, opt);
            }
        }

        qst = new question("choice", 2420);
        qst.setProperty("text", "<b>CHESTERFIELD</b>");
        qst.setProperty("code", "q1bisChester");
        qst.setProperty("selection", "multiple");
        qst.setProperty("options", skubrands);

        for (int i = 0, 133) { 
            cmd = skubrandsOriginal.get(i);
            skubrands.set(i, cmd);
            if (i >= 13) {
                opt = "#shopt" + i;
                skubrands.set(i, opt);
            }
        }
        qst = new question("choice", 2430);
        qst.setProperty("text", "<b>BENSON & HEDGES</b>");
        qst.setProperty("code", "q1bisBens");
        qst.setProperty("selection", "multiple");
        qst.setProperty("options", skubrands);

        for (int i = 0, 133) { 
            cmd = skubrandsOriginal.get(i);
            skubrands.set(i, cmd);
            if (i < 36 || i > 42) {
                opt = "#shopt" + i;
                skubrands.set(i, opt);
            }
        }

        qst = new question("choice", 2440);
        qst.setProperty("text", "<b>LUCKY STRIKE</b>");
        qst.setProperty("code", "q1bisLucky");
        qst.setProperty("selection", "multiple");
        qst.setProperty("options", skubrands);

        for (int i = 0, 133) { 
            cmd = skubrandsOriginal.get(i);
            skubrands.set(i, cmd);
            if (i < 43 || i > 62) {
                opt = "#shopt" + i;
                skubrands.set(i, opt);
            }
        }

        qst = new question("choice", 2450);
        qst.setProperty("text", "<b>MARLBORO</b>");
        qst.setProperty("code", "q1bisMarlb");
        qst.setProperty("selection", "multiple");
        qst.setProperty("options", skubrands);

        for (int i = 0, 133) { 
            cmd = skubrandsOriginal.get(i);
            skubrands.set(i, cmd);
            if (i < 63 || i > 70) {
                opt = "#shopt" + i;
                skubrands.set(i, opt);
            }
        }

        qst = new question("choice", 2460);
        qst.setProperty("text", "<b>MERIT</b>");
        qst.setProperty("code", "q1bisMerit");
        qst.setProperty("selection", "multiple");
        qst.setProperty("options", skubrands);

        for (int i = 0, 133) { 
            cmd = skubrandsOriginal.get(i);
            skubrands.set(i, cmd);
            if (i < 71 || i > 83) {
                opt = "#shopt" + i;
                skubrands.set(i, opt);
            }
        }

        qst = new question("choice", 2470);
        qst.setProperty("text", "<b>MS/DUNHILL</b>");
        qst.setProperty("code", "q1bisMsdun");
        qst.setProperty("selection", "multiple");
        qst.setProperty("options", skubrands);

        for (int i = 0, 133) { 
            cmd = skubrandsOriginal.get(i);
            skubrands.set(i, cmd);
            if (i < 84 || i > 95) {
                opt = "#shopt" + i;
                skubrands.set(i, opt);
            }
        }

        qst = new question("choice", 2480);
        qst.setProperty("text", "<b>PHILIP MORRIS</b>");
        qst.setProperty("code", "q1bisPhilp");
        qst.setProperty("selection", "multiple");
        qst.setProperty("options", skubrands);

        for (int i = 0, 133) { 
            cmd = skubrandsOriginal.get(i);
            skubrands.set(i, cmd);
            if (i < 96 || i > 113) {
                opt = "#shopt" + i;
                skubrands.set(i, opt);
            }
        }

        qst = new question("choice", 2490);
        qst.setProperty("text", "<b>WINSTON</b>");
        qst.setProperty("code", "q1bisWinston");
        qst.setProperty("selection", "multiple");
        qst.setProperty("options", skubrands);

        for (int i = 0, 133) { 
            cmd = skubrandsOriginal.get(i);
            skubrands.set(i, cmd);
            if (i < 114) {
                opt = "#shopt" + i;
                skubrands.set(i, opt);
            }
        }

        qst = new question("choice", 2495);
        qst.setProperty("text", "<b>ROTHMANS</b>");
        qst.setProperty("code", "q1bisRothmans");
        qst.setProperty("selection", "multiple");
        qst.setProperty("options", skubrands);

        if(countSku > 0) 
        {
            qst = new question("composed", 2499);
            qst.setProperty("components", q2499_comps);
            send qst;
        }

    // FINE Q1BIS // 



//Q1
if(selS10_1==true)
    {

                vector q250_opts = new vector {
                    "CAMEL <img style='width:250px' class='img-responsive logos' src='https://www.primisoft.com/fields/IPS/R2501014/resources/sig1.png'/>",
                    "CHESTERFIELD <img style='width:250px' class='img-responsive logos' src='https://www.primisoft.com/fields/IPS/R2501014/resources/sig2.png'/>",
                    "BENSON & HEDGES <img style='width:250px' class='img-responsive logos' src='https://www.primisoft.com/fields/IPS/R2501014/resources/sig3.png'/>",
                    "LUCKY STRIKE <img style='width:250px' class='img-responsive logos' src='https://www.primisoft.com/fields/IPS/R2501014/resources/sig4.png'/>",
                    "MARLBORO <img style='width:250px' class='img-responsive logos' src='https://www.primisoft.com/fields/IPS/R2501014/resources/sig5.png'/>",
                    "MERIT <img style='width:250px' class='img-responsive logos' src='https://www.primisoft.com/fields/IPS/R2501014/resources/sig6.png'/>",
                    "MS / DUNHILL <img style='width:250px' class='img-responsive logos' src='https://www.primisoft.com/fields/IPS/R2501014/resources/sig7.png'/>",
                    "PHILIP MORRIS <img style='width:250px' class='img-responsive logos' src='https://www.primisoft.com/fields/IPS/R2501014/resources/sig8.png'/>",
                    "WINSTON <img style='width:250px' class='img-responsive logos' src='https://www.primisoft.com/fields/IPS/R2501014/resources/sig9.png'/>",
                    "ROTHMANS OF LONDON  <img style='width:250px' class='img-responsive logos' src='https://www.primisoft.com/fields/IPS/R2501014/resources/sig10.png'/>",
                    "Altra marca di sigarette tradizionali#sf"
                    };
                    
                    count=0;
                    for(int i=0,10)
                    {
                    sel=system.getProperty("ans240_"+i);
                    if (sel==false)  {  opt ="#shopt"+i; q250_opts.set(i,opt); }
                    else { count=count+1; reCod=i; }
                    }

                    qst = new question("choice", 250);
                    qst.setProperty("text", "Lei ha dichiarato di aver acquistato e utilizzato <b>sigarette confezionate tradizionali NEGLI ULTIMI 30 GIORNI.</b> Quali tra le seguenti marche di <b>sigarette confezionate tradizionali</b> ha acquistato e utilizzato <b>NEGLI ULTIMI 30 GIORNI?</b> <p>Selezioni tutte le marche che ha utilizzato almeno una volta <b>NEGLI ULTIMI 30 GIORNI</b>.</p> "+allinea);
                    qst.setProperty("selection", "multiple");
                    qst.setProperty("show_rand", true);
                    qst.setProperty("code", "q1");
                    qst.setProperty("options", q250_opts);
                    if (count==1) { 
                        qst.setProperty("default_answer","{ 'selection': ["+reCod+"]}");
                        qst.setProperty("hidden", true);
                    }
                    send qst;

    vector q2599_comps = new vector {"2505"};

    count=0;
    countSku=0;
    for(int i=0,9)
    {
    qid=2500+10*(i+1);
    if(i==9) { qid=2592; }
    sel=system.getProperty("ans250_"+i);
    if (sel==true) { opt=""+qid; countSku=countSku+1; q2599_comps.add(opt);  cmd=q250_opts.get(i);  system.out("<div>q1_ANS: "+cmd+"</div>");}
    }  

    qst = new question("concept", 2505);
    qst.setProperty("text", " Quali tra le seguenti tipologie di <b>sigarette confezionate tradizionali</b> ha acquistato e utilizzato <b>NEGLI ULTIMI 30 GIORNI?</b> <p>Selezioni tutte le tipologie he che ha utilizzato almeno una volta <b>NEGLI ULTIMI 30 GIORNI</b>.</p>");




    for (int i = 0, 133) { 
        cmd=skubrandsOriginal1.get(i);
        skubrands1.set(i, cmd);
        if (i < 13 || i > 26) 
        {
            opt = "#shopt" + i;
            skubrands1.set(i, opt);
        }

        else
        {
            sel=system.getProperty("ans240_0");
            if(sel==false)
            {
                opt = "#shopt" + i;
                skubrands1.set(i, opt);
                skubrands8.set(i, opt);
            }
            else 
            {
                sel=system.getProperty("ans2410_"+i);
                if(sel==false)
                {
                    opt = "#shopt" + i;
                    skubrands1.set(i, opt);
                    skubrands8.set(i, opt);
                }
                else{
                    countQ1sel=countQ1sel+1;
                    countQ1bismop=countQ1bismop+1;
                    reQ1sel=i;
                }
            }
        }
    }

    qst = new question("choice", 2510);
    qst.setProperty("text", "<b>CAMEL</b>");
    qst.setProperty("code", "q1Camel");
    qst.setProperty("selection", "multiple");
    qst.setProperty("options", skubrands1);
    if(countQ1sel==1)
    {
        qst.setProperty("default_answer","{ 'selection': ["+reQ1sel+"]}");
        qst.setProperty("hidden", true);
    }

    countQ1sel=0;
    for (int i = 0, 133) { 
        cmd = skubrandsOriginal1.get(i);
        skubrands1.set(i, cmd);
        if (i < 27 || i > 35) {
            opt = "#shopt" + i;
            skubrands1.set(i, opt);
        }

        else
        {
            sel=system.getProperty("ans240_1");
            if(sel==false)
            {
                opt = "#shopt" + i;
                skubrands1.set(i, opt);
                skubrands8.set(i, opt);
            }
            else 
            {
                sel=system.getProperty("ans2420_"+i);
                if(sel==false)
                {
                    opt = "#shopt" + i;
                    skubrands1.set(i, opt);
                    skubrands8.set(i, opt);
                }
                else{
                    countQ1sel=countQ1sel+1;
                    countQ1bismop=countQ1bismop+1;
                    reQ1sel=i;
                }
            }
        }

    }

    qst = new question("choice", 2520);
    qst.setProperty("text", "<b>CHESTERFIELD</b>");
    qst.setProperty("code", "q1Chester");
    qst.setProperty("selection", "multiple");
    qst.setProperty("options", skubrands1);
    if(countQ1sel==1)
    {
        qst.setProperty("default_answer","{ 'selection': ["+reQ1sel+"]}");
        qst.setProperty("hidden", true);
    }

    countQ1sel=0;
    for (int i = 0, 133) { 
        cmd=skubrandsOriginal1.get(i);
        skubrands1.set(i, cmd);
        if (i >= 13) {
            opt = "#shopt" + i;
            skubrands1.set(i, opt);
        }

        else
        {
            sel=system.getProperty("ans240_2");
            if(sel==false)
            {
                opt = "#shopt" + i;
                skubrands1.set(i, opt);
                skubrands8.set(i, opt);
            }
            else 
            {
                sel=system.getProperty("ans2430_"+i);
                if(sel==false)
                {
                    opt = "#shopt" + i;
                    skubrands1.set(i, opt);
                    skubrands8.set(i, opt);
                }
                else{
                    countQ1sel=countQ1sel+1;
                    countQ1bismop=countQ1bismop+1;
                    reQ1sel=i;
                }
            }
        }
    }

    qst = new question("choice", 2530);
    qst.setProperty("text", "<b>BENSON & HEDGES</b>");
    qst.setProperty("code", "q1Bens");
    qst.setProperty("selection", "multiple");
    qst.setProperty("options", skubrands1);
    if(countQ1sel==1)
    {
        qst.setProperty("default_answer","{ 'selection': ["+reQ1sel+"]}");
        qst.setProperty("hidden", true);
    }

    countQ1sel=0;
    for (int i = 0, 133) { 
        cmd = skubrandsOriginal1.get(i);
        skubrands1.set(i, cmd);
        if (i < 36 || i > 42) {
            opt = "#shopt" + i;
            skubrands1.set(i, opt);
        }
    else
        {
            sel=system.getProperty("ans240_3");
            if(sel==false)
            {
                opt = "#shopt" + i;
                skubrands1.set(i, opt);
                skubrands8.set(i, opt);
            }
            else 
            {
                sel=system.getProperty("ans2440_"+i);
                if(sel==false)
                {
                    opt = "#shopt" + i;
                    skubrands1.set(i, opt);
                    skubrands8.set(i, opt);
                }
                else{
                    countQ1sel=countQ1sel+1;
                    countQ1bismop=countQ1bismop+1;
                    reQ1sel=i;
                }
            }
        }
    }


    qst = new question("choice", 2540);
    qst.setProperty("text", "<b>LUCKY STRIKE</b>");
    qst.setProperty("code", "q1Lucky");
    qst.setProperty("selection", "multiple");
    qst.setProperty("options", skubrands1);
    if(countQ1sel==1)
    {
        qst.setProperty("default_answer","{ 'selection': ["+reQ1sel+"]}");
        qst.setProperty("hidden", true);
    }

    countQ1sel=0;
    for (int i = 0, 133) { 
        cmd = skubrandsOriginal1.get(i);
        skubrands1.set(i, cmd);
        if (i < 43 || i > 62) {
            opt = "#shopt" + i;
            skubrands1.set(i, opt);
        }
    else
        {
            sel=system.getProperty("ans240_4");
            if(sel==false)
            {
                opt = "#shopt" + i;
                skubrands1.set(i, opt);
                skubrands8.set(i, opt);
            }
            else 
            {
                sel=system.getProperty("ans2450_"+i);
                if(sel==false)
                {
                    opt = "#shopt" + i;
                    skubrands1.set(i, opt);
                    skubrands8.set(i, opt);
                }
                else{
                    countQ1sel=countQ1sel+1;
                    countQ1bismop=countQ1bismop+1;
                    reQ1sel=i;
                }
            }
        }
    }


    qst = new question("choice", 2550);
    qst.setProperty("text", "<b>MARLBORO</b>");
    qst.setProperty("code", "q1Marlb");
    qst.setProperty("selection", "multiple");
    qst.setProperty("options", skubrands1);
    if(countQ1sel==1)
    {
        qst.setProperty("default_answer","{ 'selection': ["+reQ1sel+"]}");
        qst.setProperty("hidden", true);
    }

    countQ1sel=0;
    for (int i = 0, 133) { 
        cmd = skubrandsOriginal1.get(i);
        skubrands1.set(i, cmd);
        if (i < 63 || i > 70) {
            opt = "#shopt" + i;
            skubrands1.set(i, opt);
        }
    else
        {
            sel=system.getProperty("ans240_5");
            if(sel==false)
            {
                opt = "#shopt" + i;
                skubrands1.set(i, opt);
                skubrands8.set(i, opt);
            }
            else 
            {
                sel=system.getProperty("ans2460_"+i);
                if(sel==false)
                {
                    opt = "#shopt" + i;
                    skubrands1.set(i, opt);
                    skubrands8.set(i, opt);
                }
                else{
                    countQ1sel=countQ1sel+1;
                    countQ1bismop=countQ1bismop+1;
                    reQ1sel=i;
                }
            }
        }
    }


    qst = new question("choice", 2560);
    qst.setProperty("text", "<b>MERIT</b>");
    qst.setProperty("code", "q1Merit");
    qst.setProperty("selection", "multiple");
    qst.setProperty("options", skubrands1);
    if(countQ1sel==1)
    {
        qst.setProperty("default_answer","{ 'selection': ["+reQ1sel+"]}");
        qst.setProperty("hidden", true);
    }


    countQ1sel=0;
    for (int i = 0, 133) { 
        cmd = skubrandsOriginal1.get(i);
        skubrands1.set(i, cmd);
        if (i < 71 || i > 83) {
            opt = "#shopt" + i;
            skubrands1.set(i, opt);
        }
    else
        {
            sel=system.getProperty("ans240_6");
            if(sel==false)
            {
                opt = "#shopt" + i;
                skubrands1.set(i, opt);
                skubrands8.set(i, opt);
            }
            else 
            {
                sel=system.getProperty("ans2470_"+i);
                if(sel==false)
                {
                    opt = "#shopt" + i;
                    skubrands1.set(i, opt);
                    skubrands8.set(i, opt);
                }
                else{
                    countQ1sel=countQ1sel+1;
                    countQ1bismop=countQ1bismop+1;
                    reQ1sel=i;
                }
            }
        }
    }


    qst = new question("choice", 2570);
    qst.setProperty("text", "<b>MS/DUNHILL</b>");
    qst.setProperty("code", "q1Msdun");
    qst.setProperty("selection", "multiple");
    qst.setProperty("options", skubrands1);
    if(countQ1sel==1)
    {
        qst.setProperty("default_answer","{ 'selection': ["+reQ1sel+"]}");
        qst.setProperty("hidden", true);
    }

    countQ1sel=0;
    for (int i = 0, 133) { 
        cmd = skubrandsOriginal1.get(i);
        skubrands1.set(i, cmd);
        if (i < 84 || i > 95) {
            opt = "#shopt" + i;
            skubrands1.set(i, opt);
        }
    else
        {
            sel=system.getProperty("ans240_7");
            if(sel==false)
            {
                opt = "#shopt" + i;
                skubrands1.set(i, opt);
                skubrands8.set(i, opt);
            }
            else 
            {
                sel=system.getProperty("ans2480_"+i);
                if(sel==false)
                {
                    opt = "#shopt" + i;
                    skubrands1.set(i, opt);
                    skubrands8.set(i, opt);
                }
                else{
                    countQ1sel=countQ1sel+1;
                    countQ1bismop=countQ1bismop+1;
                    reQ1sel=i;
                }
            }
        }
    }


    qst = new question("choice", 2580);
    qst.setProperty("text", "<b>PHILIP MORRIS</b>");
    qst.setProperty("code", "q1Philp");
    qst.setProperty("selection", "multiple");
    qst.setProperty("options", skubrands1);
    if(countQ1sel==1)
    {
        qst.setProperty("default_answer","{ 'selection': ["+reQ1sel+"]}");
        qst.setProperty("hidden", true);
    }

    countQ1sel=0;
    for (int i = 0, 133) { 
        cmd=skubrandsOriginal1.get(i);
        skubrands1.set(i, cmd);
        if (i < 96 || i > 113) {
            opt = "#shopt" + i;
            skubrands1.set(i, opt);
        }
    else
        {
            sel=system.getProperty("ans240_8");
            if(sel==false)
            {
                opt = "#shopt" + i;
                skubrands1.set(i, opt);
                skubrands8.set(i, opt);
            }
            else 
            {
                sel=system.getProperty("ans2490_"+i);
                if(sel==false)
                {
                    opt = "#shopt" + i;
                    skubrands1.set(i, opt);
                    skubrands8.set(i, opt);
                }
                else{
                    countQ1sel=countQ1sel+1;
                    countQ1bismop=countQ1bismop+1;
                    reQ1sel=i;
                }
            }
        }
    }

    qst = new question("choice", 2590);
    qst.setProperty("text", "<b>WINSTON</b>");
    qst.setProperty("code", "q1Winston");
    qst.setProperty("selection", "multiple");
    qst.setProperty("options", skubrands1);
    if(countQ1sel==1)
    {
        qst.setProperty("default_answer","{ 'selection': ["+reQ1sel+"]}");
        qst.setProperty("hidden", true);
    }

    countQ1sel=0;
    for (int i = 0, 133) { 
        cmd=skubrandsOriginal1.get(i);
        skubrands1.set(i, cmd);
        if (i < 114) {
            opt = "#shopt" + i;
            skubrands1.set(i, opt);
        }
        else
        {
            sel=system.getProperty("ans240_9");
            if(sel==false)
            {
                opt = "#shopt" + i;
                skubrands1.set(i, opt);
                skubrands8.set(i, opt);
            }
            else 
            {
                sel=system.getProperty("ans2495_"+i);
                if(sel==false)
                {
                    opt = "#shopt" + i;
                    skubrands1.set(i, opt);
                    skubrands8.set(i, opt);
                }
                else{
                    countQ1sel=countQ1sel+1;
                    countQ1bismop=countQ1bismop+1;
                    reQ1sel=i;
                }
            }
        }
    }

    qst = new question("choice", 2592);
    qst.setProperty("text", "<b>ROTHMANS</b>");
    qst.setProperty("code", "q1Rotmans");
    qst.setProperty("selection", "multiple");
    qst.setProperty("options", skubrands1);
    if(countQ1sel==1)
    {
        qst.setProperty("default_answer","{ 'selection': ["+reQ1sel+"]}");
        qst.setProperty("hidden", true);
    }


    if(countSku>0)
    {
    qst = new question("composed", 2599);
    qst.setProperty("components", q2599_comps);
    send qst;
    }

    skubrandsOriginal1.set(134, "Altra marca di sigarette tradizionali");


        count=0;

        for(int i=0,10)
        {
        sel=system.getProperty("ans250_"+i);
            //camel
            if(i==0)
                {
                for(int j=13,26)
                    {
                    if(sel==true) { selb=system.getProperty("ans2510_"+j); }
                    if(sel==false || selb==false) {
                                    opt = "#shopt" + j;
                                        skubrandsOriginal1.set(j, opt);
                                }
                        if(selb==true) { count=count+1; reCod=j;}         
                    }
                }
            //chesterf
            if(i==1)
                {
                for(int j=27,35)
                    {
                    if(sel==true) {selb=system.getProperty("ans2520_"+j);}
                    if(sel==false || selb==false) {
                                    opt = "#shopt" + j;
                                        skubrandsOriginal1.set(j, opt);
                                }
                        if(selb==true) { count=count+1; reCod=j;}              
                    }
                }
            //benson
            if(i==2)
                {
                for(int j=0,12)
                    {
                    if(sel==true) {selb=system.getProperty("ans2530_"+j);}
                    if(sel==false || selb==false) {
                                    opt = "#shopt" + j;
                                        skubrandsOriginal1.set(j, opt);
                                }
                        if(selb==true) { count=count+1; reCod=j;}         
                    }
                }
            //lucky
            if(i==3)
                {
                for(int j=35,42)
                    {
                    if(sel==true) {selb=system.getProperty("ans2540_"+j);}
                    if(sel==false || selb==false) {
                                    opt = "#shopt" + j;
                                        skubrandsOriginal1.set(j, opt);;
                                }
                        if(selb==true) { count=count+1; reCod=j;}           
                    }
                }

            //marlb
            if(i==4)
                {
                for(int j=43,62)
                    {
                    if(sel==true) {selb=system.getProperty("ans2550_"+j);}
                    if(sel==false || selb==false) {
                                    opt = "#shopt" + j;
                                        skubrandsOriginal1.set(j, opt);
                                }
                    if(selb==true) { count=count+1; reCod=j;}         
                    }
                }

            //merit
            if(i==5)
                {
                for(int j=63,70)
                    {
                    if(sel==true) {selb=system.getProperty("ans2560_"+j);}
                    if(sel==false || selb==false) {
                                    opt = "#shopt" + j;
                                        skubrandsOriginal1.set(j, opt);
                                }
                    if(selb==true) { count=count+1; reCod=j;}                        
                    }
                }

            //ms
            if(i==6)
                {
                for(int j=71,83)
                    {
                    if(sel==true) {selb=system.getProperty("ans2570_"+j);}
                    if(sel==false || selb==false) {
                                    opt = "#shopt" + j;
                                        skubrandsOriginal1.set(j, opt);
                                }
                        if(selb==true) { count=count+1; reCod=j;}                    
                    }
                }
            //philip
            if(i==7)
                {
                for(int j=84,95)
                    {
                    if(sel==true) {selb=system.getProperty("ans2580_"+j);}
                    if(sel==false || selb==false) {
                                    opt = "#shopt" + j;
                                        skubrandsOriginal1.set(j, opt);
                                }
                        if(selb==true) { count=count+1; reCod=j;}                   
                    }
                }
            //winston
            if(i==8)
                {
                for(int j=96,113)
                    {
                    if(sel==true) { selb=system.getProperty("ans2590_"+j);}
                    if(sel==false || selb==false) {
                                    opt = "#shopt" + j;
                                        skubrandsOriginal1.set(j, opt);
                                }
                        if(selb==true) { count=count+1; reCod=j;}                   
                    }
                }
            //rothmans
            if(i==9)
                {
                for(int j=114,133)
                    {
                    if(sel==true) { selb=system.getProperty("ans2592_"+j);}
                    if(sel==false || selb==false) {
                                    opt = "#shopt" + j;
                                        skubrandsOriginal1.set(j, opt);
                                }
                        if(selb==true) { count=count+1; reCod=j;}                   
                    }
                }

        if(i==10) { if (sel==false){opt = "#shopt134"; skubrandsOriginal1.set(134, opt);}   else { count=count+1; reCod=134;}    } 

        }


        qst = new question("choice", 2595);
        qst.setProperty("text", "Tra le <b>sigarette confezionate tradizionali</b> che ha dichiarato di aver utilizzato <b>NEGLI ULTIMI 30 GIORNI</b>, quale è la sua abituale, ossia quella che attualmente utilizza più di qualunque altra?");
        qst.setProperty("code", "q1mop");
        qst.setProperty("options", skubrandsOriginal1);
        if(count==1)
        {
            qst.setProperty("default_answer","{ 'selection': ["+reCod+"]}");
            qst.setProperty("hidden", true);
        }
        send qst;

        countQ1mop=count;
        reCodQ1mop=reCod;

        ansId=system.getProperty("ans2595");
        cmd=skubrandsOriginal.get(ansId);
        system.out("<div>countQ1mop: "+countQ1mop+"</div>"); 
        system.out("<div>q1mop: "+cmd+"</div>"); 

                

    } // FINE CONTROLLO  30  GIORNI//


} // FINE CONTROLLO  3 MESI// 


selCod="<script>$(window).load(function() {autoSelectOption(["+s12Cod+"]);});</script>";

qst = new question("choice", 260);
qst.setProperty("text", "Tra quelle riportate in elenco, quali marche di stick (con o senza tabacco) scaldati da dispositivi alimentati a batteria <b>conosce, anche solo per averne sentito parlare</b>? Selezioni tutte quelle che conosce.  "+allinea+selCod);
qst.setProperty("selection", "multiple");
qst.setProperty("show_rand", true);
qst.setProperty("code", "q2");
vector q260_opts = new vector {
    "LUCKY STRIKE Designed for Glo <img class='img-responsive logos' src='https://www.primisoft.com/fields/IPS/R2501014/resources/br1.jpg'/>",
    "NEO <img class='img-responsive logos' src='https://www.primisoft.com/fields/IPS/R2501014/resources/br2.jpg'/>",
    "VEO <img class='img-responsive logos' src='https://www.primisoft.com/fields/IPS/R2501014/resources/br3.jpg'/>",
    "FiiT <img class='img-responsive logos' src='https://www.primisoft.com/fields/IPS/R2501014/resources/br4.jpg'/>",
    "HEETS <img class='img-responsive logos' src='https://www.primisoft.com/fields/IPS/R2501014/resources/br5.jpg'/>",
    "TEREA <img class='img-responsive logos' src='https://www.primisoft.com/fields/IPS/R2501014/resources/br6.jpg'/>",
    "LEVIA <img class='img-responsive logos' src='https://www.primisoft.com/fields/IPS/R2501014/resources/br7.jpg'/>",
    "DELIA <img class='img-responsive logos' src='https://www.primisoft.com/fields/IPS/R2501014/resources/br8.jpg'/>",
    "CAMEL for Ploom <img class='img-responsive logos' src='https://www.primisoft.com/fields/IPS/R2501014/resources/br9.jpg'/>",
    "iD <img class='img-responsive logos' src='https://www.primisoft.com/fields/IPS/R2501014/resources/br10.jpg'/>",
    "iSENZIA <img class='img-responsive logos' src='https://www.primisoft.com/fields/IPS/R2501014/resources/br11.jpg'/>",
    "#shAltra marca old",
    "Altra marca (specificare)#so#sf"
};
sel = system.getProperty("ans210_11");
if(sel==true)
{
    comp = system.getProperty("ans210_11_comp");
    opt="#sf"+comp;
    q260_opts.set(11,opt);
}
qst.setProperty("options", q260_opts);
send qst;

// Inizializzazione del contatore
count = 0;

// Duplicazione del vettore delle opzioni per lavorare su una copia
vector q260_opts_b = new vector {
    "LUCKY STRIKE Designed for Glo <img class='img-responsive logos' src='https://www.primisoft.com/fields/IPS/R2501014/resources/br1.jpg'/>",
    "NEO <img class='img-responsive logos' src='https://www.primisoft.com/fields/IPS/R2501014/resources/br2.jpg'/>",
    "VEO <img class='img-responsive logos' src='https://www.primisoft.com/fields/IPS/R2501014/resources/br3.jpg'/>",
    "FiiT <img class='img-responsive logos' src='https://www.primisoft.com/fields/IPS/R2501014/resources/br4.jpg'/>",
    "HEETS <img class='img-responsive logos' src='https://www.primisoft.com/fields/IPS/R2501014/resources/br5.jpg'/>",
    "TEREA <img class='img-responsive logos' src='https://www.primisoft.com/fields/IPS/R2501014/resources/br6.jpg'/>",
    "LEVIA <img class='img-responsive logos' src='https://www.primisoft.com/fields/IPS/R2501014/resources/br7.jpg'/>",
    "DELIA <img class='img-responsive logos' src='https://www.primisoft.com/fields/IPS/R2501014/resources/br8.jpg'/>",
    "CAMEL for Ploom <img class='img-responsive logos' src='https://www.primisoft.com/fields/IPS/R2501014/resources/br9.jpg'/>",
    "iD <img class='img-responsive logos' src='https://www.primisoft.com/fields/IPS/R2501014/resources/br10.jpg'/>",
    "iSENZIA <img class='img-responsive logos' src='https://www.primisoft.com/fields/IPS/R2501014/resources/br11.jpg'/>",
    "#shAltra marca old",
    "Altra marca (specificare)#so#sf"
};


opt=q260_opts.get(11);
q260_opts_b.set(11,opt);

// Iterazione sugli item della domanda
for (int i = 0, 12) {
    sel = system.getProperty("ans260_" + i); // Controlla se l'opzione è stata selezionata
    
    if (sel == false) {
        // Nascondi l'opzione se non è selezionata
        opt = "#shopt" + i;
        q260_opts_b.set(i, opt);
    }
    if (sel == true) {
        // Incrementa il contatore per le opzioni selezionate
        count = count + 1;
        reCod=i;

        // Gestione dell'opzione con #so#sf
        if (i == 12) { // Opzione specifica "Altra marca"
            comp = system.getProperty("ans260_12_comp");
            opt = "#sf" + comp;
            q260_opts_b.set(i, opt);
        }
    }
}

qst = new question("choice", 265);
qst.setProperty("text", "Tra quelle riportate in elenco, quali marche di <b>stick (con o senza tabacco) scaldati da dispositivi alimentati a batteria</b> utilizza / ha utilizzato almeno una volta, anche se solo in passato – anche solo per provarla? <p>Selezioni tutte le marche che ha utilizzato almeno una volta, anche se solo in passato. </p>"+selCod);
qst.setProperty("code", "q3");
qst.setProperty("selection", "multiple");
qst.setProperty("show_rand", true);
qst.setProperty("options", q260_opts_b);
if(count==1)
{
    qst.setProperty("default_answer","{ 'selection': ["+reCod+"]}");
    qst.setProperty("hidden", true);
}
send qst;

count=0;
for(int i=0,12)
{
sel=system.getProperty("ans265_"+i);
if (sel==false)  {  opt ="#shopt"+i; q260_opts_b.set(i,opt); }
else { count=count+1; reCod=i; cmd=q260_opts_b.get(i); system.out("<div>q3_ANS: "+cmd+"</div>");}
}

qst = new question("choice", 267);
qst.setProperty("text", "Tra le marche di <b>stick (con o senza tabacco) scaldati da dispositivi alimentati a batteria</b> che ha dichiarato di aver utilizzato almeno una volta in passato, quali ha <b>ACQUISTATO</b> e <b>UTILIZZATO NEGLI ULTIMI 3 MESI</b>? <p>Selezioni tutte le marche che ha utilizzato almeno una volta <b>NEGLI ULTIMI 3 MESI</b>.</p> "+selCod);
qst.setProperty("code", "q4bis");
qst.setProperty("selection", "multiple");
qst.setProperty("show_rand", true);
qst.setProperty("options", q260_opts_b);
if(count==1)
{
    qst.setProperty("default_answer","{ 'selection': ["+reCod+"]}");
    qst.setProperty("hidden", true);
}
send qst;

//DEBUG CONTROLS
for(int i=0,12)
{
cmd=q260_opts_b.get(i);
sel=system.getProperty("ans267_"+i);
if (sel==true) {system.out("<div>q4bis_ANS: "+cmd+"</div>"); }
}

sel=system.getProperty("ans210_0");
selb=system.getProperty("ans267_0");
if(sel==true || selb==true) {selq4_1=true;}

sel=system.getProperty("ans210_1");
selb=system.getProperty("ans267_1");
if(sel==true || selb==true) {selq4_2=true;}

sel=system.getProperty("ans210_2");
selb=system.getProperty("ans267_2");
if(sel==true || selb==true) {selq4_3=true;}

sel=system.getProperty("ans210_3");
selb=system.getProperty("ans267_3");
if(sel==true || selb==true) {selq4_4=true;}

sel=system.getProperty("ans210_4");
selb=system.getProperty("ans267_4");
if(sel==true || selb==true) {selq4_5=true;}

sel=system.getProperty("ans210_5");
selb=system.getProperty("ans267_5");
if(sel==true || selb==true) {selq4_6=true;}

sel=system.getProperty("ans210_6");
selb=system.getProperty("ans267_6");
if(sel==true || selb==true) {selq4_7=true;}

sel=system.getProperty("ans210_7");
selb=system.getProperty("ans267_7");
if(sel==true || selb==true) {selq4_8=true;}

sel=system.getProperty("ans210_8");
selb=system.getProperty("ans267_8");
if(sel==true || selb==true) {selq4_9=true;}

sel=system.getProperty("ans210_9");
selb=system.getProperty("ans267_9");
if(sel==true || selb==true) {selq4_10=true;}

sel=system.getProperty("ans210_10");
selb=system.getProperty("ans267_10");
if(sel==true || selb==true) {selq4_11=true;}

if(selq4_1==true)
    {

        vector q270_rows = new vector {"ULTIMI 30 GIORNI", "ULTIMI 3 MESI"};

        sel=system.getProperty("ans210_0");
        if(sel==false) { q270_rows.set(0,"#shULTIMI 30 GIORNI"); }

        qst = new question("scale", 270);
        qst.setProperty("text", "Lei ha dichiarato di aver utilizzato stick scaldati a marca <b>LUCKY STRIKE Designed for Glo</b>. <p>Quale/i stick scaldato/i della marca <b>LUCKY STRIKE Designed for Glo ha utilizzato negli ultimi 30 giorni e/o negli ultimi 3 mesi?</b> </p>  "+sync);
        qst.setProperty("code", "q4a");
        qst.setProperty("selection", "multiple");
        qst.setProperty("show_rand", true);
        vector q270_opts = new vector {
            "Lucky Strike Balanced Tobacco",
            "Lucky Strike Golden Tobacco",
            "Lucky Strike Rich Tobacco",
            "Lucky Strike Twist",
            "Lucky Strike Ruby"
        };
        qst.setProperty("cols", q270_opts);
        qst.setProperty("rows", q270_rows);
        qst.setProperty("view", "columns");
        send qst;
    }

if(selq4_2==true)
{
        vector q272_rows = new vector {"ULTIMI 30 GIORNI", "ULTIMI 3 MESI"};

        sel=system.getProperty("ans210_1");
        if(sel==false) { q272_rows.set(0,"#shULTIMI 30 GIORNI"); }

    qst = new question("scale", 272);
    qst.setProperty("text", "Lei ha dichiarato di utilizzare stick scaldati a marca <b>NEO NEGLI ULTIMI 30 GIORNI</b>. <p>Quale/i stick scaldato/i della marca <b>NEO</b> ha utilizzato?</p> "+sync);
    qst.setProperty("code", "q4b");
    qst.setProperty("selection", "multiple");
    qst.setProperty("show_rand", true);
    vector q272_opts = new vector {
"Neo Classic Tobacco",
"Neo Golden Tobacco",
"Neo Rich Tobacco",
"Neo Smooth Tobacco",
"Neo Terracotta Tobacco",
"Neo Arctic ",
"Neo Beryl",
"Neo Scarlet "
    };
        qst.setProperty("cols", q272_opts);
        qst.setProperty("rows", q272_rows);
        qst.setProperty("view", "columns");
    send qst;

        // //DEBUG CONTROLS
        // for(int i=0,7)
        // {
        // sel=system.getProperty("ans272_"+i);
        // cmd=q272_opts.get(i);
        // if (sel==true) {system.out("<div>q4b_ANS: "+cmd+"</div>"); }
        // }

}

if(selq4_3==true)
{
        vector q273_rows = new vector {"ULTIMI 30 GIORNI", "ULTIMI 3 MESI"};

        sel=system.getProperty("ans210_2");
        if(sel==false) { q273_rows.set(0,"#shULTIMI 30 GIORNI"); }
    
    qst = new question("scale", 273);
    qst.setProperty("text", "Lei ha dichiarato di utilizzare stick scaldati a marca <b>VEO NEGLI ULTIMI 30 GIORNI</b>.<p> Quale/i stick scaldato/i della marca <b>VEO</b> ha utilizzato?</p>  "+sync);
    qst.setProperty("code", "q4c");
    qst.setProperty("selection", "multiple");
    qst.setProperty("show_rand", true);
    vector q273_opts = new vector {
"VEO ARCTIC CLICK",
"VEO BERYL CLICK",
"VEO SCARLET CLICK",
"VEO PURPLE CLICK",
"VEO TROPIC CLICK",
"VEO AMBER CLICK"
    };
        qst.setProperty("cols", q273_opts);
        qst.setProperty("rows", q273_rows);
        qst.setProperty("view", "columns");
    send qst;
}

if(selq4_4==true)
{
        vector q274_rows = new vector {"ULTIMI 30 GIORNI", "ULTIMI 3 MESI"};

        sel=system.getProperty("ans210_3");
        if(sel==false) { q274_rows.set(0,"#shULTIMI 30 GIORNI"); }

    qst = new question("scale", 274);
    qst.setProperty("text", "Lei ha dichiarato di utilizzare stick scaldati a marca <b>FiiT NEGLI ULTIMI 30 GIORNI</b>. <p>Quale/i stick scaldato/i della marca <b>FiiT</b> ha utilizzato? </p> "+sync);
    qst.setProperty("code", "q4d");
    qst.setProperty("selection", "multiple");
    qst.setProperty("show_rand", true);
    vector q274_opts = new vector {
"FIIT Regular",
"FIIT Sienna Regular Deep",
"FIIT Silver Regular Sky",
"FIIT Element Stream"
    };
        qst.setProperty("cols", q274_opts);
        qst.setProperty("rows", q274_rows);
        qst.setProperty("view", "columns");
    send qst;
}


if(selq4_5==true)
{
        vector q275_rows = new vector {"ULTIMI 30 GIORNI", "ULTIMI 3 MESI"};

        sel=system.getProperty("ans210_4");
        if(sel==false) { q275_rows.set(0,"#shULTIMI 30 GIORNI"); }

    qst = new question("scale", 275);
    qst.setProperty("text", "Lei ha dichiarato di utilizzare stick scaldati a marca <b>HEETS NEGLI ULTIMI 30 GIORNI</b>. <p>Quale/i stick scaldato/i della marca <b>HEETS</b> ha utilizzato?  </p> "+sync);
    qst.setProperty("code", "q4e");
    qst.setProperty("selection", "multiple");
    qst.setProperty("show_rand", true);
    vector q275_opts = new vector {
"Heets Iqos Amber",
"Heets Iqos Bronze",
"Heets Iqos Sienna",
"Heets Iqos Teak",
"Heets Iqos Yellow",
"Heets Russet Selection",
"Heets Silver",
"Heets Cloud Fuse"
    };
        qst.setProperty("cols", q275_opts);
        qst.setProperty("rows", q275_rows);
        qst.setProperty("view", "columns");
    send qst;
}


if(selq4_6==true)
{
        vector q276_rows = new vector {"ULTIMI 30 GIORNI", "ULTIMI 3 MESI"};

        sel=system.getProperty("ans210_5");
        if(sel==false) { q276_rows.set(0,"#shULTIMI 30 GIORNI"); }

    qst = new question("scale", 276);
    qst.setProperty("text", "Lei ha dichiarato di utilizzare stick scaldati a marca <b>TEREA NEGLI ULTIMI 30 GIORNI</b>. <p>Quale/i stick scaldato/i della marca <b>TEREA</b> ha utilizzato? </p>  "+sync);
    qst.setProperty("code", "q4f");
    qst.setProperty("selection", "multiple");
    qst.setProperty("show_rand", true);
    vector q276_opts = new vector {
"Terea Amber",
"Terea Bronze",
"Terea Russet",
"Terea Sienna",
"Terea Silver",
"Terea Teak",
"Terea Yellow",
"Terea Turquoise",
"Terea Warm Fuse",
"Terea Bright Fuse",
"Terea Cloud Fuse"
    };
    qst.setProperty("cols", q276_opts);
    qst.setProperty("rows", q276_rows);
    qst.setProperty("view", "columns");
    send qst;

        // //DEBUG CONTROLS
        // for(int i=0,10)
        // {
        // sel=system.getProperty("ans276_"+i);
        // cmd=q276_opts.get(i);
        // if (sel==true) {system.out("<div>q4f_ANS: "+cmd+"</div>"); }
        // }
}


if(selq4_7==true)
{
    vector q277_rows = new vector {"ULTIMI 30 GIORNI", "ULTIMI 3 MESI"};
    sel=system.getProperty("ans210_6");
    if(sel==false) { q277_rows.set(0,"#shULTIMI 30 GIORNI"); }

    qst = new question("scale", 277);
    qst.setProperty("text", "Lei ha dichiarato di utilizzare stick scaldati a marca <b>LEVIA NEGLI ULTIMI 30 GIORNI</b>. <p>Quale/i stick scaldato/i della marca <b>LEVIA</b> ha utilizzato? </p> "+sync);
    qst.setProperty("code", "q4g");
    qst.setProperty("selection", "multiple");
    qst.setProperty("show_rand", true);
    vector q277_opts = new vector {
"Levia Electro Purple",
"Levia Island Beat",
"Levia Glacial Beat",
"Levia Bright Sonata",
"Levia Ruby Waltz"
    };
    qst.setProperty("cols", q277_opts);
    qst.setProperty("rows", q277_rows);
    qst.setProperty("view", "columns");
    send qst;
}

if(selq4_8==true)
{
        vector q278_rows = new vector {"ULTIMI 30 GIORNI", "ULTIMI 3 MESI"};

        sel=system.getProperty("ans210_7");
        if(sel==false) { q278_rows.set(0,"#shULTIMI 30 GIORNI"); }

    qst = new question("scale", 278);
    qst.setProperty("text", "Lei ha dichiarato di utilizzare stick scaldati a marca <b>DELIA NEGLI ULTIMI 30 GIORNI.</b> <p>Quale/i stick scaldato/i della marca <b>DELIA</b> ha utilizzato?</p>  "+sync);
    qst.setProperty("code", "q4h");
    qst.setProperty("show_rand", true);
    qst.setProperty("selection", "multiple");
    vector q278_opts = new vector {
"Delia Classic Red",
"Delia Classic Gold",
"Delia Silver",
"Delia Green"
    };
    qst.setProperty("cols", q278_opts);
    qst.setProperty("rows", q278_rows);
    qst.setProperty("view", "columns");
    send qst;
}


if(selq4_9==true)
{
        vector q279_rows = new vector {"ULTIMI 30 GIORNI", "ULTIMI 3 MESI"};

        sel=system.getProperty("ans210_8");
        if(sel==false) { q279_rows.set(0,"#shULTIMI 30 GIORNI"); }

    qst = new question("scale", 279);
    qst.setProperty("text", "Lei ha dichiarato di utilizzare stick scaldati a marca <b>CAMEL NEGLI ULTIMI 30 GIORNI.</b> <p>Quale/i stick scaldato/i della marca <b>CAMEL</b> ha utilizzato?  </p> "+sync);
    qst.setProperty("code", "q4i");
    qst.setProperty("show_rand", true);
    qst.setProperty("selection", "multiple");
    vector q279_opts = new vector {
"Camel Bronze",
"Camel Burgundy Tobacco",
"Camel Gold",
"Camel Silver Tobacco",
"Camel Tan Tobacco",
"Camel  Yellow",
"Camel  Garnet",
"Camel Teal"
    };
    qst.setProperty("cols", q279_opts);
    qst.setProperty("rows", q279_rows);
    qst.setProperty("view", "columns");
    send qst;
}

if(selq4_10==true)
{
        vector q2710_rows = new vector {"ULTIMI 30 GIORNI", "ULTIMI 3 MESI"};

        sel=system.getProperty("ans210_9");
        if(sel==false) { q2710_rows.set(0,"#shULTIMI 30 GIORNI"); }

    qst = new question("scale", 2710);
    qst.setProperty("text", "Lei ha dichiarato di utilizzare stick scaldati a marca <b>iD NEGLI ULTIMI 30 GIORNI</b>. <p>Quale/i stick scaldato/i della marca <b>iD</b> ha utilizzato?</p>  "+sync);
    qst.setProperty("code", "q4j");
    qst.setProperty("show_rand", true);
    qst.setProperty("selection", "multiple");
    vector q2710_opts = new vector {
"iD Balanced Blue",
"iD Bright Yellow",
"iD Rich Bronze",
"iD Velvet Copper",
"iD Warm Amber",
"iD Bold Magenta",
"iD Flora Pink",
"iD Polar Green"
    };
    qst.setProperty("cols", q2710_opts);
    qst.setProperty("rows", q2710_rows);
    qst.setProperty("view", "columns");
    send qst;
}

if(selq4_11==true)
{
        vector q2711_rows = new vector {"ULTIMI 30 GIORNI", "ULTIMI 3 MESI"};

        sel=system.getProperty("ans210_10");
        if(sel==false) { q2711_rows.set(0,"#shULTIMI 30 GIORNI"); }

    qst = new question("scale", 2711);
    qst.setProperty("text", "Lei ha dichiarato di utilizzare stick scaldati a marca <b>iSENZIA NEGLI ULTIMI 30 GIORNI</b>. <p>Quale/i stick scaldato/i della marca <b>iSENZIA</b> ha utilizzato?  </p> "+sync);
    qst.setProperty("code", "q4k");
    qst.setProperty("show_rand", true);
    qst.setProperty("selection", "multiple");
    vector q2711_opts = new vector {
"ISENZIA - ICE BLUE CRUSH",
"ISENZIA - FORREST PURPLE CRUSH",
"ISENZIA - SUNSET CORAL CRUSH",
"ISENZIA - SUMMER RED CRUSH"
    };
    qst.setProperty("cols", q2711_opts);
    qst.setProperty("rows", q2711_rows);
    qst.setProperty("view", "columns");
    send qst;
}

// Q6 NON INSERITA DA PRENDERE DA S14

vector deviceUsed = new vector {
"Glo Hyper X2 Air <img class='img-responsive logos' src='https://www.primisoft.com/fields/IPS/R2501014/resources/d1.png'/>",
"Glo Hyper Pro<img class='img-responsive logos' src='https://www.primisoft.com/fields/IPS/R2501014/resources/d2.png'/>",
"Glo Hyper (senza schermo)<img class='img-responsive logos' src='https://www.primisoft.com/fields/IPS/R2501014/resources/d3.png'/>",
"Altri modelli della marca Glo",
"IQOS 3 DUO<img class='img-responsive logos' src='https://www.primisoft.com/fields/IPS/R2501014/resources/d4.png'/>",
"IQOS Iluma<img class='img-responsive logos' src='https://www.primisoft.com/fields/IPS/R2501014/resources/d5.png'/>",
"IQOS Iluma Prime<img class='img-responsive logos' src='https://www.primisoft.com/fields/IPS/R2501014/resources/d6.png'/>",
"IQOS Iluma I Prime<img class='img-responsive logos' src='https://www.primisoft.com/fields/IPS/R2501014/resources/d7.png'/>",
"IQOS Iluma One<img class='img-responsive logos' src='https://www.primisoft.com/fields/IPS/R2501014/resources/d8.png'/>",
"Altri modelli della marca IQOS",
"Lil Solid Ez<img class='img-responsive logos' src='https://www.primisoft.com/fields/IPS/R2501014/resources/d9.png'/>",
"Altri modelli della marca Lil",
"Pulze 2.0<img class='img-responsive logos' src='https://www.primisoft.com/fields/IPS/R2501014/resources/d10.png'/>",
"Altri modelli della marca Pulze",
"Ploom X<img class='img-responsive logos' src='https://www.primisoft.com/fields/IPS/R2501014/resources/d11.png'/>",
"Altri modelli della marca Ploom"
};

vector deviceUsedOriginal = new vector {
"Glo Hyper X2 Air <img class='img-responsive logos' src='https://www.primisoft.com/fields/IPS/R2501014/resources/d1.png'/>",
"Glo Hyper Pro<img class='img-responsive logos' src='https://www.primisoft.com/fields/IPS/R2501014/resources/d2.png'/>",
"Glo Hyper (senza schermo)<img class='img-responsive logos' src='https://www.primisoft.com/fields/IPS/R2501014/resources/d3.png'/>",
"Altri modelli della marca Glo",
"IQOS 3 DUO<img class='img-responsive logos' src='https://www.primisoft.com/fields/IPS/R2501014/resources/d4.png'/>",
"IQOS Iluma<img class='img-responsive logos' src='https://www.primisoft.com/fields/IPS/R2501014/resources/d5.png'/>",
"IQOS Iluma Prime<img class='img-responsive logos' src='https://www.primisoft.com/fields/IPS/R2501014/resources/d6.png'/>",
"IQOS Iluma I Prime<img class='img-responsive logos' src='https://www.primisoft.com/fields/IPS/R2501014/resources/d7.png'/>",
"IQOS Iluma One<img class='img-responsive logos' src='https://www.primisoft.com/fields/IPS/R2501014/resources/d8.png'/>",
"Altri modelli della marca IQOS",
"Lil Solid Ez<img class='img-responsive logos' src='https://www.primisoft.com/fields/IPS/R2501014/resources/d9.png'/>",
"Altri modelli della marca Lil",
"Pulze 2.0<img class='img-responsive logos' src='https://www.primisoft.com/fields/IPS/R2501014/resources/d10.png'/>",
"Altri modelli della marca Pulze",
"Ploom X<img class='img-responsive logos' src='https://www.primisoft.com/fields/IPS/R2501014/resources/d11.png'/>",
"Altri modelli della marca Ploom"
};


if (ss1=="mobile")
{
 allinea="";
}
else {
    allinea="<script>$(window).load(function() {alignComposedOptions();});</script>";
}


qst = new question("concept", 290);
qst.setProperty("text", "Potrebbe indicarci <b>quale marca di dispositivo alimentato a batteria</b> utilizza per il consumo degli stick scaldati che ha dichiarato di utilizzare? "+allinea);


//blocco 1-4

for (int i = 0, 15) { 
    cmd=deviceUsedOriginal.get(i);
    deviceUsed.set(i, cmd);
    if (i>=4) {
        opt = "#shopt" + i;
        deviceUsed.set(i, opt);
    }
}

qst = new question("choice", 292);
qst.setProperty("text", "");
qst.setProperty("code", "Q7a");
qst.setProperty("selection", "multiple");
qst.setProperty("options", deviceUsed);

//blocco 6-10
for (int i = 0, 15) { 
    cmd=deviceUsedOriginal.get(i);
    deviceUsed.set(i, cmd);
    if (i <= 4 || i >= 10) {
        opt = "#shopt" + i;
        deviceUsed.set(i, opt);
    }
}

qst = new question("choice", 293);
qst.setProperty("text", " ");
qst.setProperty("code", "Q7b");
qst.setProperty("selection", "multiple");
qst.setProperty("options", deviceUsed);


//blocco 5+ 11-14
for (int i = 0, 15) { 
    cmd=deviceUsedOriginal.get(i);
    deviceUsed.set(i, cmd);
    if ( (i!=4  && i <= 9) || i >= 14) {
        opt = "#shopt" + i;
        deviceUsed.set(i, opt);
    }
}

qst = new question("choice", 295);
qst.setProperty("text", "");
qst.setProperty("code", "Q7c");
qst.setProperty("selection", "multiple");
qst.setProperty("options", deviceUsed);


for (int i = 0, 15) { 
    cmd=deviceUsedOriginal.get(i);
    deviceUsed.set(i, cmd);
    if (i <= 13) {
        opt = "#shopt" + i;
        deviceUsed.set(i, opt);
    }
}

qst = new question("choice", 296);
qst.setProperty("text", "");
qst.setProperty("code", "Q7d");
qst.setProperty("selection", "multiple");
qst.setProperty("options", deviceUsed);

vector q299_comps = new vector {"290"};

//conteggio da s13 allocation

//blocco 1
countGlo=0;
for(int i=0,2)
{
sel=system.getProperty("ans225_"+i);
if (sel==true) { countGlo=countGlo+1; }
}

if (countGlo>0) { q299_comps.add("292");}

//blocco2
countIq=0;
for(int i=5,7)
{
sel=system.getProperty("ans225_"+i);
if (sel==true) { countIq=countIq+1; }
}

if (countIq>0) { q299_comps.add("293");}


countOm=0;
for(int i=3,10)
{
sel=system.getProperty("ans225_"+i);
if (sel==true && (i==3 || i==4 || i==9 || i==10)) { countOm=countOm+1; }
}

if (countOm>0) { q299_comps.add("295");}

countPlo=0;
sel=system.getProperty("ans225_8");
if (sel==true) { countPlo=countPlo+1; }
if (countPlo>0) { q299_comps.add("296");}



qst = new question("composed", 299);
qst.setProperty("components", q299_comps);
send qst;



count=0;
for(int i=0,15)
{
    if (countGlo>0) 
    {
    sel=system.getProperty("ans292_"+i);
    if (sel==true) { countDevice=countDevice+1; }
    }
    if (countIq>0) 
    {
    sel=system.getProperty("ans293_"+i);
    if (sel==true) { countDevice=countDevice+1; }
    }
    if (countOm>0) 
    {
    sel=system.getProperty("ans295_"+i);
    if (sel==true) { countDevice=countDevice+1; }
    }
    if (countPlo>0) 
    {
    sel=system.getProperty("ans296_"+i);
    if (sel==true) { countDevice=countDevice+1; }
    }
}


//********* * /  SWITCH IN / OUT SECTION  //  **********

//conteggio selezioni s10
blocS10Count=0;
for(int i=0,6)
{
     sel = system.getProperty("ans100_" + i);
     if(sel==true) { blocS10Count=blocS10Count+1; }
}

//conteggio selezioni q3
blocQ3Count=0;
for(int i=0,11)
{
     sel = system.getProperty("ans265_" + i);
     if(sel==true) { blocQ3Count=blocQ3Count+1; selCodeQ3=i; }
}

//conteggio selezioni s13
blocQ5Count=0;
for(int i=0,10)
{
ansId=system.getProperty("ans220_"+i);
if (ansId==0 || ansId==1) 
    { 
    blocQ5Count=blocQ5Count+1; 
    }
}


vector indici = new vector {
    "#sha",
    "#shb",
    "#shc",
    "#shd",
    "#she",
    "#shf",
    "#shg",
    "#shh",
    "#shi",
    "#shj",
    "#shk"
};


vector elementPrio = new vector {
"LUCKY STRIKE Designed for Glo",
"NEO",
"VEO",
"FiiT",
"HEETS",
"TEREA",
"LEVIA",
"DELIA",
"CAMEL",
"iD",
"iSENZIA"
};

vector indiciPrio = new vector {"0", "1", "2", "3", "4" , "5", "6", "7", "8","9","10" };

int rm;
count=0;
opt="";


Nran=11;
for (int i=0,10)
{ 
    system.setProperty("rm"+i, "rand:"+Nran);
    rm = (int)system.getProperty("rm"+i); 
    opt=indiciPrio.get(rm);

    indici.set(i,opt);
            
// salvo nel sistema una variabile che contiene l'item pescato.
 system.setProperty("Svar"+i, opt);
        
indiciPrio.remove(rm);
Nran=Nran-1;
}


baseQid=10000;

for(int i=0,10)
{

r1=(int)indici.get(i);

qid=baseQid+100*r1;
valid=false;
nam=elementPrio.get(r1);

if(r1==0 && selQ5_1==true) {valid=true;}
if(r1==1 && selQ5_2==true) {valid=true;}
if(r1==2 && selQ5_3==true) {valid=true;}
if(r1==3 && selQ5_4==true) {valid=true;}
if(r1==4 && selQ5_5==true) {valid=true;}
if(r1==5 && selQ5_6==true) {valid=true;}
if(r1==6 && selQ5_7==true) {valid=true;}
if(r1==7 && selQ5_8==true) {valid=true;}
if(r1==8 && selQ5_9==true) {valid=true;}
if(r1==9 && selQ5_10==true) {valid=true;}
if(r1==10 && selQ5_11==true) {valid=true;}


if(valid==true)
    {

        qst = new question("choice", qid);
        qst.setProperty("text", "Lei ha dichiarato di utilizzare stick scaldati a marca <b>"+nam+".</b> <p>Da quando ha iniziato ad utilizzarli?</p> ");
        qst.setProperty("code", "q8abl"+r1);
        vector q8a_opts = new vector {
    "Ho iniziato ad utilizzarli DA 1 MESE ",
    "Ho iniziato ad utilizzarli DA 2 MESI",
    "Ho iniziato ad utilizzarli DA 3 MESI ",
    "Ho iniziato ad utilizzarli DA 4 MESI ",
    "Ho iniziato ad utilizzarli DA 5 MESI ",
    "Ho iniziato ad utilizzarli DA 6 MESI o più "
        };
        qst.setProperty("options", q8a_opts);
        send qst;

        vector Q8B_opts = new vector {
            "Ho iniziato ad utilizzarli <b>AGGIUNGENDOLI</b> al consumo di un altro prodotto (<b>NON HO SOSTITUITO O RIDOTTO</b> il consumo degli altri prodotti)",
            "Ho iniziato ad utilizzarli <b>RIDUCENDO</b> il consumo di un altro prodotto",
            "Ho iniziato ad utilizzarli <b>SOSTITUENDOLI TOTALMENTE</b> al consumo di un altro prodotto",
            "Non utilizzavo nessun altro prodotto contenente nicotina. Ho iniziato ad utilizzare prodotti contenti nicotina con X"
            };
            
            labelCheck="Non utilizzavo nessun altro prodotto contenente nicotina. Ho iniziato ad utilizzare prodotti contenti nicotina con "+nam;
            Q8B_opts.set(3,labelCheck);

            ansQ8a=system.getProperty("ans"+qid);

            cmd=q8a_opts.get(ansQ8a);
            system.out("<div>q8abl"+r1+": "+cmd+"</div>"); 

            
            countRiduci=0;
            countSostituisci=0;

            //q8=1mese
            if(ansQ8a==0)
            {
                // *****  CONTROLLO PER ITEM 1-2 *****  //

                    //controllo Q4
                    for(int j=0,11)
                        {
                            sel=system.getProperty("ans210_"+j);
                            if(j != r1) 
                                {
                                    if(sel==true) { countRiduci=countRiduci+1;}
                                }
                        }
                        
                //controllo per s10
                for(int j=0,6)
                {
                    sel=system.getProperty("ans100_"+j);
                    if(j != 2) 
                        {
                            if(sel==true) { countRiduci=countRiduci+1; }
                        }
                }

                // *****  CONTROLLO PER ITEM 3 *****  //
            
                //controllo per q5/s13
                for(int j=0,11)
                {
                    ansId=system.getProperty("ans220_"+j);
                    if(j != r1) 
                        {
                            ansId=system.getProperty("ans220_"+j);
                            if (ansId==2) {countSostituisci=countSostituisci+1; }
                        }
                }

                //controllo per s10 
                for(int j=0,6)
                {
                    sel=system.getProperty("ans100_"+j);
                    if(j != 2) 
                        {
                            if(sel==true) { 
                                            //verifico le domanda Q0
                                            if(j==0) 
                                            { 
                                                ansId=system.getProperty("ans130");
                                                if(ansId!=0) { countSostituisci=countSostituisci+1;}
                                            }
                                        if(j==1) 
                                            { 
                                                ansId=system.getProperty("ans135");
                                                if(ansId!=0) { countSostituisci=countSostituisci+1;}
                                            }
                                        if(j==3 || j==4 || j==5) 
                                            { 
                                                ansId=system.getProperty("ans115");
                                                if(ansId!=0) { countSostituisci=countSostituisci+1;}
                                            }
                                        if(j==6) 
                                            { 
                                                ansId=system.getProperty("ans137");
                                                if(ansId!=0) { countSostituisci=countSostituisci+1;}
                                            }
                                        }
                                        
                            }
                }
                
            }

            //q8=2-3 mesi
            if(ansQ8a==1 || ansQ8a==2)
            {
                // *****  CONTROLLO PER ITEM 1-2 *****  //

                    //controllo Q4bis
                    for(int j=0,11)
                        {
                            sel=system.getProperty("ans267_"+j);
                            if(j != r1) 
                                {
                                    if(sel==true) { countRiduci=countRiduci+1;}
                                }
                        }
                        
                //controllo per s10.1
                for(int j=0,6)
                {
                    sel=system.getProperty("ans93_"+j);
                    if(j != 2) 
                        {
                            if(sel==true) { countRiduci=countRiduci+1; }
                        }
                }

                // *****  CONTROLLO PER ITEM 3 *****  //
            
                //controllo se selezionata in  q4bis e se non selezionata in q4 
                for(int j=0,11)
                {
                sel=system.getProperty("ans267_"+j);
                selb=system.getProperty("ans210_"+j);
                
                if(j != r1) 
                    {
                        //se non selezionato in q4/s12
                        if(selb==false)
                        {
                            // se selezionato in q4bis
                            if(sel==true) { countSostituisci=countSostituisci+1;}
                        }

                        //se selezionato in Q4/s12
                        else 
                        {
                            //leggiamo s13 - q5
                            ansId=system.getProperty("ans220_"+i);
                            if (ansId==2) { countSostituisci=countSostituisci+1; }
                        }
                    }
                }

                ////controllo se selezionata in  s10.1 e se non selezionata in s10 
                for(int j=0,6)
                {
                    sel=system.getProperty("ans93_"+j);
                    selb=system.getProperty("ans100_"+j);

                    if(j != 2) 
                    {

                        if(selb==false)
                        {
                            if(sel==true) { countSostituisci=countSostituisci+1;}
                        }

                        else 
                        {
                                            
                        //verifico le domanda Q0
                         if(j==0) 
                                { 
                                ansId=system.getProperty("ans130");
                                if(ansId!=0) { countSostituisci=countSostituisci+1;}
                                  }
                         if(j==1) 
                                { 
                                 ansId=system.getProperty("ans135");
                                 if(ansId!=0) { countSostituisci=countSostituisci+1;}
                                 }
                         if(j==3 || j==4 || j==5) 
                                { 
                                ansId=system.getProperty("ans115");
                                 if(ansId!=0) { countSostituisci=countSostituisci+1;}
                                }
                        if(j==6) 
                                 { 
                                  ansId=system.getProperty("ans137");
                                  if(ansId!=0) { countSostituisci=countSostituisci+1;}
                                }
                                        
                        }
                     }
                }
                
            }

            //q8=4 mesi o +
            if(ansQ8a>2)
            {
                // *****  CONTROLLO PER ITEM 1-2 *****  //

                    //controllo Q4bis
                    for(int j=0,11)
                        {
                            sel=system.getProperty("ans265_"+j);
                            if(j != r1) 
                                {
                                    if(sel==true) { countRiduci=countRiduci+1;}
                                }
                        }
                        
                //controllo per s10.0
                for(int j=0,6)
                {
                    sel=system.getProperty("ans92_"+j);
                    if(j != 2) 
                        {
                            if(sel==true) { countRiduci=countRiduci+1; }
                        }
                }

                // *****  CONTROLLO PER ITEM 3 *****  //
            
                //controllo se selezionata in  q3 e se non selezionata in q4 
                for(int j=0,11)
                {
                sel=system.getProperty("ans265_"+j);
                selb=system.getProperty("ans210_"+j);
                if(j != r1) 

                        //se non selezionato in q4/s12
                        if(selb==false)
                        {
                            // se selezionato in q3
                            if(sel==true) { countSostituisci=countSostituisci+1;}
                        }

                        //se selezionato in Q4/s12
                        else 
                        {
                            //leggiamo s13 - q5
                            ansId=system.getProperty("ans220_"+i);
                            if (ansId==2) { countSostituisci=countSostituisci+1; }
                        }
                }

                ////controllo se selezionata in  s10.1 e se non selezionata in s10 
                for(int j=0,6)
                {
                    sel=system.getProperty("ans92_"+j);
                    selb=system.getProperty("ans100_"+j);

                    if(j != 2) 
                    { 
                         if(selb==false)
                        {
                            if(sel==true) { countSostituisci=countSostituisci+1;}
                        }

                        else 
                        {
                                            
                        //verifico le domanda Q0
                         if(j==0) 
                                { 
                                ansId=system.getProperty("ans130");
                                if(ansId!=0) { countSostituisci=countSostituisci+1;}
                                  }
                         if(j==1) 
                                { 
                                 ansId=system.getProperty("ans135");
                                 if(ansId!=0) { countSostituisci=countSostituisci+1;}
                                 }
                         if(j==3 || j==4 || j==5) 
                                { 
                                ansId=system.getProperty("ans115");
                                 if(ansId!=0) { countSostituisci=countSostituisci+1;}
                                }
                        if(j==6) 
                                 { 
                                  ansId=system.getProperty("ans137");
                                  if(ansId!=0) { countSostituisci=countSostituisci+1;}
                                }
                                        
                        }
                    }
                }

                
            }


            system.out("<div>countRiduci bl"+r1+": "+countRiduci+"</div>"); 
            system.out("<div>countSostituiscibl"+r1+": "+countSostituisci+"</div>"); 
            system.out("<div>blocQ3Countbl"+r1+": "+blocQ3Count+"</div>"); 

            qid=baseQid+100*r1+10;
            qst = new question("choice", qid);
            qst.setProperty("text", "Ha iniziato ad utilizzare stick scaldati a marca <b>"+nam+" </b> <b>aggiungendoli</b> o <b>sostituendoli</b> al consumo di uno o più prodotti a base di nicotina? ");
            qst.setProperty("code", "Q8Bbl"+r1);
            if(countRiduci==0) { Q8B_opts.set(0,"#shopt0");  Q8B_opts.set(1,"#shopt1");}
            if(countSostituisci==0) { Q8B_opts.set(2,"#shopt2");}
            if(blocQ3Count==1 && selCodeQ3==r1)
                                {
                                qst.setProperty("default_answer","{ 'selection': [3]}");
                                qst.setProperty("hidden", true);
                                }
            qst.setProperty("options", Q8B_opts);
            send qst;

        
            ansQ8b=system.getProperty("ans"+qid);
            system.out("<div>q8B_bl"+r1+": "+ansQ8b+"</div>"); 
        
            // q8C //
        
            if(ansQ8b==1)
            {

                    vector brandRidotti = new vector {
                                "Stick scaldati a marca LUCKY STRIKE Designed by Glo",
                                "Stick scaldati a marca NEO",
                                "Stick scaldati a marca VEO",
                                "Stick scaldati a marca FiiT",
                                "Stick scaldati a marca HEETS",
                                "Stick scaldati a marca TEREA",
                                "Stick scaldati a marca LEVIA",
                                "Stick scaldati a marca DELIA",
                                "Stick scaldati a marca CAMEL for Ploom",
                                "Stick scaldati a marca iD",
                                "Stick scaldati a marca iSENZIA",
                                "Stick scaldati a marca *FILL IN WITH VERBATIM SELECTED AT Q4*",
                                "Prima utilizzavo sigarette confezionate tradizionali",
                                "Prima utilizzavo sigarette arrotolate (con tabacco trinciato)",
                                "Prima utilizzavo sigarette elettroniche ricaricabili con pod/cartucce preriempiti",
                                "Prima utilizzavo sigarette elettroniche ricaricabili con flaconcini di liquido",
                                "Prima utilizzavo sigarette elettroniche usa e getta",
                                "Prima utilizzavo sacchetti di nicotina"
                };

                //nasocndo item del blocco
                opt="#shopt"+r1;
                brandRidotti.set(r1,opt);

                //q8a=1mese
                if(ansQ8a==0)
                {

                        //nascondo item da s12
                        for(int j=0,11)
                        {
                        sel=system.getProperty("ans210_"+j);
                        if (sel==false)  {  opt ="#shopt"+j; brandRidotti.set(j,opt); }
                        else { if(j==11) { comp=system.getProperty("ans210_11_comp");  brandRidotti.set(j,comp);} }
                        }

                        //nascondo item da s10
                        for(int j=0,6)
                        {
                        sel=system.getProperty("ans100_"+j);
                        if(sel==false)
                                { 
                                    if(j==0) {opt ="#shopt12"; brandRidotti.set(12,opt);}
                                    if(j==1) {opt ="#shopt13"; brandRidotti.set(13,opt);}
                                    if(j==3) {opt ="#shopt14"; brandRidotti.set(14,opt);}
                                    if(j==4) {opt ="#shopt15"; brandRidotti.set(15,opt);}
                                    if(j==5) {opt ="#shopt16"; brandRidotti.set(16,opt);}
                                    if(j==6) {opt ="#shopt17"; brandRidotti.set(17,opt);}
                                }
                        }

                }

                //q8a=2-3 mesi
                if(ansQ8a==1 || ansQ8a==2)
                {

                        //nascondo item da Q4bis
                        for(int j=0,11)
                        {
                        sel=system.getProperty("ans267_"+j);
                        if (sel==false)  {  opt ="#shopt"+j; brandRidotti.set(j,opt); }
                        else { if(j==11) { comp=system.getProperty("ans210_11_comp");  brandRidotti.set(j,comp);} }
                        }

                        //nascondo item da s10.1
                        for(int j=0,6)
                        {
                        sel=system.getProperty("ans93_"+j);
                        if(sel==false)
                                { 
                                    if(j==0) {opt ="#shopt12"; brandRidotti.set(12,opt);}
                                    if(j==1) {opt ="#shopt13"; brandRidotti.set(13,opt);}
                                    if(j==3) {opt ="#shopt14"; brandRidotti.set(14,opt);}
                                    if(j==4) {opt ="#shopt15"; brandRidotti.set(15,opt);}
                                    if(j==5) {opt ="#shopt16"; brandRidotti.set(16,opt);}
                                    if(j==6) {opt ="#shopt17"; brandRidotti.set(17,opt);}
                                }
                        }

                }

                //q8a=4 mesi +
                if(ansQ8a>2)
                {

                        //nascondo item da Q3
                        for(int j=0,11)
                        {
                        sel=system.getProperty("ans265_"+j);
                        if (sel==false)  {  opt ="#shopt"+j; brandRidotti.set(j,opt); }
                        else { if(j==11) { comp=system.getProperty("ans210_11_comp");  brandRidotti.set(j,comp);} }
                        }

                        //nascondo item da s10.0
                        for(int j=0,6)
                        {
                        sel=system.getProperty("ans92_"+j);
                        if(sel==false)
                                { 
                                    if(j==0) {opt ="#shopt12"; brandRidotti.set(12,opt);}
                                    if(j==1) {opt ="#shopt13"; brandRidotti.set(13,opt);}
                                    if(j==3) {opt ="#shopt14"; brandRidotti.set(14,opt);}
                                    if(j==4) {opt ="#shopt15"; brandRidotti.set(15,opt);}
                                    if(j==5) {opt ="#shopt16"; brandRidotti.set(16,opt);}
                                    if(j==6) {opt ="#shopt17"; brandRidotti.set(17,opt);}
                                }
                        }

                }

                validCount = 0;
                for(int j=0,17)
                {
                    label =brandRidotti.get(j);
                    valid=label.contains("#sh"); 
                    if (valid==false) { validCount=validCount+1; reCodB=j;}   
                }

                qid=baseQid+100*r1+15;
                qst = new question("choice", qid);
                qst.setProperty("text", "Ha iniziato ad utilizzare stick scaldati a marca <b>"+nam+" riducendo il consumo</b> di quale prodotto?");
                qst.setProperty("code", "Q8Cbl"+r1);
                qst.setProperty("options", brandRidotti);
                if(validCount==1)
                {
                    qst.setProperty("default_answer","{ 'selection': ["+reCodB+"]}");
                    qst.setProperty("hidden", true);
                }
                send qst;


                //CONTROLLO PER SOAT SECTION RIDUZIONE
                for(int k=0,10)
                    {
                    ansId=system.getProperty("ans"+qid);
                        if (ansId==k) 
                        {  
                            //assegno ad 1 mese
                            if(ansQ8a==0)
                            {
                                if (k == 0 && hasLucSwitch30 == false) { hasLucSwitch30 = true; }
                                if (k == 1 && hasNeoSwitch30 == false) { hasNeoSwitch30 = true; }
                                if (k == 2 && hasVeoSwitch30 == false) { hasVeoSwitch30 = true; }
                                if (k == 3 && hasFiiSwitch30 == false) { hasFiiSwitch30 = true; }
                                if (k == 4 && hasHeeSwitch30 == false) { hasHeeSwitch30 = true; }
                                if (k == 5 && hasTerSwitch30 == false) { hasTerSwitch30 = true; }
                                if (k == 6 && hasLevSwitch30 == false) { hasLevSwitch30 = true; }
                                if (k == 7 && hasDelSwitch30 == false) { hasDelSwitch30 = true; }
                                if (k == 8 && hasCamSwitch30 == false) { hasCamSwitch30 = true; }
                                if (k == 9 && hasIdsSwitch30 == false) { hasIdsSwitch30 = true; }
                                if (k == 10 && hasIseSwitch30 == false) { hasIseSwitch30 = true; }

                            }

                            //2-3mesi
                            if(ansQ8a==1 || ansQ8a==2)
                            {
                                if (k == 0 && hasLucSwitch90 == false) { hasLucSwitch90 = true; }
                                if (k == 1 && hasNeoSwitch90 == false) { hasNeoSwitch90 = true; }
                                if (k == 2 && hasVeoSwitch90 == false) { hasVeoSwitch90 = true; }
                                if (k == 3 && hasFiiSwitch90 == false) { hasFiiSwitch90 = true; }
                                if (k == 4 && hasHeeSwitch90 == false) { hasHeeSwitch90 = true; }
                                if (k == 5 && hasTerSwitch90 == false) { hasTerSwitch90 = true; }
                                if (k == 6 && hasLevSwitch90 == false) { hasLevSwitch90 = true; }
                                if (k == 7 && hasDelSwitch90 == false) { hasDelSwitch90 = true; }
                                if (k == 8 && hasCamSwitch90 == false) { hasCamSwitch90 = true; }
                                if (k == 9 && hasIdsSwitch90 == false) { hasIdsSwitch90 = true; }
                                if (k == 10 && hasIseSwitch90 == false) { hasIseSwitch90 = true; }

                            }
                        }
                    }
                

                ansQ8c=system.getProperty("ans"+qid);
                cmd=brandRidotti.get(ansQ8c);
                system.out("<div>Q8c: "+cmd+"</div>");

                //8d
                if(ansQ8c==12 && ansQ8a<3)
                {

                            qid=baseQid+100*r1+20;
                            qst = new question("choice", qid);
                            qst.setProperty("text", "Lei ha dichiarato di aver ridotto il consumo di sigarette confezionate tradizionali. Potrebbe indicarci di quale marca ha ridotto il consumo?");
                            qst.setProperty("code", "Q8Dbl"+r1);
                            qst.setProperty("options", skubrandsOriginal1);

                            if(ansQ8a == 0) 
                            {
                                qst.setProperty("options", skubrandsOriginal1);
                                    if(countQ1mop==1)
                                    { 
                                    qst.setProperty("default_answer","{ 'selection': ["+reCodQ1mop+"]}");
                                    qst.setProperty("hidden", true);
                                    }
                                
                            }

                            else 
                            {
                                qst.setProperty("options", skubrands8);
                                if(countQ1bismop==1)
                                    { 
                                    qst.setProperty("default_answer","{ 'selection': ["+reCodQ1mop+"]}");
                                    qst.setProperty("hidden", true);
                                    }
                            }
                            send qst;

                            
                            
                }

            //Q8E – LUCKY STRIKE - NEO SKU – SWITCH IN/REDUCTION
            if(ansQ8c==0 && ansQ8a<3)
                {

                        vector LucRidotte = new vector {
                                    "Lucky Strike Balanced Tobacco",
                                    "Lucky Strike Golden Tobacco",
                                    "Lucky Strike Rich Tobacco",
                                    "Lucky Strike Twist",
                                    "Lucky Strike Ruby"
                            };

                            count=0;
                            for(int j=0,4)
                            {

                            if (ansQ8a==0) {sel=system.getProperty("ans270_0_"+j);} 
                            else  {sel=system.getProperty("ans270_1_"+j);} 

                            if (sel==false)  {  opt ="#shopt"+j; LucRidotte.set(j,opt); }
                            else { count=count+1; reCod=j; }
                            }


                            qid=baseQid+100*r1+28;
                            qst = new question("choice", qid);
                            qst.setProperty("text", "Lei ha dichiarato di aver ridotto il consumo di stick scaldati a marca <b>LUCKY STRIKE Designed by Glo</b>. <p>Potrebbe indicarci di quale/i stick scaldato/i ha ridotto il consumo?</p>");
                            qst.setProperty("code", "Q8ELbl"+r1);
                            qst.setProperty("selection", "multiple");
                            qst.setProperty("show_rand", true);
                            qst.setProperty("options", LucRidotte);
                            if(count==1)
                            {
                                qst.setProperty("default_answer","{ 'selection': ["+reCod+"]}");
                                qst.setProperty("hidden", true);
                            }
                            send qst;
                }   

    //8e LUCKY STRIKE - NEO SKU – SWITCH IN/REDUCTION
                if(ansQ8c==1 && ansQ8a<3)
                {

                        vector neoRidotte = new vector {
                                    "Neo Classic Tobacco",
                                    "Neo Golden Tobacco",
                                    "Neo Rich Tobacco",
                                    "Neo Smooth Tobacco",
                                    "Neo Terracotta Tobacco",
                                    "Neo Arctic ",
                                    "Neo Beryl",
                                    "Neo Scarlet "
                            };

                            count=0;
                            for(int j=0,7)
                            {

                            if (ansQ8a==0) {sel=system.getProperty("ans272_0_"+j);} 
                            else  {sel=system.getProperty("ans272_1_"+j);}                         

                            if (sel==false)  {  opt ="#shopt"+j; neoRidotte.set(j,opt); }
                            else { count=count+1; reCod=j; }
                            }


                            qid=baseQid+100*r1+25;
                            qst = new question("choice", qid);
                            qst.setProperty("text", "Lei ha dichiarato di aver ridotto il consumo di stick scaldati a marca <b>NEO</b>. <p>Potrebbe indicarci di quale/i stick scaldato/i ha ridotto il consumo?</p>");
                            qst.setProperty("code", "Q8ENbl"+r1);
                            qst.setProperty("selection", "multiple");
                            qst.setProperty("show_rand", true);
                            qst.setProperty("options", neoRidotte);
                            if(count==1)
                            {
                                qst.setProperty("default_answer","{ 'selection': ["+reCod+"]}");
                                qst.setProperty("hidden", true);
                            }
                            send qst;
                }

                //8f
                if(ansQ8c==5 && ansQ8a<3)
                        {
                        vector tereaRidotte = new vector {
                                "Terea Amber",
                                "Terea Bronze",
                                "Terea Russet",
                                "Terea Sienna",
                                "Terea Silver",
                                "Terea Teak",
                                "Terea Yellow",
                                "Terea Turquoise",
                                "Terea Warm Fuse",
                                "Terea Bright Fuse",
                                "Terea Cloud Fuse"
                            };

                            count=0;
                            for(int j=0,10)
                            {
                            if (ansQ8a==0) {sel=system.getProperty("ans276_0_"+j);} 
                            else  {sel=system.getProperty("ans276_1_"+j);}    

                            if (sel==false)  {  opt ="#shopt"+j; tereaRidotte.set(j,opt); }
                            else { count=count+1; reCod=j; }
                            }

                            qid=baseQid+100*r1+30;
                            qst = new question("choice", qid);
                            qst.setProperty("text", "Lei ha dichiarato di aver ridotto il consumo di stick scaldati a marca <b>TEREA</b>. <p>Potrebbe indicarci di quale/i stick scaldato/i ha ridotto il consumo?</p>");
                            qst.setProperty("code", "Q8Fbl"+r1);
                            qst.setProperty("selection", "multiple");
                            qst.setProperty("show_rand", true);
                            qst.setProperty("options", tereaRidotte);
                            if(count==1)
                            {
                                qst.setProperty("default_answer","{ 'selection': ["+reCod+"]}");
                                qst.setProperty("hidden", true);
                            }
                            send qst;

                        }        
            } //fine filtro riduzione

        if(ansQ8b==2)
        {

            vector brandSost = new vector {
                                    "Stick scaldati a marca LUCKY STRIKE Designed by Glo",
                                    "Stick scaldati a marca NEO",
                                    "Stick scaldati a marca VEO",
                                    "Stick scaldati a marca FiiT",
                                    "Stick scaldati a marca HEETS",
                                    "Stick scaldati a marca TEREA",
                                    "Stick scaldati a marca LEVIA",
                                    "Stick scaldati a marca DELIA",
                                    "Stick scaldati a marca CAMEL",
                                    "Stick scaldati a marca iD",
                                    "Stick scaldati a marca iSENZIA",
                                    "Stick scaldati a marca *FILL IN WITH VERBATIM SELECTED AT Q4*",
                                    "Prima utilizzavo sigarette confezionate tradizionali",
                                    "Prima utilizzavo sigarette arrotolate (con tabacco trinciato)",
                                    "Prima utilizzavo sigarette elettroniche ricaricabili con pod/cartucce preriempiti",
                                    "Prima utilizzavo sigarette elettroniche ricaricabili con flaconcini di liquido",
                                    "Prima utilizzavo sigarette elettroniche usa e getta",
                                    "Prima utilizzavo sacchetti di nicotina"
                    };
                

                //nasocndo item del blocco
                opt="#shopt"+r1;
                brandSost.set(r1,opt);

            //q8a=1mese
            if(ansQ8a==0)
            {
                    //nascondo item da s12 + s13
                    for(int j=0,11)
                    {
                    ansId=system.getProperty("ans220_"+j);
                    sel=system.getProperty("ans210_"+j);
                    if (sel==false)   {  opt ="#shopt"+j; brandSost.set(j,opt); }

                    if(sel==true)
                        {
                        if (ansId==0 || ansId==1)   {  opt ="#shopt"+j; brandSost.set(j,opt); }
                        else { if(j==11) { comp=system.getProperty("ans210_11_comp");  brandSost.set(j,comp);} }
                        }
                    }

                //nascondo item da s10
                for(int j=0,6)
                {
                
                        sel=system.getProperty("ans100_"+j);
                        if(sel==false)
                        { 
                            if(j==0) {opt ="#shopt12"; brandSost.set(12,opt);}
                            if(j==1) {opt ="#shopt13"; brandSost.set(13,opt);}
                            if(j==3) {opt ="#shopt14"; brandSost.set(14,opt);}
                            if(j==4) {opt ="#shopt15"; brandSost.set(15,opt);}
                            if(j==5) {opt ="#shopt16"; brandSost.set(16,opt);}
                            if(j==6) {opt ="#shopt17"; brandSost.set(17,opt);}
                        }

                        if(sel==true)
                        {
                                if(j==0) 
                                {  
                                    ansId=system.getProperty("ans130");
                                    if(ansId==0) {opt ="#shopt12"; brandSost.set(12,opt);}
                                }
                                if(j==1) 
                                {  
                                    ansId=system.getProperty("ans135");
                                    if(ansId==0) {opt ="#shopt13"; brandSost.set(13,opt);}
                                }

                                if(j==3 || j==4 || j==5) 
                                {  
                                    ansId=system.getProperty("ans115");
                                    if(ansId==0 || ansId==1) {
                                        opt ="#shopt14"; brandSost.set(14,opt);
                                        opt ="#shopt15"; brandSost.set(15,opt);
                                        opt ="#shopt16"; brandSost.set(16,opt);
                                    }
                                }

                                if(j==6) 
                                {  
                                    ansId=system.getProperty("ans137");
                                    if(ansId==0 || ansId==1) {opt ="#shopt17"; brandSost.set(17,opt);}
                                }

                        }
                    
                    }               


            }

            //q8a=2-3 mesi
            if(ansQ8a==1 || ansQ8a==2)
            {

                    //nascondo item da s12 + q4bis
                    for(int j=0,11)
                    {
                        sel=system.getProperty("ans210_"+j); //s12
                        selb=system.getProperty("ans267_"+j); //q4bis

                        // nascondo se non selezionato in q4bis
                        if (selb==false) { opt ="#shopt"+j; brandSost.set(j,opt); }

                        // se selezionato in q4bis
                        else { 
                            //se selezionato in q4
                            if(sel==true) { 
                                ansId=system.getProperty("ans220_"+j);
                                //nasondo se non selezionato opzione
                                if (ansId==0 || ansId==1)   {  opt ="#shopt"+j; brandSost.set(j,opt); }
                                else { if(j==11) { comp=system.getProperty("ans210_11_comp");  brandSost.set(j,comp);} }
                                }
                        }

                    }

                        //nascondo item da s10.1
                        for(int j=0,6)
                        {
                            sel=system.getProperty("ans93_"+j);
                            selb=system.getProperty("ans100_"+j);
                            if(sel==false)
                                    { 
                                        if(j==0) {opt ="#shopt12"; brandSost.set(12,opt);}
                                        if(j==1) {opt ="#shopt13"; brandSost.set(13,opt);}
                                        if(j==3) {opt ="#shopt14"; brandSost.set(14,opt);}
                                        if(j==4) {opt ="#shopt15"; brandSost.set(15,opt);}
                                        if(j==5) {opt ="#shopt16"; brandSost.set(16,opt);}
                                        if(j==6) {opt ="#shopt17"; brandSost.set(17,opt);}
                                    }
                            else 
                                {
                                if(selb==true)
                                        {
                                            if(j==0) 
                                            {  
                                                ansId=system.getProperty("ans130");
                                                if(ansId==0) {opt ="#shopt12"; brandSost.set(12,opt);}
                                            }
                                            if(j==1) 
                                            {  
                                                ansId=system.getProperty("ans135");
                                                if(ansId==0) {opt ="#shopt13"; brandSost.set(13,opt);}
                                            }

                                            if(j==3 || j==4 || j==5) 
                                            {  
                                                ansId=system.getProperty("ans115");
                                                if(ansId==0 || ansId==1) {
                                                    opt ="#shopt14"; brandSost.set(14,opt);
                                                    opt ="#shopt15"; brandSost.set(15,opt);
                                                    opt ="#shopt16"; brandSost.set(16,opt);
                                                }
                                            }

                                            if(j==6) 
                                            {  
                                                ansId=system.getProperty("ans137");
                                                if(ansId==0 || ansId==1) {opt ="#shopt17"; brandSost.set(17,opt);}
                                            }

                                    } 
                                }
                        }

            }
            
            //q8a=4 mesi +
            if(ansQ8a>2)
            {

                    //nascondo item da s12 + q3
                    for(int j=0,11)
                    {
                        sel=system.getProperty("ans210_"+j); //s12
                        selb=system.getProperty("ans265_"+j); //q3

                           // nascondo se non selezionato in q3
                        if (selb==false) { opt ="#shopt"+j; brandSost.set(j,opt); }

                        // se selezionato in q4bis
                        else { 
                            //se selezionato in q4
                            if(sel==true) { 
                                ansId=system.getProperty("ans220_"+j);
                                //nasondo se non selezionato opzione
                                if (ansId==0 || ansId==1)   {  opt ="#shopt"+j; brandSost.set(j,opt); }
                                else { if(j==11) { comp=system.getProperty("ans210_11_comp");  brandSost.set(j,comp);} }
                                }
                        }

                    }

                        //nascondo item da s10.0
                        for(int j=0,6)
                        {
                        sel=system.getProperty("ans92_"+j);
                        selb=system.getProperty("ans100_"+j);
                        if(sel==false)
                                { 
                                    if(j==0) {opt ="#shopt12"; brandSost.set(12,opt);}
                                    if(j==1) {opt ="#shopt13"; brandSost.set(13,opt);}
                                    if(j==3) {opt ="#shopt14"; brandSost.set(14,opt);}
                                    if(j==4) {opt ="#shopt15"; brandSost.set(15,opt);}
                                    if(j==5) {opt ="#shopt16"; brandSost.set(16,opt);}
                                    if(j==6) {opt ="#shopt17"; brandSost.set(17,opt);}
                                }

                                else 
                                {
                                if(selb==true)
                                        {
                                            if(j==0) 
                                            {  
                                                ansId=system.getProperty("ans130");
                                                if(ansId==0) {opt ="#shopt12"; brandSost.set(12,opt);}
                                            }
                                            if(j==1) 
                                            {  
                                                ansId=system.getProperty("ans135");
                                                if(ansId==0) {opt ="#shopt13"; brandSost.set(13,opt);}
                                            }

                                            if(j==3 || j==4 || j==5) 
                                            {  
                                                ansId=system.getProperty("ans115");
                                                if(ansId==0 || ansId==1) {
                                                    opt ="#shopt14"; brandSost.set(14,opt);
                                                    opt ="#shopt15"; brandSost.set(15,opt);
                                                    opt ="#shopt16"; brandSost.set(16,opt);
                                                }
                                            }

                                            if(j==6) 
                                            {  
                                                ansId=system.getProperty("ans137");
                                                if(ansId==0 || ansId==1) {opt ="#shopt17"; brandSost.set(17,opt);}
                                            }

                                    } 
                                }
                        }

            }

            validCount = 0;
            for(int j=0,17)
            {
                label =brandSost.get(j);
                valid=label.contains("#sh"); 
                if (valid==false) { validCount=validCount+1; reCodC=j;}   
            }

                qid=baseQid+100*r1+40;
                qst = new question("choice", qid);
                qst.setProperty("text", "Ha iniziato ad utilizzare stick scaldati a marca <b>"+nam+" sostituendo il consumo</b> di quale prodotto?  ");
                qst.setProperty("code", "Q8Gbl"+r1);
                qst.setProperty("options", brandSost);
                if(validCount==1)
                {
                    qst.setProperty("default_answer","{ 'selection': ["+reCodC+"]}");
                    qst.setProperty("hidden", true);
                }
                send qst;

                //CONTROLLO PER SOAT SECTION SOSTITUZIONE
                for(int k=0,10)
                    {
                    ansId=system.getProperty("ans"+qid);
                        if (ansId==k) 
                        {  
                            //assegno ad 1 mese
                            if(ansQ8a==0)
                            {
                                if (k == 0 && hasLucSwitch30 == false) { hasLucSwitch30 = true; }
                                if (k == 1 && hasNeoSwitch30 == false) { hasNeoSwitch30 = true; }
                                if (k == 2 && hasVeoSwitch30 == false) { hasVeoSwitch30 = true; }
                                if (k == 3 && hasFiiSwitch30 == false) { hasFiiSwitch30 = true; }
                                if (k == 4 && hasHeeSwitch30 == false) { hasHeeSwitch30 = true; }
                                if (k == 5 && hasTerSwitch30 == false) { hasTerSwitch30 = true; }
                                if (k == 6 && hasLevSwitch30 == false) { hasLevSwitch30 = true; }
                                if (k == 7 && hasDelSwitch30 == false) { hasDelSwitch30 = true; }
                                if (k == 8 && hasCamSwitch30 == false) { hasCamSwitch30 = true; }
                                if (k == 9 && hasIdsSwitch30 == false) { hasIdsSwitch30 = true; }
                                if (k == 10 && hasIseSwitch30 == false) { hasIseSwitch30 = true; }

                            }

                            //2-3mesi
                            if(ansQ8a==1 || ansQ8a==2)
                            {
                                if (k == 0 && hasLucSwitch90 == false) { hasLucSwitch90 = true; }
                                if (k == 1 && hasNeoSwitch90 == false) { hasNeoSwitch90 = true; }
                                if (k == 2 && hasVeoSwitch90 == false) { hasVeoSwitch90 = true; }
                                if (k == 3 && hasFiiSwitch90 == false) { hasFiiSwitch90 = true; }
                                if (k == 4 && hasHeeSwitch90 == false) { hasHeeSwitch90 = true; }
                                if (k == 5 && hasTerSwitch90 == false) { hasTerSwitch90 = true; }
                                if (k == 6 && hasLevSwitch90 == false) { hasLevSwitch90 = true; }
                                if (k == 7 && hasDelSwitch90 == false) { hasDelSwitch90 = true; }
                                if (k == 8 && hasCamSwitch90 == false) { hasCamSwitch90 = true; }
                                if (k == 9 && hasIdsSwitch90 == false) { hasIdsSwitch90 = true; }
                                if (k == 10 && hasIseSwitch90 == false) { hasIseSwitch90 = true; }

                            }
                        }
                    }

        ansQ8g=system.getProperty("ans"+qid);

            //8h
            if(ansQ8g==12 && ansQ8a<3)
            {
                qid=baseQid+100*r1+45;
                qst = new question("choice", qid);
                qst.setProperty("text", "Prima dello stick scaldato che utilizza, lei ha dichiarato di aver fatto uso di sigarette confezionate tradizionali. Potrebbe indicarci di quale marca si trattava?");
                qst.setProperty("code", "Q8Hbl"+r1);
                qst.setProperty("options", skubrandsOriginal1);

                        if(ansQ8a == 0) 
                        {
                         qst.setProperty("options", skubrandsOriginal1);
                                if(countQ1mop==1)
                                { 
                                qst.setProperty("default_answer","{ 'selection': ["+reCodQ1mop+"]}");
                                qst.setProperty("hidden", true);
                                }
                            
                        }
                        else 
                        {
                            qst.setProperty("options", skubrandsOriginal);
                            if(countQ1bismop==1)
                                { 
                                qst.setProperty("default_answer","{ 'selection': ["+reCodQ1mop+"]}");
                                qst.setProperty("hidden", true);
                                }
                        }
                send qst;
            }

            //Q8I – LUCKY STRIKE - NEO SKU – SWITCH IN/REDUCTION
            if(ansQ8g==0 && ansQ8a<3)
                {

                        vector LucSost = new vector {
                                    "Lucky Strike Balanced Tobacco",
                                    "Lucky Strike Golden Tobacco",
                                    "Lucky Strike Rich Tobacco",
                                    "Lucky Strike Twist",
                                    "Lucky Strike Ruby"
                            };

                            count=0;
                            for(int j=0,4)
                            {

                            if (ansQ8a==0) {sel=system.getProperty("ans270_0_"+j);} 
                            else  {sel=system.getProperty("ans270_1_"+j);} 

                            if (sel==false)  {  opt ="#shopt"+j; LucSost.set(j,opt); }
                            else { count=count+1; reCod=j; }
                            }


                            qid=baseQid+100*r1+52;
                            qst = new question("choice", qid);
                            qst.setProperty("text", "Prima dello stick scaldato che utilizza, lei ha dichiarato di aver fatto uso di stick scaldati a marca <b>LUCKY STRIKE Designed by GLO</b>. Potrebbe indicarci di quale/i stick scaldato/i si trattava?");
                            qst.setProperty("code", "Q8ILbl"+r1);
                            qst.setProperty("selection", "multiple");
                            qst.setProperty("show_rand", true);
                            qst.setProperty("options", LucSost);
                            if(count==1)
                            {
                                qst.setProperty("default_answer","{ 'selection': ["+reCod+"]}");
                                qst.setProperty("hidden", true);
                            }
                            send qst;
                }

            //8I LUCKY STRIKE - NEO SKU – SWITCH IN/REDUCTION
                if(ansQ8g==1 && ansQ8a<3)
                {

                        vector neoSost = new vector {
                                    "Neo Classic Tobacco",
                                    "Neo Golden Tobacco",
                                    "Neo Rich Tobacco",
                                    "Neo Smooth Tobacco",
                                    "Neo Terracotta Tobacco",
                                    "Neo Arctic ",
                                    "Neo Beryl",
                                    "Neo Scarlet "
                            };

                            count=0;
                            for(int j=0,7)
                            {

                            if (ansQ8a==0) {sel=system.getProperty("ans272_0_"+j);} 
                            else  {sel=system.getProperty("ans272_1_"+j);}                         

                            if (sel==false)  {  opt ="#shopt"+j; neoSost.set(j,opt); }
                            else { count=count+1; reCod=j; }
                            }


                            qid=baseQid+100*r1+50;
                            qst = new question("choice", qid);
                            qst.setProperty("text", "Prima dello stick scaldato che utilizza, lei ha dichiarato di aver fatto uso di stick scaldati a marca <b>NEO</b>. Potrebbe indicarci di quale/i stick scaldato/i si trattava?");
                            qst.setProperty("code", "Q8Ibl"+r1);
                            qst.setProperty("selection", "multiple");
                            qst.setProperty("show_rand", true);
                            qst.setProperty("options", neoSost);
                            if(count==1)
                            {
                                qst.setProperty("default_answer","{ 'selection': ["+reCod+"]}");
                                qst.setProperty("hidden", true);
                            }
                            send qst;
                }

                //Q8J – LUCKY STRIKE - TEREA SKU – SWITCH IN/SUBSTITUTION
                if(ansQ8g==5 && ansQ8a<3)
                        {
                        vector tereaSost = new vector {
                                "Terea Amber",
                                "Terea Bronze",
                                "Terea Russet",
                                "Terea Sienna",
                                "Terea Silver",
                                "Terea Teak",
                                "Terea Yellow",
                                "Terea Turquoise",
                                "Terea Warm Fuse",
                                "Terea Bright Fuse",
                                "Terea Cloud Fuse"
                            };

                            count=0;
                            for(int j=0,10)
                            {
                            if (ansQ8a==0) {sel=system.getProperty("ans276_0_"+j);} 
                            else  {sel=system.getProperty("ans276_1_"+j);}    

                            if (sel==false)  {  opt ="#shopt"+j; tereaSost.set(j,opt); }
                            else { count=count+1; reCod=j; }
                            }

                            qid=baseQid+100*r1+60;
                            qst = new question("choice", qid);
                            qst.setProperty("text", "Prima dello stick scaldato che utilizza, lei ha dichiarato di aver fatto uso di stick scaldati a marca <b>TEREA</b>. Potrebbe indicarci di quale/i stick scaldato/i si trattava?");
                            qst.setProperty("code", "Q8Jbl"+r1);
                            qst.setProperty("selection", "multiple");
                            qst.setProperty("show_rand", true);
                            qst.setProperty("options", tereaSost);
                            if(count==1)
                            {
                                qst.setProperty("default_answer","{ 'selection': ["+reCod+"]}");
                                qst.setProperty("hidden", true);
                            }
                            send qst;

                        }           

        }//fine filtro sostituzione

        if(ansQ8b==0)
        {

        vector brandAggiunti = new vector {
                                "Stick scaldati a marca LUCKY STRIKE Designed by Glo",
                                "Stick scaldati a marca NEO",
                                "Stick scaldati a marca VEO",
                                "Stick scaldati a marca FiiT",
                                "Stick scaldati a marca HEETS",
                                "Stick scaldati a marca TEREA",
                                "Stick scaldati a marca LEVIA",
                                "Stick scaldati a marca DELIA",
                                "Stick scaldati a marca CAMEL",
                                "Stick scaldati a marca iD",
                                "Stick scaldati a marca iSENZIA",
                                "Stick scaldati a marca *FILL IN WITH VERBATIM SELECTED AT Q4*",
                                "Prima utilizzavo sigarette confezionate tradizionali",
                                "Prima utilizzavo sigarette arrotolate (con tabacco trinciato)",
                                "Prima utilizzavo sigarette elettroniche ricaricabili con pod/cartucce preriempiti",
                                "Prima utilizzavo sigarette elettroniche ricaricabili con flaconcini di liquido",
                                "Prima utilizzavo sigarette elettroniche usa e getta",
                                "Prima utilizzavo sacchetti di nicotina"
                };

                //nasocndo item del blocco
                opt="#shopt"+r1;
                brandAggiunti.set(r1,opt);


                //q8a=1mese
                if(ansQ8a==0)
                {
                        //nascondo item da s12
                        for(int j=0,11)
                        {
                        sel=system.getProperty("ans210_"+j);
                        if (sel==false)  {  opt ="#shopt"+j; brandAggiunti.set(j,opt); }
                        else { if(j==11) { comp=system.getProperty("ans210_11_comp");  brandAggiunti.set(j,comp);} }
                        }

                        //nascondo item da s10
                        for(int j=0,6)
                        {
                        sel=system.getProperty("ans100_"+j);
                        if(sel==false)
                                { 
                                    if(j==0) {opt ="#shopt12"; brandAggiunti.set(12,opt);}
                                    if(j==1) {opt ="#shopt13"; brandAggiunti.set(13,opt);}
                                    if(j==3) {opt ="#shopt14"; brandAggiunti.set(14,opt);}
                                    if(j==4) {opt ="#shopt15"; brandAggiunti.set(15,opt);}
                                    if(j==5) {opt ="#shopt16"; brandAggiunti.set(16,opt);}
                                    if(j==6) {opt ="#shopt17"; brandAggiunti.set(17,opt);}
                                }
                        }                   
                }

                //q8a=2-3 mesi
                if(ansQ8a==1 || ansQ8a==2)
                {

                        //nascondo item da Q4bis
                        for(int j=0,11)
                        {
                        sel=system.getProperty("ans267_"+j);
                        if (sel==false)  {  opt ="#shopt"+j; brandAggiunti.set(j,opt); }
                        else { if(j==11) { comp=system.getProperty("ans210_11_comp");  brandAggiunti.set(j,comp);} }
                        }

                        //nascondo item da s10.1
                        for(int j=0,6)
                        {
                        sel=system.getProperty("ans93_"+j);
                        if(sel==false)
                                { 
                                    if(j==0) {opt ="#shopt12"; brandAggiunti.set(12,opt);}
                                    if(j==1) {opt ="#shopt13"; brandAggiunti.set(13,opt);}
                                    if(j==3) {opt ="#shopt14"; brandAggiunti.set(14,opt);}
                                    if(j==4) {opt ="#shopt15"; brandAggiunti.set(15,opt);}
                                    if(j==5) {opt ="#shopt16"; brandAggiunti.set(16,opt);}
                                    if(j==6) {opt ="#shopt17"; brandAggiunti.set(17,opt);}
                                }
                        }

                }

                //q8a=4 mesi +
                if(ansQ8a>2)
                {

                        //nascondo item da Q3
                        for(int j=0,11)
                        {
                        sel=system.getProperty("ans265_"+j);
                        if (sel==false)  {  opt ="#shopt"+j; brandAggiunti.set(j,opt); }
                        else { if(j==11) { comp=system.getProperty("ans210_11_comp");  brandAggiunti.set(j,comp);} }
                        }

                        //nascondo item da s10.0
                        for(int j=0,6)
                        {
                        sel=system.getProperty("ans92_"+j);
                        if(sel==false)
                                { 
                                    if(j==0) {opt ="#shopt12"; brandAggiunti.set(12,opt);}
                                    if(j==1) {opt ="#shopt13"; brandAggiunti.set(13,opt);}
                                    if(j==3) {opt ="#shopt14"; brandAggiunti.set(14,opt);}
                                    if(j==4) {opt ="#shopt15"; brandAggiunti.set(15,opt);}
                                    if(j==5) {opt ="#shopt16"; brandAggiunti.set(16,opt);}
                                    if(j==6) {opt ="#shopt17"; brandAggiunti.set(17,opt);}
                                }
                        }

                }

                validCount = 0;
                for(int j=0,17)
                {
                    label =brandAggiunti.get(j);
                    valid=label.contains("#sh"); 
                    if (valid==false) { validCount=validCount+1; reCodB=j;}   
                }

                qid=baseQid+100*r1+65;
                qst = new question("choice", qid);
                qst.setProperty("text", "Ha iniziato ad utilizzare stick scaldati a marca <b>"+nam+" aggiungendoli al consumo</b> di quale prodotto?");
                qst.setProperty("code", "Q8Kbl"+r1);
                qst.setProperty("options", brandAggiunti);
                if(validCount==1)
                {
                    qst.setProperty("default_answer","{ 'selection': ["+reCodB+"]}");
                    qst.setProperty("hidden", true);
                }
                send qst;

                ansQ8k=system.getProperty("ans"+qid);
                cmd=brandAggiunti.get(ansQ8k);
                system.out("<div>Q8K: "+cmd+"</div>");

        }//fine filtro aggiunta

    }//fine loop valid

if (r1==10) { r1=0;}	
else { r1=r1+1;}

}//fine loop sezione switch


/////  **** SOAT SECTION ****  /////


system.out("<div>hasLucSwitch30: "+hasLucSwitch30+"</div>");
system.out("<div>hasNeoSwitch30: "+hasNeoSwitch30+"</div>");
system.out("<div>hasVeoSwitch30: "+hasVeoSwitch30+"</div>");
system.out("<div>hasFiiSwitch30: "+hasFiiSwitch30+"</div>");
system.out("<div>hasHeeSwitch30: "+hasHeeSwitch30+"</div>");
system.out("<div>hasTerSwitch30: "+hasTerSwitch30+"</div>");
system.out("<div>hasLevSwitch30: "+hasLevSwitch30+"</div>");
system.out("<div>hasDelSwitch30: "+hasDelSwitch30+"</div>");
system.out("<div>hasCamSwitch30: "+hasCamSwitch30+"</div>");
system.out("<div>hasIdsSwitch30: "+hasIdsSwitch30+"</div>");
system.out("<div>hasIseSwitch30: "+hasIseSwitch30+"</div>");

system.out("<div>hasLucSwitch90: "+hasLucSwitch90+"</div>");
system.out("<div>hasNeoSwitch90: "+hasNeoSwitch90+"</div>");
system.out("<div>hasVeoSwitch90: "+hasVeoSwitch90+"</div>");
system.out("<div>hasFiiSwitch90: "+hasFiiSwitch90+"</div>");
system.out("<div>hasHeeSwitch90: "+hasHeeSwitch90+"</div>");
system.out("<div>hasTerSwitch90: "+hasTerSwitch90+"</div>");
system.out("<div>hasLevSwitch90: "+hasLevSwitch90+"</div>");
system.out("<div>hasDelSwitch90: "+hasDelSwitch90+"</div>");
system.out("<div>hasCamSwitch90: "+hasCamSwitch90+"</div>");
system.out("<div>hasIdsSwitch90: "+hasIdsSwitch90+"</div>");
system.out("<div>hasIseSwitch90: "+hasIseSwitch90+"</div>");

baseQid=20000;


for(int i=0,10)
{

r2=(int)indici.get(i);
reCod=2;

if(r2==0) {hasTotSwitch30=hasLucSwitch30;}
if(r2==1) {hasTotSwitch30=hasNeoSwitch30;}
if(r2==2) {hasTotSwitch30=hasVeoSwitch30;}
if(r2==3) {hasTotSwitch30=hasFiiSwitch30;}
if(r2==4) {hasTotSwitch30=hasHeeSwitch30;}
if(r2==5) {hasTotSwitch30=hasTerSwitch30;}
if(r2==6) {hasTotSwitch30=hasLevSwitch30;}
if(r2==7) {hasTotSwitch30=hasDelSwitch30;}
if(r2==8) {hasTotSwitch30=hasCamSwitch30;}
if(r2==9) {hasTotSwitch30=hasIdsSwitch30;}
if(r2==10){hasTotSwitch30=hasIseSwitch30;}
if(r2==0) {hasTotSwitch90=hasLucSwitch90;}
if(r2==1) {hasTotSwitch90=hasNeoSwitch90;}
if(r2==2) {hasTotSwitch90=hasVeoSwitch90;}
if(r2==3) {hasTotSwitch90=hasFiiSwitch90;}
if(r2==4) {hasTotSwitch90=hasHeeSwitch90;}
if(r2==5) {hasTotSwitch90=hasTerSwitch90;}
if(r2==6) {hasTotSwitch90=hasLevSwitch90;}
if(r2==7) {hasTotSwitch90=hasDelSwitch90;}
if(r2==8) {hasTotSwitch90=hasCamSwitch90;}
if(r2==9) {hasTotSwitch90=hasIdsSwitch90;}
if(r2==10) {hasTotSwitch90=hasIseSwitch90;}


sel=system.getProperty("ans210_"+r2);
if(sel==true)
{
ansId=system.getProperty("ans220_"+r2);
if (ansId==2 && hasTotSwitch30==false) { reCod=0;}
}

sel=system.getProperty("ans210_"+r2);
selb=system.getProperty("ans267_"+r2);

if(selb==true && sel==false && hasTotSwitch90==false){ reCod=1;}

qid=baseQid+100*r2;
qst = new question("choice", qid);
qst.setProperty("text", "USER NOT ACTIVE NOT SWITCHOUT");
qst.setProperty("code", "NOTACTIVEbl"+r2);
vector active = new vector {
"L30D",
"L3M",
"Nessuno"
};
qst.setProperty("options", active);
qst.setProperty("default_answer","{ 'selection': ["+reCod+"]}");
qst.setProperty("hidden", true);
send qst;

ansId=system.getProperty("ans"+qid);
cmd=active.get(ansId);
system.out("<div>HIDDEN VARIABLE SOAT: "+cmd+"</div>"); 

if(ansId !=2)
    {
        nam=elementPrio.get(r2);
        if(ansId==0) { qtext="30 giorni";}
        if(ansId==1) { qtext="3 mesi";}

        qid=baseQid+100*r2+10;
        qst = new question("choice", qid);
        qst.setProperty("text", "<p>Lei ha utilizzato gli stick scaldati a marca <b>"+nam+"</b> meno di una volta alla settimana negli ultimi "+qtext+".</p> Prima degli ultimi "+qtext+", <b>con quale frequenza li utilizzava</b>? ");
        qst.setProperty("code", "soatbl"+r2);
        vector soat_opts = new vector {
            "Almeno una volta al giorno",
            "Almeno una volta alla settimana",
            "Una volta al mese / meno di una volta al mese",
            "Li ho provati ma non li ho mai utilizzati"
        };
        qst.setProperty("options", soat_opts);
        send qst;
    }

if (r2==10) { r2=0;}	
else { r2=r2+1;}

}

/////  **** DAC SECTION ****  /////

//DAC SECTION

if (selS10_1==true)
 {

    ansId=system.getProperty("ans130");
    if(ansId==0)
    {
        qst = new question("open", 400);
        qst.setProperty("text", "Di solito, quante <b>sigarette confezionate tradizionali fuma al giorno?</b> ");
        qst.setProperty("code", "q19");
        qst.setProperty("view", "numeric");
        qst.setProperty("validation_rule", "^[1-9]|[1-9][0-9]|100$");
        qst.setProperty("validation_error", "Indicare un numero compreso tra 1 e 100");
        send qst;
    }

 }


if (selS10_2==true)
 {

    ansId=system.getProperty("ans135");
    if(ansId==0)
    {
        qst = new question("open", 405);
        qst.setProperty("text", "Di solito, quante <b>sigarette arrotolate (con tabacco trinciato) fuma al giorno</b>?  ");
        qst.setProperty("code", "q20");
        qst.setProperty("view", "numeric");
        qst.setProperty("validation_rule", "^[1-9]|[1-9][0-9]|100$");
        qst.setProperty("validation_error", "Indicare un numero compreso tra 1 e 100");
        send qst;
    }

 }

 qst = new question("choice", 410);
 qst.setProperty("text", "Negli ultimi 7 giorni, ha usato <b>stick con o senza tabacco scaldati da un device alimentato a batteria</b>?");
 qst.setProperty("code", "q21a");
 vector q410_opts = new vector {
"Sì, tutti i giorni",
"Sì, qualche giorno"
 };
 qst.setProperty("options", q410_opts);
 send qst;

 ansId=system.getProperty("ans410");
 if (ansId==0)
 {
        qst = new question("open", 420);
        qst.setProperty("text", "E quanti<b> stick con o senza tabacco scaldati da un device alimentato a batteria sta usando al giorno</b>, considerando tutti gli stick di tutte le marche che sta utilizzando?  ");
        qst.setProperty("code", "q21b");
        qst.setProperty("view", "numeric");
        qst.setProperty("validation_rule", "^[1-9]|[1-4][0-9]|50$");
        qst.setProperty("validation_error", "Indicare un numero compreso tra 1 e 50");
        send qst;

        totStick=(int)system.getProperty("ans420");
        totStick=totStick*7;
 }

 else 
 {
        qst = new question("open", 425);
        qst.setProperty("text", "E quanti giorni ha usato stick scaldati con o senza tabacco negli ultimi 7 giorni? ");
        qst.setProperty("code", "q21c");
        qst.setProperty("view", "numeric");
        if(autotest !="1") { qst.setProperty("validation_rule", "^[1-6]$"); }
        qst.setProperty("validation_error", "Indicare un numero compreso tra 1 e 6");
        send qst;

        n=(int)system.getProperty("ans425");

        qst = new question("open", 430);
        qst.setProperty("text", "E in questi "+n+" giorni, quanti stick scaldati con o senza tabacco ha usato all’incirca al giorno? <p>Consideri tutti gli stick di tutte le marche che sta utilizzando.</p>");
        qst.setProperty("code", "q21d");
        qst.setProperty("view", "numeric");
        qst.setProperty("validation_rule", "^[1-9]|[1-4][0-9]|50$");
        qst.setProperty("validation_error", "Indicare un numero compreso tra 1 e 50");
        send qst;

        selintCheck=(int)system.getProperty("ans430");
        totStick=selintCheck*n; 
        
 }


vector q450_opts = new vector {
"LUCKY STRIKE Designed for Glo",
"NEO",
"VEO",
"FiiT",
"HEETS",
"TEREA",
"LEVIA",
"DELIA",
"CAMEL for Ploom",
"iD",
"iSENZIA",
"Altra marca "
};

count=12;

for(int i=0,11)
{
sel=system.getProperty("ans210_"+i);
ansId=system.getProperty("ans220_"+i);

if (sel==false)
    {
        count=count-1;
        opt = "#shopt" + i; 
        q450_opts.set(i, opt);
    }

if(sel==true)
    {
    if (i == 11) 
        { 
            comp = system.getProperty("ans210_11_comp");
            q450_opts.set(i, comp);
        }
        
        if(ansId==2)
            {
            count=count-1;
            opt = "#shopt" + i; 
            q450_opts.set(i, opt); 
            }
    }

}


system.setProperty("totStick", totStick);
string mozCode="<script>$(window).load(function() {initializeValidation();});</script>";



if(count>1 && totStick>1)
{
     qst = new question("fixed_sum", 450);
    qst.setProperty("text" ,"Come ripatisce i "+totStick+" stick scaldati con o senza tabacco che ha dichiarato usare negli ultimi 7 giorni tra le marche che usa? <br/> La somma deve fare "+totStick+".</p>"+mozCode);
    qst.setProperty("fields", q450_opts);
    qst.setProperty("sum", totStick); 
    qst.setProperty("unit" ," stick");  
    //qst.setProperty("operator", "<="); //set total value parameter
    qst.setProperty("show_sum", true);
    if(autotest !="1") {send qst; }
}


if (selS10_7==true) 
{
   ansId=system.getProperty("ans137");
   if(ansId==0 || ansId ==1)
   {

    qst = new question("choice", 501);
    qst.setProperty("text", "Negli ultimi 7 giorni, ha usato <b>sacchetti di nicotina</b>?");
    qst.setProperty("code", "q23a");
    vector q501_opts = new vector {
        "Sì, tutti i giorni",
        "Sì, qualche giorno"
    };
    qst.setProperty("options", q501_opts);
    send qst;

    ansId=system.getProperty("ans501");
    if(ansId==0)
    {
         qst = new question("open", 505);
        qst.setProperty("text", "E quanti <b>sacchetti di nicotina</b> sta usando al giorno?");
        qst.setProperty("code", "q23b");
        qst.setProperty("view", "numeric");
        qst.setProperty("validation_rule", "^[1-9]|[1-2][0-9]|30$");
        qst.setProperty("validation_error", "Indicare un numero compreso tra 1 e 30");
        send qst;
    }

    else
    {
        qst = new question("open", 525);
        qst.setProperty("text", "E quanti giorni ha usato <b>sacchetti di nicotina</b> negli ultimi 7 giorni? ");
        qst.setProperty("code", "q23c");
        qst.setProperty("view", "numeric");
        qst.setProperty("validation_rule", "^[1-6]$");
        qst.setProperty("validation_error", "Indicare un numero compreso tra 1 e 6");
        send qst;

        n=1;
        n=(int)system.getProperty("ans525");

        qst = new question("open", 530);
        qst.setProperty("text", "E in questi "+n+" giorni, quanti <b>sacchetti di nicotina</b> ha usato all’incirca al giorno?");
        qst.setProperty("code", "q23d");
        qst.setProperty("view", "numeric");
        qst.setProperty("validation_rule", "^[1-9]|[1-2][0-9]|30$");
        qst.setProperty("validation_error", "Indicare un numero compreso tra 1 e 30");
        send qst;
    }

   }
}



if (selS10_4==true) 
{
    ansId=system.getProperty("ans115");
    if(ansId!=2)
    {
        qst = new question("choice", 600);
        qst.setProperty("text", "In media per settimana quante cartucce ricaricabili per sigarette elettroniche utilizza?");
        qst.setProperty("code", "q24");
        vector q600_opts = new vector {
        "Mezza cartuccia",
        "1 cartuccia",
        "1 cartuccia e mezza",
        "2 cartucce",
        "2 cartucce e mezza",
        "3 cartucce",
        "3 cartucce e mezza",
        "4 cartucce",
        "4 cartucce e mezza",
        "5 cartucce o più"
        };
        qst.setProperty("options", q600_opts);
        send qst;
    }
}

if (selS10_5==true) 
{
    ansId=system.getProperty("ans115");
    if(ansId!=2)
    {
        qst = new question("choice", 610);
        qst.setProperty("text", "In media per settimana quante bottigliette di liquido da 10 ml consumi?");
        qst.setProperty("code", "q25");
        vector q610_opts = new vector {
            "Mezza bottiglietta di liquido",
            "1 bottiglietta di liquido",
            "1 bottiglietta e mezza di liquido",
            "2 bottigliette di liquido",
            "2 bottigliette e mezza di liquido",
            "3  bottigliette di liquido",
            "3 bottigliette e mezza di liquido",
            "4 bottigliette di liquido o più"
        };
        qst.setProperty("options", q610_opts);
        send qst;
    }
}

if (selS10_6==true) 
{
   ansId=system.getProperty("ans115");
    if(ansId!=2)
    {
        qst = new question("choice", 620);
        qst.setProperty("text", "In media per settimana quante sigarette elettroniche usa e getta utilizza?");
        qst.setProperty("code", "q26");
        vector q620_opts = new vector {
            "Mezza sigaretta elettronica usa e getta",
            "1 sigaretta elettronica usa e getta",
            "1 sigaretta elettronica usa e getta e mezza",
            "2 sigarette elettroniche usa e getta",
            "2 sigarette elettroniche usa e getta e mezza",
            "3 sigarette elettroniche usa e getta",
            "3 sigarette elettroniche usa e getta e mezza",
            "4 sigarette elettroniche usa e getta",
            "4 sigarette elettroniche usa e getta e mezza",
            "5 sigarette elettroniche usa e getta o più"
        };
        qst.setProperty("options", q620_opts);
        send qst;
    }
}

 ///  ** AD-HOC SECTION ** ///

sel=system.getProperty("ans260_2");
if (sel==true) 
{ 

    qst = new question("choice", 711);
    qst.setProperty("text", "Sa di che cosa sono composti gli sticks di <b>VEO</b>?");
    qst.setProperty("code", "q100");
    qst.setProperty("show_rand", true);
    vector q711_opts = new vector {
    "Foglie di tabacco",
    "Foglie di thè",
    "Foglie di Rooibos",
    "Foglie di Matcha",
    "Cellulosa",
    "Non saprei#se#sf"
    };
    qst.setProperty("options", q711_opts);
    send qst;

    qst = new question("choice", 722);
    qst.setProperty("text", "Negli sticks di <b>VEO</b> è presente una capsula nel filtro?");
    qst.setProperty("code", "Q101");
    vector q722_opts = new vector {
    "Sì, è presente",
    "No, non è presente",
    "Non saprei "
    };
    qst.setProperty("options", q722_opts);
    send qst; 

    qst = new question("choice", 727);
    qst.setProperty("text", "In futuro, con quale probabilità prenderebbe in considerazione di utilizzare gli stick scaldati a marca <b>VEO</b>?");
    qst.setProperty("code", "Q102");
    vector q727_opts = new vector {
    "Sicuramente la prenderei in considerazione",
    "Probabilmente la prenderei in considerazione",
    "Forse la prenderei in considerazione o forse no",
    "Probabilmente non la prenderei in considerazione",
    "Sicuramente non la prenderei in considerazione"
    };
    qst.setProperty("options", q727_opts);
    send qst;

    ansId=system.getProperty("ans727");
    if (ansId<3)
    { 
    qst = new question("choice", 729);
    qst.setProperty("text", "Per quali motivi considererebbe la marca <b>VEO</b>?<br/> Può selezionare più risposte. ");
    qst.setProperty("code", "Q103");
    qst.setProperty("selection", "multiple");
    qst.setProperty("show_rand", true);
    vector q729_opts = new vector {
    "Per la categoria di prodotto",
    "Per la compatibilità con la marca Glo",
    "Mi piace la marca VEO",
    "Per i gusti aromatizzati",
    "Per la presenza della capsula",
    "Per l’assenza di tabacco",
    "Per la presenza di altri ingredienti naturali (Foglie di Rooibos)",
    "Altro (specificare)#so#sf"

    };
    qst.setProperty("options", q729_opts);
    send qst;
    }

    else 
    {
        qst = new question("choice", 731);
        qst.setProperty("text", "Per quali motivi NON considererebbe la marca <b>VEO</b>?  <br/>Può selezionare più risposte. ");
        qst.setProperty("code", "q104");
        qst.setProperty("selection", "multiple");
        qst.setProperty("show_rand", true);
        vector q731_opts = new vector {
            "Per la categoria di prodotto",
            "Per la compatibilità con la marca Glo",
            "Non mi piace la marca VEO",
            "Per i gusti aromatizzati",
            "Per la presenza della capsula",
            "Per l’assenza di tabacco",
            "Per la presenza di altri ingredienti naturali (Foglie di Rooibos)",
            "Altro (specificare)#so#sf"

        };
        qst.setProperty("options", q731_opts);
        send qst;
    }

}

sel=system.getProperty("ans260_6");
if (sel==true) 
{ 

qst = new question("choice", 751);
qst.setProperty("text", "Sa di che cosa sono composti gli sticks di <b>LEVIA</b>?");
qst.setProperty("code", "q105");
qst.setProperty("show_rand", true);
vector q711_opts = new vector {
"Foglie di tabacco",
"Foglie di thè",
"Foglie di Rooibos",
"Foglie di Matcha",
"Cellulosa",
"Non saprei#se#sf"
};
qst.setProperty("options", q711_opts);
send qst;

 qst = new question("choice", 752);
    qst.setProperty("text", "Negli sticks di <b>LEVIA</b> è presente una capsula nel filtro?");
    qst.setProperty("code", "Q106");
    vector q752_opts = new vector {
    "Sì, è presente",
    "No, non è presente",
    "Non saprei "
    };
    qst.setProperty("options", q752_opts);
    send qst; 

    qst = new question("choice", 757);
    qst.setProperty("text", "In futuro, con quale probabilità prenderebbe in considerazione di utilizzare gli stick scaldati a marca <b>LEVIA</b>?");
    qst.setProperty("code", "Q107");
    vector q757_opts = new vector {
    "Sicuramente la prenderei in considerazione",
    "Probabilmente la prenderei in considerazione",
    "Forse la prenderei in considerazione o forse no",
    "Probabilmente non la prenderei in considerazione",
    "Sicuramente non la prenderei in considerazione"
    };
    qst.setProperty("options", q757_opts);
    send qst;

    ansId=system.getProperty("ans757");
    if (ansId<3)
    { 
    qst = new question("choice", 759);
    qst.setProperty("text", "Per quali motivi considererebbe la marca <b>LEVIA</b>?<br/> Può selezionare più risposte. ");
    qst.setProperty("code", "Q108");
    qst.setProperty("selection", "multiple");
    qst.setProperty("show_rand", true);
    vector q759_opts = new vector {
"Per la categoria di prodotto",
"Per la compatibilità con la marca IQOS",
"Mi piace la marca LEVIA",
"Per i gusti aromatizzati",
"Per l’assenza di tabacco",
"Per la presenza di altri ingredienti naturali (Cellulosa)",
    "Altro (specificare)#so#sf"

    };
    qst.setProperty("options", q759_opts);
    send qst;
    }

    else 
    {
        qst = new question("choice", 761);
        qst.setProperty("text", "Per quali motivi NON considererebbe la marca <b>LEVIA</b>?  <br/>Può selezionare più risposte. ");
        qst.setProperty("code", "q109");
        qst.setProperty("selection", "multiple");
        qst.setProperty("show_rand", true);
        vector q761_opts = new vector {
"Per la categoria di prodotto",
"Per la compatibilità con la marca IQOS",
"Non mi piace la marca LEVIA",
"Per i gusti aromatizzati",
"Per l’assenza di tabacco",
"Per la presenza di altri ingredienti naturali (Cellulosa)",
            "Altro (specificare)#so#sf"

        };
        qst.setProperty("options", q761_opts);
        send qst;
    }

}

}